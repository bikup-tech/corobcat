{"version":3,"sources":["routes/routes.ts","constants/apiConstants.ts","redux/actions/actionTypes.ts","constants/machineNames.ts","utils/createCreateTaskEndpointBodyObject.ts","redux/actions/mainActions.ts","components/FormikComponents/FormikTextField.tsx","pages/AdminProfilePage/components/EmployeesTab/CreateEmployeeForm.tsx","pages/AdminProfilePage/components/DeletableItemCard.tsx","pages/AdminProfilePage/components/EmployeesTab/EmployeesTab.tsx","pages/AdminProfilePage/components/GeneralSettingsTab/EditCorrectionalFactorForm.tsx","pages/AdminProfilePage/components/GeneralSettingsTab/GeneralSettingsTab.tsx","styles/styleConstants.ts","StyledComponents/StyledTableHeader.ts","pages/AdminProfilePage/components/TabPanel.tsx","pages/AdminProfilePage/AdminProfilePage.tsx","components/StandardLoading/StandardLoading.tsx","pages/AdminProfilePage/AdminProfilePageContainer.tsx","pages/AdminProfilePage/queries/useAdminProfilePageQuery.ts","components/AppInit/AppInit.tsx","components/FormikComponents/FormikSelect.tsx","utils/getColorByPriority.ts","components/CreateTaskDialog/components/PriorityBadge/PriorityBadge.tsx","components/CreateTaskDialog/CreateTaskDialog.tsx","components/CreateTaskDialog/CreateTaskDialogContainer.tsx","components/MUITable/SCMuiTable.ts","components/MUITable/EnhancedTableHead/EnhancedTableHead.tsx","components/TaskStatus/TaskStatus.tsx","utils/formatDate.ts","components/MUITable/setTableRowBackgroundColorByPriority.ts","components/MUITable/EnhancedEmployeeTable/EnhancedEmployeeTable.tsx","components/TableHeaderInfoCard/TableHeaderInfoCard.tsx","utils/calculateTotalTime.ts","components/UserInfoHeader/UserInfoHeader.tsx","utils/calculateMachineGeneralValues.ts","pages/EmployeePage/EmployeePage.tsx","pages/EmployeePage/EmployeePageContainer.tsx","pages/EmployeePage/queries/useLoadEmployeeTasksQuery.ts","pages/EmployeesListPage/EmployeeCard/EmployeeCard.tsx","pages/EmployeesListPage/components/EmployeesListPage/EmployeesListPage.tsx","pages/EmployeesListPage/EmployeesListPageContainer.tsx","pages/EmployeesListPage/queries/useLoadEmployeesQuery.ts","constants/rolesByNumber.ts","components/MUITable/EnhancedFinishedTasksTable/EnhancedFinishedTasksTable.tsx","components/MUITable/FinishedTasksTableHeaderInfoCard/FinishedTasksTableHeaderInfoCard.tsx","pages/FinishedTasksPage/components/FinishedTasksInfoHeader.tsx","utils/calculateFinishedTasksGeneralValues.ts","pages/FinishedTasksPage/FinishedTasksPage.tsx","pages/FinishedTasksPage/FinishedTasksPageContainer.tsx","pages/FinishedTasksPage/queries/useLoadFinishedTasksQuery.ts","constants/taskStatus.ts","constants/errorMessages.ts","redux/actions/authActions.ts","components/LeftMenu/LeftMenu.tsx","components/Layout/Layout.tsx","pages/LoginPage/LoginPage.tsx","pages/MachinePage/components/FinishTaskButton/FinishTaskButton.tsx","pages/MachinePage/hooks/useFinishTaskDialog.tsx","components/MUITable/EnhancedTasksTable/EnhancedTasksTable.tsx","pages/MachinePage/components/MachineInfoHeader/MachineInfoHeader.tsx","utils/sortTasksByPriority.ts","pages/MachinePage/MachinePage.tsx","pages/MachinePage/MachinePageContainer.tsx","pages/MachinePage/queries/useLoadMachineTasksQuery.ts","pages/MachinesHomePage/SCMachinesHomePage.ts","components/MUITable/LiteTasksTable/LiteTasksTable.tsx","pages/MachinesHomePage/MachinesHomePage.tsx","pages/MachinesHomePage/MachinesHomePageContainer.tsx","pages/MachinesHomePage/queries/useMachinesHomeQuery.ts","components/ProtectedRoute/ProtectedRoute.tsx","components/SuperProtectedRoute/SuperProtectedRoute.tsx","redux/reducers/index.ts","redux/reducers/authReducer.ts","redux/reducers/mainReducer.ts","redux/store/configureStore.ts","redux/store/initialState.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["ROUTE_MACHINES","ROUTE_MACHINES_NAME_FACTORY","machineName","ROUTE_EMPLOYEES","ROUTE_FINISHEDTASKS","ROUTE_ADMIN_PROFILE","API_URL","ENDPOINT_SETTINGS","ENDPOINT_USERS_BY_ID","userId","ENDPOINT_USERS_ROLE","role","ENDPOINT_USER_BY_EMPLOYEE_CODE","employeeCode","ENDPOINT_TASKS_BY_STATUS","status","ENDPOINT_TASKS_BY_ID","taskId","ENDPOINT_MACHINES_BY_NAME","FORCE_RENDER","LOGIN_LOADING","LOGIN_SUCCESS","LOGIN_ERROR","LOGOUT","SET_CREATE_TASK_MODAL_ISOPEN","SET_CREATE_TASK_MODAL_SELECTED_MACHINE","LOAD_SETTINGS","MACHINE_1","MACHINE_2","createCreateTaskEndpointBodyObject","employee","machine","values","selectedMachine","toLowerCase","duration","Number","user","material","thickness","programNumber","priority","forceRender","type","setIsCreateTaskModalOpen","isOpen","payload","setCreateTaskModalSelectedMachine","loadSettings","dispatch","a","endpoint","axios","get","data","message","response","toast","error","StyledFormikTextFieldWrapper","styled","div","FormikTextField","props","formikContext","useFormikContext","name","label","placeholder","variant","size","margin","autofocus","fullWidth","adornment","disabled","min","max","className","TextField","onChange","target","setFieldValue","value","autoFocus","helperText","touched","errors","InputProps","inputProps","endAdornment","InputAdornment","position","StyledNewEmployeeFormContainer","StyledFlex100Height","StyledText","Typography","StyledButtonWrapper","StyledMargin","CreateEmployeeForm","Button","sx","width","height","fontSize","StyledDeletableItemCardContainer","li","DeletableItemCard","handleDelete","itemName","IconButton","onClick","cursor","color","StyledTabContainer","motion","attrs","initial","opacity","animate","StyledTabTitle","StyledEmployeesContainer","StyledEmployeeCardContainer","initialFormValues","surname","employerCode","validationSchema","Yup","required","EmployeesTab","employees","useDispatch","handleDeleteEmployee","delete","success","deleteEmployee","initialValues","onSubmit","body","post","createEmployee","noValidate","map","_id","StyledNewItemWrapper","EditCorrectionalFactorFrom","handleMachineClick","machineFormFieldName","setFieldTouched","toUpdateMachine","query","patch","updateCorrectionalFactor","disableElevation","StyledGroupWrapper","StyledListWrapper","ul","correctionalFactorMachine1","integer","correctionalFactorMachine2","GeneralSettingsTab","settings","useState","newMaterial","setNewMaterial","newThickness","setNewThickness","correctionalFactorInitialValues","handleDeleteMaterial","window","confirm","$pull","materials","handleDeleteThickness","thicknesses","deleteThickness","marginRight","$push","includes","replace","match","maxTableHeight","StyledTableHeaderWrapper","StyledTableHeaderInfoWrapper","StyledFlexGrow","TabPanel","children","index","hidden","id","style","Box","p","flex","StyledAdminProfileHeader","AdminProfilePage","history","useHistory","setValue","a11yProps","params","URLSearchParams","location","search","useEffect","tab","bgcolor","boxSizing","AppBar","Tabs","event","newValue","push","indicatorColor","textColor","Tab","StyledLoadingWrapper","StyledLoadingText","StandardLoading","text","CircularProgress","AdminProfilePageContainer","useQuery","useAdminProfilePageQuery","useSelector","state","mainReducer","isLoading","AppInit","companyName","StyledFormikSelectWrapper","FormikSelect","selectValues","item","FormControl","InputLabel","Select","labelId","defaultValue","MenuItem","FormHelperText","getColorByPriority","bgColor","StyledPriorityBadgeWrapper","StyledPriorityBadge","StyledPriorityText","span","formatTextByPriority","PriorityBadge","background","StyledCreateTaskDialogWrapper","Dialog","StyledFlexCenteredWrapper","machinesMock","CreateTaskDialog","handleClose","createTaskModal","correctionalFactor","resetForm","open","onClose","DialogTitle","textAlign","DialogContent","Grid","container","spacing","xs","DialogActions","CreateTaksDialogContainer","taskData","getEmployeeEndpoint","getMachineIdEndpoint","createTaskEndpoint","StyledTablePageContainer","StyledTableWrapper","EnhancedTasksTableHead","headCells","TableHead","TableRow","headCell","TableCell","align","padding","StyledTaskStatusContainer","StyledTaskText","statusText","statusTextColor","iconColor","statusBgColor","TaskStatus","formatDate","date","dayjs","format","setTableRowBackgroundColorByPriority","backgroundColor","EnhnacedEmployeeTasksTable","tasks","isError","React","page","setPage","rowsPerPage","setRowsPerPage","TableContainer","component","Paper","maxHeight","Table","minWidth","stickyHeader","TableBody","colSpan","task","border","end","start","TablePagination","rowsPerPageOptions","count","length","onPageChange","newPage","onRowsPerPageChange","parseInt","StyledTableHeaderInfoCardContainer","StyledInfoCardSeparator","StyledImportantCell","StyledValue","StyledTotalValue","TableHeaderInfoCard","machine1Tasks","machine1TimeToFinish","machine2Tasks","machine2TimeToFinish","totalTasks","totalTimeToFinish","alignItems","calculateTotalTime","reduce","accumulator","current","StyledInfoWrapper","UserInfoHeader","tasksData","filter","machine1","activeTasks","timeToFinish","machine2","calculateMachineGeneralValues","goBack","EmployeePage","EmployeePageContainer","employeeId","employeeTasks","sortedActiveTasks","sort","b","Date","sortedFinishedTasks","sortedTasks","refetchInterval","useLoadEmployeeTasksQuery","useParams","EmployeeCard","Card","CardContent","gutterBottom","CardActions","to","StyledEmployeePageContainer","EmployeesListPage","EmployeesListPageContainer","EnhancedFinishedTasksTable","FinishedTasksTableHeaderInfoCard","machine1Time","machine2Time","totalTime","StyledTableHeaderName","FinishedTasksInfoHeader","time","calculateFinishedTasksGeneralValues","FinishedTasksPage","FinishedTasksPageContainer","finishedTasks","aDate","ERROR_MESSAGE_INVALID_CREDENTIALS","userCode","loginError","errorMessage","LeftMenu","authReducer","Avatar","charAt","List","ListItem","disableGutters","activeClassName","ListItemButton","ListItemIcon","ListItemText","primary","disablePadding","pl","localStorage","removeItem","Layout","LoginPage","loginLoading","valueRef","useRef","warningMessage","setWarningMessage","handleLogInClick","setItem","JSON","stringify","elevation","inputRef","onKeyUp","key","FinishTaskButton","openFinishedTaskDialog","initialState","isAcceptButtonActive","useFinishTaskDialog","isFinishTaskDialogOpen","setIsFinishTaskDialogOpen","finishTaskDialogState","setFinishTaskDialogState","handleFinishTaskDialogClose","FinishTaskDialog","DialogContentText","marginTop","hasValue","prevState","updateTaskEndpoint","handleFinishTaskDialogOpen","StyledIconButton","EnhancedTaksTable","handleDeleteTask","marginLeft","StyledTableHeaderInfo","MachineInfoHeader","activeOrders","sortTasksByPriority","undefined","MachinePage","MachinePageContainer","endpoint2","machineId","useLoadMachineTasksQuery","handleTaskClick","deleteTask","StyledMachinesHomePageWrapper","StyledMachinesHomePageLoadingWrapper","MachinesHomePage","handleNewTaskClick","MachinesHomePageContainer","useMachinesHomeQuery","ProtectedRoute","path","Compo","exact","rest","render","SuperProtectedRoute","combineReducers","action","newState","configureStore","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","rootReducer","applyMiddleware","thunk","parse","getItem","queryClient","QueryClient","App","store","client","basename","toastOptions","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2c9de107.chunk.js","sourcesContent":["export const ROUTE_LOGIN = \"/\";\n\nexport const ROUTE_MACHINES = \"/machines\";\nexport const ROUTE_MACHINES_NAME = \"/machines/:machineName\";\n\nexport const ROUTE_MACHINES_NAME_FACTORY = (machineName: string) =>\n  `/machines/${machineName}`;\n\nexport const ROUTE_EMPLOYEES = \"/employees\";\nexport const ROUTE_EMPLOYEES_ID = \"/employees/:employeeId\";\nexport const ROUTE_EMPLOYEES_ID_FACTORY = (employeeId: string) =>\n  `/employees/${employeeId}`;\n\nexport const ROUTE_FINISHEDTASKS = \"/finishedTasks\";\n\nexport const ROUTE_ADMIN_PROFILE = \"/admin\";\n","export const API_URL = 'http://localhost:8000/api';\n\n// SETTINGS\nexport const ENDPOINT_SETTINGS = '/settings';\n\n// USERS\nexport const ENDPOINT_USERS = '/users';\nexport const ENDPOINT_USERS_BY_ID = (userId: string) => `/users/${userId}`;\nexport const ENDPOINT_USERS_ROLE = (role: number) => `/users/role/${role}`;\nexport const ENDPOINT_USER_BY_EMPLOYEE_CODE = (employeeCode: string) =>\n  `/users/code/${employeeCode}`;\nexport const ENDPOINT_USER_TASKS_BY_ID = (userId: string) =>\n  `/tasks/user/${userId}`;\n\n// TASKS\nexport const ENDPOINT_TASKS = '/tasks';\nexport const ENDPOINT_TASKS_BY_STATUS = (status: number) =>\n  `/tasks/active?status=${status}`;\nexport const ENDPOINT_TASKS_BY_ID = (taskId: string) => `/tasks/${taskId}`;\nexport const ENDPOINT_TASK_ACTIVE_BY_MACHINE_ID = (machineId: string) =>\n  `/tasks/active/machine/${machineId}`;\n\n// MACHINES\nexport const ENDPOINT_MACHINES = '/machines';\nexport const ENDPOINT_MACHINES_BY_NAME = (machineName: string) =>\n  `/machines/name/${machineName}`;\n\n// AUTH\nexport const ENDPOINT_AUTH = '/auth/login';\n","export const FORCE_RENDER = \"FORCE_RENDER\";\n// LOGIN\nexport const LOGIN_LOADING = \"LOGIN_LOADING\";\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const LOGIN_ERROR = \"LOGIN_ERROR\";\nexport const LOGOUT = \"LOGOUT\";\n\n// Create task modal\nexport const SET_CREATE_TASK_MODAL_ISOPEN = \"SET_CREATE_TASK_MODAL_ISOPEN\";\nexport const SET_CREATE_TASK_MODAL_SELECTED_MACHINE =\n  \"SET_CREATE_TASK_MODAL_SELECTED_MACHINE\";\n\n// SETTINGS\nexport const LOAD_SETTINGS = \"LOAD_SETTINGS\";\n","export const MACHINE_1 = 'maquina1';\nexport const MACHINE_2 = 'maquina2';\n","export default function createCreateTaskEndpointBodyObject(\n  employee: any,\n  machine: any,\n  values: any\n) {\n  return {\n    selectedMachine: values.selectedMachine.toLowerCase(),\n    duration: Number(values.duration),\n    user: employee,\n    machine: machine,\n    material: values.material,\n    thickness: Number(values.thickness),\n    programNumber: values.programNumber,\n    priority: Number(values.priority),\n  };\n}\n","import {\n  API_URL,\n  ENDPOINT_MACHINES_BY_NAME,\n  ENDPOINT_SETTINGS,\n  ENDPOINT_TASKS,\n  ENDPOINT_TASKS_BY_ID,\n  ENDPOINT_USERS,\n  ENDPOINT_USERS_BY_ID,\n  ENDPOINT_USER_BY_EMPLOYEE_CODE,\n} from '../../constants/apiConstants';\nimport {\n  FORCE_RENDER,\n  LOAD_SETTINGS,\n  SET_CREATE_TASK_MODAL_ISOPEN,\n  SET_CREATE_TASK_MODAL_SELECTED_MACHINE,\n} from './actionTypes';\n\nimport { MACHINE_1 } from '../../constants/machineNames';\nimport axios from 'axios';\nimport createCreateTaskEndpointBodyObject from '../../utils/createCreateTaskEndpointBodyObject';\nimport toast from 'react-hot-toast';\n\nexport function forceRender() {\n  return {\n    type: FORCE_RENDER,\n  };\n}\n\nexport function setIsCreateTaskModalOpen(isOpen: boolean) {\n  return {\n    type: SET_CREATE_TASK_MODAL_ISOPEN,\n    payload: isOpen,\n  };\n}\n\nexport function setCreateTaskModalSelectedMachine(machine: string) {\n  return {\n    type: SET_CREATE_TASK_MODAL_SELECTED_MACHINE,\n    payload: machine,\n  };\n}\n\nexport function updateCorrectionalFactor(machineName: string, value: number) {\n  return async (dispatch: any) => {\n    try {\n      const toUpdateMachine =\n        machineName === MACHINE_1\n          ? 'correctionalFactorMachine1'\n          : 'correctionalFactorMachine2';\n\n      const query = {\n        [toUpdateMachine]: value,\n      };\n\n      const endpoint = `${API_URL}${ENDPOINT_SETTINGS}`;\n      await axios.patch(endpoint, query);\n\n      toast.success('Actualizado!');\n\n      dispatch(forceRender());\n    } catch (error: any) {\n      toast.error(error.message);\n    }\n  };\n}\n\nexport function createNewMaterial(value: string) {\n  return async (dispatch: any) => {\n    try {\n      const query = {\n        $push: { materials: value },\n      };\n\n      const endpoint = `${API_URL}${ENDPOINT_SETTINGS}`;\n      await axios.patch(endpoint, query);\n\n      toast.success('Material añadido!');\n\n      dispatch(forceRender());\n    } catch (error: any) {\n      toast.error(error.message);\n    }\n  };\n}\n\nexport function createNewThickness(value: number) {\n  return async (dispatch: any) => {\n    try {\n      const query = {\n        $push: { thicknesses: value },\n      };\n\n      const endpoint = `${API_URL}${ENDPOINT_SETTINGS}`;\n      await axios.patch(endpoint, query);\n\n      toast.success('Espesor añadido!');\n\n      dispatch(forceRender());\n    } catch (error: any) {\n      toast.error(error.message);\n    }\n  };\n}\n\nexport function deleteMaterial(value: string) {\n  return async (dispatch: any) => {\n    try {\n      const query = {\n        $pull: { materials: value },\n      };\n\n      const endpoint = `${API_URL}${ENDPOINT_SETTINGS}`;\n      await axios.patch(endpoint, query);\n\n      toast.success('Material eliminado!');\n\n      dispatch(forceRender());\n    } catch (error: any) {\n      toast.error(error.message);\n    }\n  };\n}\n\nexport function deleteThickness(value: number) {\n  return async (dispatch: any) => {\n    try {\n      const query = {\n        $pull: { thicknesses: value },\n      };\n\n      const endpoint = `${API_URL}${ENDPOINT_SETTINGS}`;\n      await axios.patch(endpoint, query);\n\n      toast.success('Espesor eliminado!');\n\n      dispatch(forceRender());\n    } catch (error: any) {\n      toast.error(error.message);\n    }\n  };\n}\n\nexport function createEmployee(values: any) {\n  return async (dispatch: any) => {\n    try {\n      const body = {\n        role: 1,\n        name: `${values.name} ${values.surname}`,\n        employerCode: values.employerCode,\n      };\n\n      const endpoint = `${API_URL}${ENDPOINT_USERS}`;\n      await axios.post(endpoint, body);\n\n      toast.success('Empleado creado!');\n\n      dispatch(forceRender());\n    } catch (error: any) {\n      toast.error(error.message);\n    }\n  };\n}\n\nexport function deleteEmployee(userId: string) {\n  return async (dispatch: any) => {\n    try {\n      const endpoint = `${API_URL}${ENDPOINT_USERS_BY_ID(userId)}`;\n      await axios.delete(endpoint);\n\n      toast.success('Empleado eliminado!');\n\n      dispatch(forceRender());\n    } catch (error: any) {\n      toast.error(error.message);\n    }\n  };\n}\n\nexport function deleteTask(taskId: string) {\n  return async (dispatch: any) => {\n    try {\n      const endpoint = `${API_URL}${ENDPOINT_TASKS_BY_ID(taskId)}`;\n      await axios.delete(endpoint);\n\n      toast.success('Tarea eliminada!');\n\n      dispatch(forceRender());\n    } catch (error: any) {\n      const message = error?.response?.data?.message || error.message;\n      toast.error(message);\n    }\n  };\n}\n\nexport function finishTask(employeeCode: string, taskId: string) {\n  return async (dispatch: any) => {\n    try {\n      const getEmployeeEndpoint = `${API_URL}${ENDPOINT_USER_BY_EMPLOYEE_CODE(\n        employeeCode\n      )}`;\n      const employee = await axios.get(getEmployeeEndpoint);\n\n      if (employee) {\n        const updateTaskEndpoint = `${API_URL}${ENDPOINT_TASKS_BY_ID(taskId)}`;\n\n        const query = {\n          status: 1,\n          end: new Date(),\n        };\n\n        await axios.patch(updateTaskEndpoint, query);\n\n        toast.success('Tarea finalizada!');\n\n        dispatch(forceRender());\n      } else {\n        toast.error('Código de empleado inválido');\n      }\n    } catch (error: any) {\n      const message = error?.response?.data?.message || error.message;\n      toast.error(message);\n    }\n  };\n}\n\nexport function createTask(taskData: any) {\n  return async (dispatch: any) => {\n    try {\n      const getEmployeeEndpoint = `${API_URL}${ENDPOINT_USER_BY_EMPLOYEE_CODE(\n        taskData.employee\n      )}`;\n      const { data: employee }: any = await axios.get(getEmployeeEndpoint);\n\n      if (employee) {\n        const getMachineIdEndpoint = `${API_URL}${ENDPOINT_MACHINES_BY_NAME(\n          taskData.selectedMachine.toLowerCase()\n        )}`;\n        const { data: machine }: any = await axios.get(getMachineIdEndpoint);\n        if (machine) {\n          const createTaskEndpoint = `${API_URL}${ENDPOINT_TASKS}`;\n          const body = createCreateTaskEndpointBodyObject(\n            employee._id,\n            machine._id,\n            taskData\n          );\n\n          await axios.post(createTaskEndpoint, body);\n\n          toast.success('Tarea creada!');\n          dispatch(forceRender());\n          dispatch(setIsCreateTaskModalOpen(false));\n        } else {\n          toast.error('La máquina seleccionada no existe');\n        }\n      } else {\n        toast.error('Código de empleado inválido');\n      }\n    } catch (error: any) {\n      const message = error?.response?.data?.message || error.message;\n      toast.error(message);\n    }\n  };\n}\n\nexport function loadSettings() {\n  return async (dispatch: any) => {\n    try {\n      const endpoint = `${API_URL}${ENDPOINT_SETTINGS}`;\n      const { data } = await axios.get(endpoint);\n\n      dispatch({\n        type: LOAD_SETTINGS,\n        payload: data,\n      });\n    } catch (error: any) {\n      const message = error?.response?.data?.message || error.message;\n      toast.error(message);\n    }\n  };\n}\n","import { InputAdornment, TextField } from \"@mui/material\";\n\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { useFormikContext } from \"formik\";\n\nconst StyledFormikTextFieldWrapper = styled.div`\n  input {\n    padding: 0.75rem 0.5rem;\n  }\n`;\n\ninterface IFormikTextFieldProps {\n  name: string;\n  type?: string;\n  label?: string;\n  placeholder?: string;\n  variant?: \"outlined\" | \"filled\" | \"standard\";\n  size?: \"medium\" | \"small\";\n  margin?: \"normal\" | \"dense\";\n  autofocus?: boolean;\n  fullWidth?: boolean;\n  adornment?: string;\n  disabled?: boolean;\n  min?: number;\n  max?: number;\n}\n\nfunction FormikTextField(props: IFormikTextFieldProps) {\n  const formikContext = useFormikContext<any>();\n\n  const {\n    name,\n    label,\n    placeholder,\n    variant = \"outlined\",\n    size = \"medium\",\n    type = \"text\",\n    margin = \"dense\",\n    autofocus = false,\n    fullWidth = false,\n    adornment = null,\n    disabled = false,\n    min,\n    max,\n  } = props;\n\n  function handleChange({ target }: React.ChangeEvent<HTMLInputElement>) {\n    formikContext.setFieldValue(name, target.value);\n  }\n\n  return (\n    <StyledFormikTextFieldWrapper className=\"formikTextField\">\n      <TextField\n        variant={variant}\n        name={name}\n        label={label}\n        type={type}\n        placeholder={placeholder}\n        size={size}\n        onChange={handleChange}\n        value={formikContext.values[name]}\n        autoFocus={autofocus}\n        fullWidth={fullWidth}\n        margin={margin}\n        helperText={\n          formikContext.touched[name] &&\n          formikContext.errors[name] &&\n          formikContext.errors[name]\n        }\n        error={\n          formikContext.touched[name] && formikContext.errors[name]\n            ? true\n            : false\n        }\n        disabled={disabled}\n        InputProps={{\n          inputProps: {\n            min,\n            max,\n          },\n          endAdornment: adornment && (\n            <InputAdornment position=\"end\">{adornment}</InputAdornment>\n          ),\n        }}\n      />\n    </StyledFormikTextFieldWrapper>\n  );\n}\n\nexport default FormikTextField;\n","import { Button, Typography } from \"@mui/material\";\n\nimport AddIcon from \"@mui/icons-material/Add\";\nimport { FC } from \"react\";\nimport FormikTextField from \"../../../../components/FormikComponents/FormikTextField\";\nimport styled from \"styled-components\";\n\nconst StyledNewEmployeeFormContainer = styled.div`\n  display: flex;\n  align-items: flex-start;\n  justify-content: flex-start;\n  height: 60px;\n  margin-bottom: 1rem;\n`;\n\nconst StyledFlex100Height = styled.div`\n  display: flex;\n  height: 100%;\n  align-items: center;\n`;\n\nconst StyledText = styled(Typography)`\n  font-weight: 600;\n  margin-right: 1rem;\n`;\n\nconst StyledButtonWrapper = styled.div`\n  .MuiButton-root {\n    min-width: unset;\n    border-radius: 50%;\n    width: 2.5rem;\n    height: 2.5rem;\n  }\n`;\n\nconst StyledMargin = styled.div`\n  margin-right: 1rem;\n`;\n\ninterface ICreateEmployeeFormProps {}\n\nconst CreateEmployeeForm: FC<ICreateEmployeeFormProps> = () => {\n  return (\n    <StyledNewEmployeeFormContainer>\n      <StyledFlex100Height>\n        <StyledText>Crear Empleado: </StyledText>\n      </StyledFlex100Height>\n      <FormikTextField\n        name=\"name\"\n        size=\"small\"\n        label=\"Nombre\"\n        placeholder=\"Nombre\"\n      />\n      <StyledMargin />\n      <FormikTextField\n        name=\"surname\"\n        size=\"small\"\n        label=\"Apellidos\"\n        placeholder=\"Apellidos\"\n      />\n      <StyledMargin />\n      <FormikTextField\n        name=\"employerCode\"\n        size=\"small\"\n        label=\"Cód. Emp.\"\n        placeholder=\"Código empleado\"\n      />\n      <StyledMargin />\n\n      <StyledFlex100Height>\n        <StyledButtonWrapper>\n          <Button\n            variant=\"contained\"\n            size=\"small\"\n            sx={{ width: \"2rem\", height: \"2rem\" }}\n            type=\"submit\"\n          >\n            <AddIcon fontSize=\"small\" />\n          </Button>\n        </StyledButtonWrapper>\n      </StyledFlex100Height>\n    </StyledNewEmployeeFormContainer>\n  );\n};\n\nexport default CreateEmployeeForm;\n","import { IconButton, Typography } from \"@mui/material\";\n\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport { FC } from \"react\";\nimport styled from \"styled-components\";\n\nconst StyledDeletableItemCardContainer = styled.li`\n  width: 100%;\n  padding: 0.25rem 1rem;\n  display: flex;\n  justify-content: space-between;\n  background: #f5f5f5;\n  border-radius: 0.5rem;\n  margin-bottom: 0.5rem;\n  align-items: center;\n`;\n\nconst StyledText = styled(Typography)`\n  flex: 1;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  overflow: hidden;\n`;\n\ninterface IDeletableItemCardProps {\n  handleDelete: any;\n  itemName: string;\n}\n\nconst DeletableItemCard: FC<IDeletableItemCardProps> = ({\n  handleDelete,\n  itemName,\n}) => {\n  return (\n    <StyledDeletableItemCardContainer>\n      <StyledText>{itemName}</StyledText>\n      <IconButton onClick={handleDelete}>\n        <DeleteIcon\n          sx={{\n            cursor: \"pointer\",\n            \":hover\": { color: \"#1876D1\" },\n          }}\n        />\n      </IconButton>\n    </StyledDeletableItemCardContainer>\n  );\n};\n\nexport default DeletableItemCard;\n","import * as Yup from \"yup\";\n\nimport { Form, Formik } from \"formik\";\nimport {\n  createEmployee,\n  deleteEmployee,\n} from \"../../../../redux/actions/mainActions\";\n\nimport CreateEmployeeForm from \"./CreateEmployeeForm\";\nimport DeletableItemCard from \"../DeletableItemCard\";\nimport { FC } from \"react\";\nimport { TUserResponse } from \"../../../../types/employeeTypes\";\nimport { Typography } from \"@mui/material\";\nimport { motion } from \"framer-motion\";\nimport styled from \"styled-components\";\nimport { useDispatch } from \"react-redux\";\n\nconst StyledTabContainer = styled(motion.div).attrs(() => ({\n  initial: { opacity: 0 },\n  animate: { opacity: 1 },\n}))`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst StyledTabTitle = styled(Typography)`\n  font-size: 1.15rem;\n  font-weight: 600;\n  margin-bottom: 0.75rem;\n  text-decoration: underline;\n`;\n\nconst StyledEmployeesContainer = styled.div`\n  display: flex;\n  width: 100%;\n  flex-wrap: wrap;\n  height: 100%;\n  overflow-y: auto;\n  align-content: flex-start;\n`;\n\nconst StyledEmployeeCardContainer = styled.div`\n  margin-right: 1rem;\n  width: 20rem;\n`;\n\nconst initialFormValues = {\n  name: \"\",\n  surname: \"\",\n  employerCode: \"\",\n};\n\nconst validationSchema = Yup.object({\n  name: Yup.string().required(\"Nombre obligatorio\"),\n  surname: Yup.string(),\n  employerCode: Yup.string().required(\"Cod. Emp. obligatorio\"),\n});\n\ninterface IEmployeesTabprops {\n  employees: TUserResponse[];\n}\n\nconst EmployeesTab: FC<IEmployeesTabprops> = ({ employees }) => {\n  const dispatch = useDispatch();\n\n  function handleSubmit(values: any) {\n    dispatch(createEmployee(values));\n  }\n\n  function handleDeleteEmployee(userId: string) {\n    dispatch(deleteEmployee(userId));\n  }\n\n  return (\n    <StyledTabContainer className=\"tabContainer\">\n      <StyledTabTitle>Gestión de empleados</StyledTabTitle>\n\n      <Formik\n        initialValues={initialFormValues}\n        onSubmit={handleSubmit}\n        validationSchema={validationSchema}\n      >\n        <Form noValidate>\n          <CreateEmployeeForm />\n        </Form>\n      </Formik>\n\n      <StyledEmployeesContainer>\n        {employees.map((employee) => (\n          <StyledEmployeeCardContainer className=\"employeesList\">\n            <DeletableItemCard\n              itemName={`(${employee.employerCode}): ${employee.name} `}\n              handleDelete={() => {\n                handleDeleteEmployee(employee._id);\n              }}\n              key={employee._id}\n            />\n          </StyledEmployeeCardContainer>\n        ))}\n      </StyledEmployeesContainer>\n    </StyledTabContainer>\n  );\n};\n\nexport default EmployeesTab;\n","import { Button, Typography } from \"@mui/material\";\nimport { MACHINE_1, MACHINE_2 } from \"../../../../constants/machineNames\";\n\nimport { FC } from \"react\";\nimport FormikTextField from \"../../../../components/FormikComponents/FormikTextField\";\nimport SaveIcon from \"@mui/icons-material/Save\";\nimport styled from \"styled-components\";\nimport { updateCorrectionalFactor } from \"../../../../redux/actions/mainActions\";\nimport { useDispatch } from \"react-redux\";\nimport { useFormikContext } from \"formik\";\n\nconst StyledTabTitle = styled(Typography)`\n  font-size: 1.15rem;\n  font-weight: 600;\n  margin-bottom: 0.5rem;\n`;\n\nconst StyledNewItemWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  margin-bottom: 1rem;\n  width: 100%;\n`;\n\nconst StyledButtonWrapper = styled.div`\n  flex: 1;\n  .MuiButton-root {\n    min-width: unset;\n    border-radius: 50%;\n    width: 2.5rem;\n    height: 2.5rem;\n    margin-left: 1rem;\n    margin-top: 0.6rem;\n  }\n`;\n\ninterface IEditCorrectionalFactorFromProps {}\n\nconst EditCorrectionalFactorFrom: FC<IEditCorrectionalFactorFromProps> = () => {\n  const formikContext = useFormikContext<any>();\n  const dispatch = useDispatch();\n\n  function handleMachineClick(machineName: string) {\n    const machineFormFieldName =\n      machineName === MACHINE_1\n        ? \"correctionalFactorMachine1\"\n        : \"correctionalFactorMachine2\";\n\n    formikContext.setFieldTouched(machineFormFieldName, true);\n\n    const value = Number(formikContext.values[machineFormFieldName]);\n\n    if (value) {\n      dispatch(updateCorrectionalFactor(machineName, value));\n    }\n  }\n\n  return (\n    <>\n      <StyledTabTitle>Editar factor corrector:</StyledTabTitle>\n      <StyledNewItemWrapper>\n        <FormikTextField\n          type=\"number\"\n          min={0}\n          max={100}\n          name=\"correctionalFactorMachine1\"\n          label=\"Máquina 1\"\n          placeholder=\"Nuevo factor corrector M1\"\n          adornment=\"%\"\n          fullWidth\n        />\n        <StyledButtonWrapper>\n          <Button\n            className=\"m1Button\"\n            variant=\"contained\"\n            size=\"small\"\n            disableElevation\n            onClick={() => {\n              handleMachineClick(MACHINE_1);\n            }}\n          >\n            <SaveIcon fontSize=\"small\" />\n          </Button>\n        </StyledButtonWrapper>\n      </StyledNewItemWrapper>\n      <StyledNewItemWrapper>\n        <FormikTextField\n          type=\"number\"\n          min={0}\n          max={100}\n          name=\"correctionalFactorMachine2\"\n          label=\"Máquina 2\"\n          placeholder=\"Nuevo factor corrector M2\"\n          adornment=\"%\"\n          fullWidth\n        />\n\n        <StyledButtonWrapper>\n          <Button\n            variant=\"contained\"\n            size=\"small\"\n            disableElevation\n            onClick={() => {\n              handleMachineClick(MACHINE_2);\n            }}\n          >\n            <SaveIcon fontSize=\"small\" />\n          </Button>\n        </StyledButtonWrapper>\n      </StyledNewItemWrapper>\n    </>\n  );\n};\n\nexport default EditCorrectionalFactorFrom;\n","import * as Yup from \"yup\";\n\nimport { Button, TextField, Typography } from \"@mui/material\";\nimport { FC, useState } from \"react\";\nimport { Form, Formik } from \"formik\";\nimport {\n  createNewMaterial,\n  createNewThickness,\n  deleteMaterial,\n  deleteThickness,\n} from \"../../../../redux/actions/mainActions\";\n\nimport AddIcon from \"@mui/icons-material/Add\";\nimport DeletableItemCard from \"../DeletableItemCard\";\nimport EditCorrectionalFactorFrom from \"./EditCorrectionalFactorForm\";\nimport { TSettingsResponse } from \"../../../../types/settingsTypes\";\nimport { motion } from \"framer-motion\";\nimport styled from \"styled-components\";\nimport toast from \"react-hot-toast\";\nimport { useDispatch } from \"react-redux\";\n\nconst StyledTabContainer = styled(motion.div).attrs(() => ({\n  initial: { opacity: 1 },\n  animate: { opacity: 1 },\n}))`\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n  height: 100%;\n`;\n\nconst StyledGroupWrapper = styled.div`\n  margin: 0 1rem;\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  max-width: 20rem;\n`;\n\nconst StyledNewItemWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  margin-bottom: 1rem;\n`;\n\nconst StyledButtonWrapper = styled.div`\n  .MuiButton-root {\n    min-width: unset;\n    border-radius: 50%;\n    width: 2.5rem;\n    height: 2.5rem;\n  }\n`;\n\nconst StyledTabTitle = styled(Typography)`\n  font-size: 1.15rem;\n  font-weight: 600;\n  margin-bottom: 0.5rem;\n`;\n\nconst StyledListWrapper = styled.ul`\n  list-style: none;\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  overflow-y: auto;\n  height: 100%;\n`;\n\nconst validationSchema = Yup.object({\n  correctionalFactorMachine1: Yup.number()\n    .integer(\"No puede contener decimales\")\n    .min(0, \"El valor mínimo es 0\")\n    .max(100, \"El valor máximo es 100\"),\n\n  correctionalFactorMachine2: Yup.number()\n    .integer(\"No puede contener decimales\")\n    .min(0, \"El valor mínimo es 0\")\n    .max(100, \"El valor máximo es 100\"),\n});\n\ninterface IGeneralSettingsTabProps {\n  settings: TSettingsResponse;\n}\n\nconst GeneralSettingsTab: FC<IGeneralSettingsTabProps> = ({ settings }) => {\n  const dispatch = useDispatch();\n\n  const [newMaterial, setNewMaterial] = useState(\"\");\n  const [newThickness, setNewThickness] = useState(\"\");\n\n  const correctionalFactorInitialValues = {\n    correctionalFactorMachine1: settings.correctionalFactorMachine1,\n    correctionalFactorMachine2: settings.correctionalFactorMachine2,\n  };\n\n  function handleNewMaterialChange({ target }: any) {\n    setNewMaterial(target.value);\n  }\n\n  function handleNewMaterialClick() {\n    if (newMaterial) {\n      dispatch(createNewMaterial(newMaterial));\n    } else {\n      toast.error(\"No hay un material introducido\");\n    }\n  }\n\n  function handleDeleteMaterial(material: string) {\n    if (window.confirm(\"Seguro que quieres eliminar el material?\")) {\n      dispatch(deleteMaterial(material));\n    }\n  }\n\n  function handleNewThicknessChange({ target }: any) {\n    let value: string = target.value;\n    if (value.includes(\",\")) {\n      value = value.replace(\",\", \".\");\n    }\n\n    setNewThickness(value);\n  }\n\n  function handleNewThicknessClick() {\n    if (newThickness.match(/^[1-9]\\d*(\\.\\d+)?$/)) {\n      dispatch(createNewThickness(Number(newThickness)));\n    } else {\n      toast.error(\"Espesor invalido. Solo puede contener números.\");\n    }\n  }\n\n  function handleDeleteThickness(value: number) {\n    if (window.confirm(\"Seguro que quieres eliminar el espesor?\")) {\n      dispatch(deleteThickness(value));\n    }\n  }\n\n  return (\n    <StyledTabContainer className=\"tabContainer\">\n      <StyledGroupWrapper className=\"groupWrapper\">\n        {/* ---- CORRECTIONAL FACTORS ---- */}\n        <Formik\n          initialValues={correctionalFactorInitialValues}\n          onSubmit={() => {}}\n          validationSchema={validationSchema}\n        >\n          <Form noValidate>\n            <EditCorrectionalFactorFrom />\n          </Form>\n        </Formik>\n      </StyledGroupWrapper>\n      {/* ---- MATERIALS LIST ---- */}\n      <StyledGroupWrapper className=\"groupWrapper\">\n        <StyledTabTitle>Lista de materiales:</StyledTabTitle>\n        <StyledNewItemWrapper>\n          <TextField\n            type=\"text\"\n            name=\"material\"\n            label=\"Material\"\n            placeholder=\"Nuevo material\"\n            size=\"small\"\n            sx={{ marginRight: \"1rem\" }}\n            value={newMaterial}\n            onChange={handleNewMaterialChange}\n          />\n          <StyledButtonWrapper>\n            <Button\n              variant=\"contained\"\n              size=\"small\"\n              onClick={handleNewMaterialClick}\n              disableElevation\n            >\n              <AddIcon fontSize=\"small\" />\n            </Button>\n          </StyledButtonWrapper>\n        </StyledNewItemWrapper>\n        <StyledListWrapper className=\"itemsList\">\n          {settings.materials.map((material) => (\n            <DeletableItemCard\n              itemName={material}\n              handleDelete={() => {\n                handleDeleteMaterial(material);\n              }}\n              key={material}\n            />\n          ))}\n        </StyledListWrapper>\n      </StyledGroupWrapper>\n      {/* ---- THICKNESSESS LIST ---- */}\n      <StyledGroupWrapper className=\"groupWrapper\">\n        <StyledTabTitle>Lista de espesores</StyledTabTitle>\n        <StyledNewItemWrapper>\n          <TextField\n            type=\"text\"\n            name=\"thickness\"\n            label=\"Espesor (en cm)\"\n            placeholder=\"Nuevo espesor\"\n            size=\"small\"\n            sx={{ marginRight: \"1rem\" }}\n            value={newThickness}\n            onChange={handleNewThicknessChange}\n          />\n          <StyledButtonWrapper>\n            <Button\n              variant=\"contained\"\n              size=\"small\"\n              onClick={handleNewThicknessClick}\n              disableElevation\n            >\n              <AddIcon fontSize=\"small\" />\n            </Button>\n          </StyledButtonWrapper>\n        </StyledNewItemWrapper>\n        <StyledListWrapper className=\"itemsList\">\n          {settings.thicknesses.map((value) => (\n            <DeletableItemCard\n              itemName={`${value} cm`}\n              handleDelete={() => {\n                handleDeleteThickness(value);\n              }}\n              key={value}\n            />\n          ))}\n        </StyledListWrapper>\n      </StyledGroupWrapper>\n    </StyledTabContainer>\n  );\n};\n\nexport default GeneralSettingsTab;\n","export const maxWidth = 1200;\nexport const maxTableHeight = \"78vh\";\nexport const maxTableHeight_small = \"70vh\";\nexport const darkBackground = \"#303030\";\nexport const darkMenuBackground = \"#212121\";\nexport const darkCardBackground = \"#424242\";\n","import styled from \"styled-components\";\nimport { maxWidth } from \"../styles/styleConstants\";\n\nexport const StyledTableHeaderWrapper = styled.div`\n  display: flex;\n  justify-content: start;\n  align-items: center;\n  max-width: ${maxWidth}px;\n  width: 100%;\n  margin: auto;\n  margin-bottom: 0.5rem;\n  background-color: #f5f5f5;\n  border-radius: 0.25rem;\n  padding: 0.5rem;\n  font-weight: 700;\n`;\n\nexport const StyledTableHeaderInfoWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  flex: 1;\n`;\n\nexport const StyledFlexGrow = styled.div`\n  flex: 1;\n`;\n","import { Box } from \"@mui/material\";\nimport { FC } from \"react\";\nimport { StyledFlexGrow } from \"../../../StyledComponents/StyledTableHeader\";\n\ninterface ITabPanelProps {\n  children?: React.ReactNode;\n  index: number;\n  value: number;\n}\n\nconst TabPanel: FC<ITabPanelProps> = ({ children, value, index }) => {\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      style={{ height: \"calc(100% - 3rem)\" }}\n    >\n      {value === index && (\n        <Box sx={{ p: 3, height: \"100%\", flex: 1 }}>\n          {children}\n          <StyledFlexGrow />\n        </Box>\n      )}\n    </div>\n  );\n};\n\nexport default TabPanel;\n","import { AppBar, Box, Tab, Tabs } from \"@mui/material\";\nimport { FC, useEffect } from \"react\";\n\nimport EmployeesTab from \"./components/EmployeesTab/EmployeesTab\";\nimport GeneralSettingsTab from \"./components/GeneralSettingsTab/GeneralSettingsTab\";\nimport { TSettingsResponse } from \"../../types/settingsTypes\";\nimport TabPanel from \"./components/TabPanel\";\nimport styled from \"styled-components\";\nimport { useHistory } from \"react-router-dom\";\nimport { useState } from \"react\";\n\nconst StyledAdminProfileHeader = styled.div`\n  width: 100%;\n  display: flex;\n  color: white;\n  font-size: 1.75rem;\n  font-weight: 700;\n  justify-content: center;\n  margin-bottom: 1.5rem;\n`;\n\ninterface IAdminProfilePageProps {\n  settings: TSettingsResponse & { employees: any };\n}\n\nconst AdminProfilePage: FC<IAdminProfilePageProps> = ({ settings }) => {\n  const history = useHistory();\n  const [value, setValue] = useState(0);\n\n  function a11yProps(index: number) {\n    return {\n      id: `simple-tab-${index}`,\n      \"aria-controls\": `simple-tabpanel-${index}`,\n    };\n  }\n\n  const params: any = new URLSearchParams(window.location.search);\n\n  useEffect(() => {\n    const tab = params.get(\"tab\") || 0;\n\n    setValue(Number(tab));\n  }, [params]);\n\n  const handleChange = (event: React.SyntheticEvent, newValue: number) => {\n    history.push(`/admin?tab=${newValue}`);\n  };\n\n  return (\n    <>\n      <StyledAdminProfileHeader>\n        Zona de administración\n      </StyledAdminProfileHeader>\n\n      <Box\n        sx={{\n          bgcolor: \"background.paper\",\n          width: \"100%\",\n          height: \"calc(100% - 4rem)\",\n          flex: 1,\n          boxSizing: \"border-box\",\n        }}\n      >\n        <AppBar position=\"static\">\n          <Tabs\n            value={value}\n            onChange={handleChange}\n            aria-label=\"admin tabs\"\n            indicatorColor=\"secondary\"\n            textColor=\"inherit\"\n          >\n            <Tab\n              label=\"Ajustes generales\"\n              {...a11yProps(0)}\n              sx={{ color: \"white\" }}\n            />\n            <Tab label=\"Empleados\" {...a11yProps(1)} sx={{ color: \"white\" }} />\n          </Tabs>\n        </AppBar>\n        <TabPanel value={value} index={0} key=\"generalSettingsTab\">\n          <GeneralSettingsTab settings={settings} />\n        </TabPanel>\n        <TabPanel value={value} index={1} key=\"employeesTab\">\n          <EmployeesTab employees={settings.employees} />\n        </TabPanel>\n      </Box>\n    </>\n  );\n};\n\nexport default AdminProfilePage;\n","import { FC } from \"react\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport styled from \"styled-components\";\nimport { Typography } from \"@mui/material\";\n\nconst StyledLoadingWrapper = styled.div`\n  display: flex;\n  max-width: 35rem;\n  justify-content: center;\n  align-items: center;\n  margin: auto;\n  color: white;\n  margin-top: 3rem;\n`;\n\nconst StyledLoadingText = styled(Typography)`\n  margin-left: 1rem;\n  font-size: 1.5rem;\n`;\n\ninterface IStandardLoadingProps {\n  text?: string;\n}\n\nconst StandardLoading: FC<IStandardLoadingProps> = ({ text }) => {\n  return (\n    <StyledLoadingWrapper>\n      <CircularProgress />\n      <StyledLoadingText>{text ? text : \"Cargando...\"}</StyledLoadingText>\n    </StyledLoadingWrapper>\n  );\n};\n\nexport default StandardLoading;\n","import AdminProfilePage from \"./AdminProfilePage\";\nimport { FC } from \"react\";\nimport StandardLoading from \"../../components/StandardLoading/StandardLoading\";\nimport { TInitialState } from \"../../redux/store/initialState\";\nimport useAdminProfilePageQuery from \"./queries/useAdminProfilePageQuery\";\nimport { useSelector } from \"react-redux\";\n\nconst AdminProfilePageContainer: FC = () => {\n  const { forceRender } = useSelector(\n    (state: TInitialState) => state.mainReducer\n  );\n  const { isLoading, data } = useAdminProfilePageQuery(forceRender);\n\n  return (\n    <>\n      {isLoading ? (\n        <StandardLoading />\n      ) : (\n        data && <AdminProfilePage settings={data} />\n      )}\n    </>\n  );\n};\n\nexport default AdminProfilePageContainer;\n","import {\n  API_URL,\n  ENDPOINT_SETTINGS,\n  ENDPOINT_USERS_ROLE,\n} from '../../../constants/apiConstants';\n\nimport axios from 'axios';\nimport { useQuery } from 'react-query';\n\nexport default function useAdminProfilePageQuery(forceRender: number) {\n  return useQuery(['loadAdminProfile', forceRender], async () => {\n    const { data: settings } = await axios.get(\n      `${API_URL}${ENDPOINT_SETTINGS}`\n    );\n\n    const { data: employees } = await axios.get(\n      `${API_URL}${ENDPOINT_USERS_ROLE(1)}`\n    );\n\n    return { ...settings, employees };\n  });\n}\n","import { FC, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { loadSettings } from \"../../redux/actions/mainActions\";\n\nconst AppInit: FC = () => {\n  const dispatch = useDispatch();\n\n  const { settings, forceRender } = useSelector(\n    (state: any) => state.mainReducer\n  );\n\n  useEffect(() => {\n    if (!settings || !settings.companyName) {\n      dispatch(loadSettings());\n    }\n  }, [settings]);\n\n  useEffect(() => {\n    dispatch(loadSettings());\n  }, [forceRender]);\n\n  return <></>;\n};\n\nexport default AppInit;\n","import Select, { SelectChangeEvent } from \"@mui/material/Select\";\n\nimport { FC } from \"react\";\nimport FormControl from \"@mui/material/FormControl\";\nimport { FormHelperText } from \"@mui/material\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport { debug } from \"console\";\nimport styled from \"styled-components\";\nimport { useFormikContext } from \"formik\";\nimport { valueScaleCorrection } from \"framer-motion/types/render/dom/projection/scale-correction\";\n\nconst StyledFormikSelectWrapper = styled.div`\n  margin-top: 0.5rem;\n  .MuiSelect-select {\n    padding: 0.75rem 0.5rem;\n  }\n`;\n\nfunction formatLabel(value: any) {\n  if (typeof value === \"string\") {\n    return value;\n  } else {\n    return `${value} cm`;\n  }\n}\n\ninterface IFormikSelectProps {\n  name: string;\n  label: string;\n  values: string[];\n  variant?: \"outlined\" | \"filled\" | \"standard\";\n  size?: \"medium\" | \"small\";\n  margin?: \"none\" | \"dense\";\n}\n\nconst FormikSelect: FC<IFormikSelectProps> = ({\n  name,\n  label,\n  values,\n  variant = \"outlined\",\n  size = \"medium\",\n  margin = \"dense\",\n}) => {\n  const formikContext = useFormikContext<any>();\n\n  function handleChange({ target }: SelectChangeEvent) {\n    formikContext.setFieldValue(name, target.value);\n  }\n\n  const selectValues = values.map((item) => ({\n    label: formatLabel(item),\n    value: item,\n  }));\n\n  return (\n    <StyledFormikSelectWrapper>\n      <FormControl fullWidth>\n        <InputLabel id=\"demo-simple-select-label\">{label}</InputLabel>\n        <Select\n          labelId=\"demo-simple-select-label\"\n          id=\"demo-simple-select\"\n          value={formikContext.values[name]}\n          label={label}\n          onChange={handleChange}\n          error={\n            formikContext.touched[name] && formikContext.errors[name]\n              ? true\n              : false\n          }\n          variant={variant}\n          size={size}\n          margin={margin}\n          defaultValue={formikContext.values[name]}\n        >\n          {selectValues.map((item) => (\n            <MenuItem value={item.value} key={item.value}>\n              {item.label}\n            </MenuItem>\n          ))}\n        </Select>\n        {formikContext.touched[name] && formikContext.errors[name] && (\n          <FormHelperText sx={{ color: \"#D32F2F\" }}>\n            {formikContext.errors[name]}\n          </FormHelperText>\n        )}\n      </FormControl>\n    </StyledFormikSelectWrapper>\n  );\n};\n\nexport default FormikSelect;\n","export default function getColorByPriority(priority: number) {\n  let bgColor = \"\";\n  if (priority > 0 && priority <= 2) {\n    bgColor = \"rgba(93, 172, 245, 0.5)\";\n  }\n  if (priority > 2 && priority <= 4) {\n    bgColor = \"rgba(1, 187, 63, 0.5)\";\n  }\n  if (priority > 4 && priority <= 8) {\n    bgColor = \"rgba(255, 163, 15, 0.5)\";\n  }\n  if (priority > 8 && priority <= 10) {\n    bgColor = \"rgba(246, 91, 92, 0.5)\";\n  }\n\n  return bgColor;\n}\n","import styled from \"styled-components\";\nimport getColorByPriority from \"../../../../utils/getColorByPriority\";\n\nconst StyledPriorityBadgeWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`;\n\nconst StyledPriorityBadge = styled.div`\n  width: 1.75rem;\n  height: 1.75rem;\n  border-radius: 50%;\n  margin-right: 0.5rem;\n`;\n\nconst StyledPriorityText = styled.span`\n  font-size: 1rem;\n  font-weight: 600;\n`;\n\nfunction formatTextByPriority(priority: number) {\n  let text = \"\";\n\n  if (priority > 0 && priority <= 2) {\n    text = \"Normal\";\n  }\n  if (priority > 2 && priority <= 4) {\n    text = \"Normal\";\n  }\n  if (priority > 4 && priority <= 8) {\n    text = \"Urgencia 48h\";\n  }\n  if (priority > 8 && priority <= 10) {\n    text = \"Urgencia 24h\";\n  }\n\n  return text;\n}\n\ninterface IPriorityBadge {\n  priority: number;\n}\nfunction PriorityBadge(props: IPriorityBadge) {\n  const { priority } = props;\n  return (\n    <StyledPriorityBadgeWrapper>\n      <StyledPriorityBadge\n        style={{\n          background: getColorByPriority(priority),\n        }}\n      />\n      <StyledPriorityText>{formatTextByPriority(priority)}</StyledPriorityText>\n    </StyledPriorityBadgeWrapper>\n  );\n}\n\nexport default PriorityBadge;\n","import {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Grid,\n} from \"@mui/material\";\n\nimport { Form } from \"formik\";\nimport FormikSelect from \"../FormikComponents/FormikSelect\";\nimport FormikTextField from \"../FormikComponents/FormikTextField\";\nimport { MACHINE_1 } from \"../../constants/machineNames\";\nimport PriorityBadge from \"./components/PriorityBadge/PriorityBadge\";\nimport { TInitialState } from \"../../redux/store/initialState\";\nimport styled from \"styled-components\";\nimport { useEffect } from \"react\";\nimport { useFormikContext } from \"formik\";\nimport { useSelector } from \"react-redux\";\n\nconst StyledCreateTaskDialogWrapper = styled(Dialog)`\n  .MuiPaper-root {\n    max-width: 26rem;\n  }\n`;\n\nconst StyledFlexCenteredWrapper = styled.div`\n  display: flex;\n  justify-content: start;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n`;\n\ninterface ICreateTaskDialogProps {\n  isOpen: boolean;\n  handleClose: () => void;\n  settings: any;\n}\n\nconst machinesMock = [\"Maquina1\", \"Maquina2\"];\n\nfunction CreateTaskDialog(props: ICreateTaskDialogProps) {\n  const { isOpen, handleClose, settings } = props;\n\n  const formikContext = useFormikContext<any>();\n\n  const { selectedMachine } = useSelector(\n    (state: TInitialState) => state.mainReducer.createTaskModal\n  );\n\n  useEffect(() => {\n    formikContext.values.selectedMachine =\n      selectedMachine === MACHINE_1 ? \"Maquina1\" : \"Maquina2\";\n\n    formikContext.values.correctionalFactor =\n      selectedMachine === MACHINE_1\n        ? settings.correctionalFactorMachine1\n        : settings.correctionalFactorMachine2;\n  }, [selectedMachine]);\n\n  useEffect(() => {\n    if (!isOpen) {\n      formikContext.resetForm();\n    }\n  }, [isOpen]);\n\n  useEffect(() => {\n    formikContext.values.correctionalFactor =\n      formikContext.values.selectedMachine === \"Maquina1\"\n        ? settings.correctionalFactorMachine1\n        : settings.correctionalFactorMachine2;\n  }, [\n    formikContext.values.selectedMachine,\n    formikContext.values.correctionalFactor,\n  ]);\n\n  return (\n    <StyledCreateTaskDialogWrapper open={isOpen} onClose={handleClose}>\n      <Form noValidate>\n        <DialogTitle sx={{ textAlign: \"center\" }}>Nuevo programa</DialogTitle>\n        <DialogContent>\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <FormikTextField\n                name=\"employee\"\n                label=\"Código de empleado\"\n                autofocus\n                fullWidth\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <FormikTextField\n                name=\"programNumber\"\n                label=\"Nº Programa\"\n                fullWidth\n              />\n            </Grid>\n            <Grid item xs={6}>\n              <FormikSelect\n                name=\"material\"\n                label=\"Material\"\n                values={settings.materials}\n              />\n            </Grid>\n            <Grid item xs={6}>\n              <FormikSelect\n                name=\"thickness\"\n                label=\"Espesor\"\n                values={settings.thicknesses}\n              />\n            </Grid>\n            <Grid item xs={6}>\n              <FormikTextField\n                name=\"priority\"\n                label=\"Prioridad\"\n                type=\"number\"\n                min={1}\n                max={10}\n                fullWidth\n              />\n            </Grid>\n            <Grid item xs={6}>\n              <StyledFlexCenteredWrapper>\n                <PriorityBadge priority={formikContext.values.priority} />\n              </StyledFlexCenteredWrapper>\n            </Grid>\n            <Grid item xs={6}>\n              <FormikTextField\n                name=\"duration\"\n                label=\"Tiempo\"\n                type=\"number\"\n                adornment=\"min\"\n                min={0}\n                fullWidth\n              />\n            </Grid>\n            <Grid item xs={6}>\n              <FormikTextField\n                name=\"correctionalFactor\"\n                label=\"Factor corrector\"\n                fullWidth\n                disabled\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <FormikSelect\n                name=\"selectedMachine\"\n                label=\"Máquina\"\n                values={machinesMock}\n              />\n            </Grid>\n          </Grid>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} variant=\"outlined\">\n            Cancel\n          </Button>\n          <Button type=\"submit\" variant=\"contained\">\n            Submit\n          </Button>\n        </DialogActions>\n      </Form>\n    </StyledCreateTaskDialogWrapper>\n  );\n}\n\nexport default CreateTaskDialog;\n","import * as Yup from \"yup\";\n\nimport {\n  createTask,\n  setIsCreateTaskModalOpen,\n} from \"../../redux/actions/mainActions\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport CreateTaskDialog from \"./CreateTaskDialog\";\nimport { Formik } from \"formik\";\nimport { TInitialState } from \"../../redux/store/initialState\";\n\nfunction CreateTaksDialogContainer() {\n  const dispatch = useDispatch();\n\n  const { isOpen, selectedMachine } = useSelector(\n    (state: TInitialState) => state.mainReducer.createTaskModal\n  );\n  const { settings } = useSelector((state: any) => state.mainReducer);\n\n  function handleClose() {\n    dispatch(setIsCreateTaskModalOpen(false));\n  }\n\n  const initialValues = {\n    employee: \"\",\n    material: \"\",\n    thickness: \"\",\n    programNumber: \"\",\n    priority: 1,\n    duration: 0,\n    correctionalFactor: 10,\n    selectedMachine: selectedMachine || \"máquina1\",\n  };\n\n  const validationSchema = Yup.object({\n    employee: Yup.string().required(\"El código de empleado es obligatorio.\"),\n    material: Yup.string().required(\"El material es obligatorio.\"),\n    programNumber: Yup.string().required(\n      \"El número de programa es obligatorio.\"\n    ),\n    thickness: Yup.number()\n      .min(0, \"No puede ser negativo.\")\n      .required(\"El espesor es obligatorio.\"),\n    priority: Yup.number()\n      .min(1, \"El valor mínimo es 1.\")\n      .max(10, \"El valor máximo es 10.\")\n      .required(\"La prioridad es obligatoria.\"),\n    duration: Yup.number()\n      .integer(\"No puede contener decimales.\")\n      .required(\"La duración es obligatoria.\"),\n    selectedMachine: Yup.string().required(\"La máquina es obligatoria.\"),\n  });\n\n  function handleCreateTaskFormSubmit(values: TCreateTaskDialogFormValues) {\n    dispatch(createTask(values));\n  }\n\n  type TCreateTaskDialogFormValues = typeof initialValues;\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      onSubmit={handleCreateTaskFormSubmit}\n      validationSchema={validationSchema}\n    >\n      {settings && (\n        <CreateTaskDialog\n          isOpen={isOpen}\n          handleClose={handleClose}\n          settings={settings}\n        />\n      )}\n    </Formik>\n  );\n}\n\nexport default CreateTaksDialogContainer;\n","import styled from \"styled-components\";\n\nimport { maxWidth } from \"../../styles/styleConstants\";\n\nexport const StyledTablePageContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  width: 100%;\n`;\n\nexport const StyledTableWrapper = styled.div`\n  width: 100%;\n  max-width: ${maxWidth}px;\n\n  .MuiTableCell-head {\n    color: #002740;\n    font-weight: 700;\n    background-color: #f5f5f5;\n    border-bottom: 2px solid rgba(150, 150, 150, 1);\n    line-height: 1.25;\n    font-size: 1.1rem;\n  }\n\n  .MuiTableCell-body {\n    border-bottom: 1px solid rgba(255, 255, 255, 1);\n    font-weight: 500;\n    font-size: 1.1rem;\n  }\n\n  .MuiTablePagination-root {\n    color: white;\n  }\n\n  .MuiSvgIcon-root {\n    color: white;\n  }\n`;\n\nexport const StyledLoadingWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 1rem;\n\n  font-size: 1.75rem;\n\n  .MuiCircularProgress-root {\n    margin-right: 1rem;\n  }\n`;\n","import { TableCell, TableHead, TableRow } from \"@mui/material\";\nimport { THeadCell } from \"../MUITableTypes\";\n\ninterface IEnhancedTableHeadProps {\n  headCells: THeadCell[];\n}\n\nexport default function EnhancedTasksTableHead(props: IEnhancedTableHeadProps) {\n  const { headCells } = props;\n\n  return (\n    <TableHead>\n      <TableRow>\n        {headCells.map((headCell) => (\n          <TableCell key={headCell.id} align=\"center\" padding=\"normal\">\n            {headCell.label}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n","import CheckCircleIcon from \"@mui/icons-material/CheckCircle\";\nimport { FC } from \"react\";\nimport WatchLaterIcon from \"@mui/icons-material/WatchLater\";\nimport styled from \"styled-components\";\n\nconst StyledTaskStatusContainer = styled.div`\n  display: flex;\n  justify-content: start;\n  align-items: center;\n  padding: 0.25rem 0.5rem;\n  border-radius: 0.5rem;\n  font-size: 0.9rem;\n  font-weight: 600;\n  width: fit-content;\n  margin: auto;\n`;\n\nconst StyledTaskText = styled.span`\n  line-height: normal;\n`;\n\ninterface ITaskStatusProps {\n  status: number;\n}\n\nconst statusText: any = {\n  0: \"En curso\",\n  1: \"Finalizada\",\n};\n\nconst statusTextColor: any = {\n  0: \"#014361\",\n  1: \"#1e4620\",\n};\n\nconst iconColor: any = {\n  0: \"#03a9f4\",\n  1: \"#4caf50\",\n};\n\nconst statusBgColor: any = {\n  0: \"#E5F5FD\",\n  1: \"#EDF7ED\",\n};\n\nconst TaskStatus: FC<ITaskStatusProps> = ({ status }) => {\n  return (\n    <StyledTaskStatusContainer\n      className=\"TaskStatusContainer\"\n      style={{\n        background: statusBgColor[status],\n        color: statusTextColor[status],\n      }}\n    >\n      {status === 0 ? (\n        <WatchLaterIcon\n          style={{ color: iconColor[status], marginRight: \"0.25rem\" }}\n        />\n      ) : (\n        <CheckCircleIcon\n          style={{ color: iconColor[status], marginRight: \"0.25rem\" }}\n        />\n      )}\n      <StyledTaskText>{statusText[status]}</StyledTaskText>\n    </StyledTaskStatusContainer>\n  );\n};\n\nexport default TaskStatus;\n","import dayjs from \"dayjs\";\n\nexport default function formatDate(date: string | null) {\n  if (!date) {\n    return \"-\";\n  }\n  return dayjs(date).format(\"DD/MM/YY HH:mm\");\n}\n","export function setTableRowBackgroundColorByPriority(priority: number) {\n  let bgColor = \"\";\n  if (priority > 0 && priority <= 2) {\n    bgColor = \"rgba(93, 172, 245, 0.5)\";\n  }\n  if (priority > 2 && priority <= 4) {\n    bgColor = \"rgba(1, 187, 63, 0.5)\";\n  }\n  if (priority > 4 && priority <= 8) {\n    bgColor = \"rgba(255, 163, 15, 0.5)\";\n  }\n  if (priority > 8 && priority <= 10) {\n    bgColor = \"rgba(246, 91, 92, 0.5)\";\n  }\n\n  return {\n    backgroundColor: bgColor,\n  };\n}\n","import {\n  Box,\n  CircularProgress,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TablePagination,\n  TableRow,\n} from \"@mui/material\";\nimport {\n  StyledLoadingWrapper,\n  StyledTablePageContainer,\n  StyledTableWrapper,\n} from \"../SCMuiTable\";\n\nimport EnhancedTableHead from \"../EnhancedTableHead/EnhancedTableHead\";\nimport React from \"react\";\nimport { THeadCell } from \"../MUITableTypes\";\nimport { TTaskResponse } from \"../../../types/taskTypes\";\nimport TaskStatus from \"../../TaskStatus/TaskStatus\";\nimport formatDate from \"../../../utils/formatDate\";\nimport { maxTableHeight_small } from \"../../../styles/styleConstants\";\nimport { setTableRowBackgroundColorByPriority } from \"../setTableRowBackgroundColorByPriority\";\n\ninterface IEnhnacedEmployeeTasksTableProps {\n  tasks: TTaskResponse[] | undefined;\n  isLoading: boolean;\n  isError: boolean;\n  headCells: THeadCell[];\n}\n\nexport default function EnhnacedEmployeeTasksTable(\n  props: IEnhnacedEmployeeTasksTableProps\n) {\n  const { tasks, headCells, isLoading, isError } = props;\n\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(25);\n\n  const handleChangePage = (event: unknown, newPage: number) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  return (\n    <StyledTablePageContainer className=\"EnhancedTaskTable\">\n      <StyledTableWrapper className=\"EnhancedTaskTable__container\">\n        <Box sx={{ width: \"100%\" }}>\n          <TableContainer\n            component={Paper}\n            sx={{ maxHeight: maxTableHeight_small }}\n          >\n            <Table\n              sx={{ minWidth: 750, maxHeight: 250 }}\n              aria-labelledby=\"tableTitle\"\n              size=\"medium\"\n              stickyHeader\n            >\n              <EnhancedTableHead headCells={headCells} />\n              <TableBody>\n                {isLoading ? (\n                  <TableRow>\n                    <TableCell colSpan={999}>\n                      <StyledLoadingWrapper>\n                        <CircularProgress />\n                        Cargando Datos...\n                      </StyledLoadingWrapper>\n                    </TableCell>\n                  </TableRow>\n                ) : isError ? (\n                  <></>\n                ) : (\n                  tasks &&\n                  tasks.map((task, index) => {\n                    return (\n                      <TableRow\n                        key={task._id}\n                        sx={{\n                          \"&:last-child td, &:last-child th\": { border: 0 },\n                        }}\n                        style={setTableRowBackgroundColorByPriority(\n                          task.priority\n                        )}\n                      >\n                        <TableCell align=\"center\">\n                          <TaskStatus status={task.status} />\n                        </TableCell>\n                        <TableCell align=\"center\">{task.material}</TableCell>\n                        <TableCell align=\"center\">{task.thickness}</TableCell>\n                        <TableCell align=\"center\">\n                          {task.programNumber}\n                        </TableCell>\n                        <TableCell align=\"center\">\n                          {task.machine.name}\n                        </TableCell>\n                        <TableCell align=\"center\">\n                          {task.duration} min\n                        </TableCell>\n                        <TableCell align=\"center\">\n                          {formatDate(task.end || task.start)}\n                        </TableCell>\n                      </TableRow>\n                    );\n                  })\n                )}\n              </TableBody>\n            </Table>\n          </TableContainer>\n          {!isLoading && tasks && (\n            <TablePagination\n              rowsPerPageOptions={[25, 50, 75, 100]}\n              component=\"div\"\n              count={tasks.length}\n              rowsPerPage={rowsPerPage}\n              page={page}\n              onPageChange={handleChangePage}\n              onRowsPerPageChange={handleChangeRowsPerPage}\n            />\n          )}\n        </Box>\n      </StyledTableWrapper>\n    </StyledTablePageContainer>\n  );\n}\n","import { Grid } from \"@mui/material\";\nimport React from \"react\";\nimport styled from \"styled-components\";\n\nconst StyledTableHeaderInfoCardContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  background: #d8d8d8;\n  border-radius: 0.5rem;\n  padding: 0.15rem 0;\n\n  .MuiGrid-item {\n    text-align: center;\n    padding: 0.25rem;\n    font-weight: 400;\n  }\n`;\n\nconst StyledInfoCardSeparator = styled.div`\n  width: 95%;\n  height: 1px;\n  margin: auto;\n  background: #8a8a8a;\n`;\n\nconst StyledImportantCell = styled.span`\n  font-weight: 700;\n`;\n\nconst StyledValue = styled.span`\n  font-size: 1.5rem;\n`;\n\nconst StyledTotalValue = styled.span`\n  color: green;\n  font-weight: 700;\n`;\n\ninterface ITableHeaderInfoCardProps {\n  machine1Tasks: number;\n  machine1TimeToFinish: number;\n  machine2Tasks: number;\n  machine2TimeToFinish: number;\n  totalTasks: number;\n  totalTimeToFinish: number;\n}\n\nfunction TableHeaderInfoCard(props: ITableHeaderInfoCardProps) {\n  const {\n    machine1Tasks,\n    machine1TimeToFinish,\n    machine2Tasks,\n    machine2TimeToFinish,\n    totalTasks,\n    totalTimeToFinish,\n  } = props;\n\n  return (\n    <StyledTableHeaderInfoCardContainer>\n      <Grid container>\n        {/* Inicio fila 1 */}\n        <Grid item alignItems=\"center\" xs={3}></Grid>\n        <Grid item alignItems=\"start\" xs={3}>\n          <StyledImportantCell>Maq.1</StyledImportantCell>\n        </Grid>\n        <Grid item alignItems=\"start\" xs={3}>\n          <StyledImportantCell>Maq.2</StyledImportantCell>\n        </Grid>\n        <Grid item alignItems=\"center\" xs={3}>\n          <StyledTotalValue>Total</StyledTotalValue>\n        </Grid>\n\n        {/* Inicio fila 2 */}\n        <Grid item alignItems=\"start\" xs={3}>\n          <StyledImportantCell>Prog. Activos</StyledImportantCell>\n        </Grid>\n        <Grid item alignItems=\"center\" xs={3}>\n          <StyledValue>{machine1Tasks}</StyledValue>\n        </Grid>\n        <Grid item alignItems=\"center\" xs={3}>\n          <StyledValue>{machine2Tasks}</StyledValue>\n        </Grid>\n        <Grid item alignItems=\"center\" xs={3}>\n          <StyledValue>\n            <StyledTotalValue>{totalTasks}</StyledTotalValue>\n          </StyledValue>\n        </Grid>\n\n        <StyledInfoCardSeparator />\n\n        {/* Inicio fila 3 */}\n        <Grid item alignItems=\"center\" xs={3}>\n          <StyledImportantCell> T. Restante</StyledImportantCell>\n        </Grid>\n        <Grid item alignItems=\"center\" xs={3}>\n          <StyledValue>{machine1TimeToFinish} min</StyledValue>\n        </Grid>\n        <Grid item alignItems=\"center\" xs={3}>\n          <StyledValue>{machine2TimeToFinish} min</StyledValue>\n        </Grid>\n        <Grid item alignItems=\"center\" xs={3}>\n          <StyledValue>\n            <StyledTotalValue>{totalTimeToFinish} min </StyledTotalValue>\n          </StyledValue>\n        </Grid>\n      </Grid>\n    </StyledTableHeaderInfoCardContainer>\n  );\n}\n\nexport default TableHeaderInfoCard;\n","import { TTaskResponse } from \"../types/taskTypes\";\n\nexport function calculateTotalTime(tasks: TTaskResponse[] | undefined) {\n  if (tasks) {\n    return tasks.reduce(\n      (accumulator, current) => accumulator + current.duration,\n      0\n    );\n  } else {\n    return 0;\n  }\n}\n","import './UserInfoHeader.scss';\n\nimport {\n  StyledTableHeaderInfoWrapper,\n  StyledTableHeaderWrapper,\n} from '../../StyledComponents/StyledTableHeader';\n\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport IconButton from '@mui/material/IconButton';\nimport { TTaskResponse } from '../../types/taskTypes';\nimport { TUserResponse } from '../../types/employeeTypes';\nimport TableHeaderInfoCard from '../TableHeaderInfoCard/TableHeaderInfoCard';\nimport { calculateMachineGeneralValues } from '../../utils/calculateMachineGeneralValues';\nimport { calculateTotalTime } from '../../utils/calculateTotalTime';\nimport styled from 'styled-components';\nimport { useHistory } from 'react-router-dom';\n\nconst StyledFlexGrow = styled.div`\n  flex: 1;\n`;\n\nconst StyledInfoWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  height: 100%;\n`;\n\ninterface IUserInfoHeaderProps {\n  employee: TUserResponse | undefined;\n  tasks: TTaskResponse[] | undefined;\n}\n\nfunction UserInfoHeader(props: IUserInfoHeaderProps) {\n  const { employee, tasks } = props;\n\n  const tasksData = calculateMachineGeneralValues(tasks);\n  const history = useHistory();\n\n  return (\n    <StyledTableHeaderWrapper className='user-data-table-container'>\n      <StyledTableHeaderInfoWrapper className='user-data-table'>\n        <IconButton onClick={() => history.goBack()} aria-label='goBack'>\n          <ArrowBackIcon />\n        </IconButton>\n        <StyledInfoWrapper>\n          <span className='user-data-table__info--name'>{employee?.name}</span>\n          <span className='user-data-table__info'>\n            Cód. Emp: {employee?.employerCode}\n          </span>\n        </StyledInfoWrapper>\n        <StyledFlexGrow />\n        <TableHeaderInfoCard\n          machine1Tasks={tasksData.machine1.activeTasks as number}\n          machine1TimeToFinish={tasksData.machine1.timeToFinish as number}\n          machine2Tasks={tasksData.machine2.activeTasks as number}\n          machine2TimeToFinish={tasksData.machine2.timeToFinish as number}\n          totalTasks={tasks?.length as number}\n          totalTimeToFinish={calculateTotalTime(tasks)}\n        />\n      </StyledTableHeaderInfoWrapper>\n    </StyledTableHeaderWrapper>\n  );\n}\n\nexport default UserInfoHeader;\n","import { MACHINE_1, MACHINE_2 } from \"../constants/machineNames\";\n\nimport { TTaskResponse } from \"../types/taskTypes\";\nimport { calculateTotalTime } from \"./calculateTotalTime\";\n\ntype TTasksData = {\n  machine1: {\n    activeTasks: number | undefined;\n    timeToFinish: number;\n  };\n  machine2: {\n    activeTasks: number | undefined;\n\n    timeToFinish: number;\n  };\n};\n\nexport function calculateMachineGeneralValues(\n  tasks: TTaskResponse[] | undefined\n): TTasksData {\n  const machine1Tasks = tasks?.filter(\n    (task) => task.machine.name === MACHINE_1\n  );\n  const machine2Tasks = tasks?.filter(\n    (task) => task.machine.name === MACHINE_2\n  );\n\n  const machine1TimeToFinish = calculateTotalTime(machine1Tasks);\n  const machine2TimeToFinish = calculateTotalTime(machine2Tasks);\n\n  return {\n    machine1: {\n      activeTasks: machine1Tasks?.length,\n      timeToFinish: machine1TimeToFinish,\n    },\n    machine2: {\n      activeTasks: machine2Tasks?.length,\n      timeToFinish: machine2TimeToFinish,\n    },\n  };\n}\n","// components\nimport EnhancedEmployeeTable from '../../components/MUITable/EnhancedEmployeeTable/EnhancedEmployeeTable';\nimport { THeadCell } from '../../components/MUITable/MUITableTypes';\n// types\nimport { TTaskResponse } from '../../types/taskTypes';\nimport { TUserResponse } from '../../types/employeeTypes';\nimport UserInfoHeader from '../../components/UserInfoHeader/UserInfoHeader';\n\ninterface IEmployeePage {\n  tasks: TTaskResponse[] | undefined;\n  employee: TUserResponse | undefined;\n  isLoading: boolean;\n  isError: boolean;\n}\n\nfunction EmployeePage(props: IEmployeePage) {\n  const { tasks, isLoading, isError, employee } = props;\n\n  const headCells: THeadCell[] = [\n    {\n      id: 'status',\n      label: 'Estado',\n    },\n    {\n      id: 'material',\n      label: 'Material',\n    },\n    {\n      id: 'thickness',\n      label: 'Espesor',\n    },\n    {\n      id: 'programNumber',\n      label: 'Nº Programa',\n    },\n    {\n      id: 'machine',\n      label: 'Máquina',\n    },\n    {\n      id: 'duration',\n      label: 'Tiempo',\n    },\n    {\n      id: 'date',\n      label: 'Fecha',\n    },\n  ];\n\n  return (\n    <>\n      <UserInfoHeader employee={employee} tasks={tasks} />\n      <EnhancedEmployeeTable\n        headCells={headCells}\n        tasks={tasks}\n        isLoading={isLoading}\n        isError={isError}\n      />\n    </>\n  );\n}\n\nexport default EmployeePage;\n","import React from \"react\";\nimport { useParams } from \"react-router-dom\";\n\n// queries\nimport useLoadEmployeeTasksQuery from \"./queries/useLoadEmployeeTasksQuery\";\n\n// components\nimport EmployeePage from \"./EmployeePage\";\n\ninterface IEmployeePageContainerParams {\n  employeeId: string;\n}\n\nfunction EmployeePageContainer() {\n  const { employeeId } = useParams<IEmployeePageContainerParams>();\n\n  const { isLoading, isError, data } = useLoadEmployeeTasksQuery(employeeId);\n\n  return (\n    <>\n      <EmployeePage\n        tasks={data?.employeeTasks}\n        employee={data?.employee}\n        isLoading={isLoading}\n        isError={isError}\n      />\n    </>\n  );\n}\n\nexport default EmployeePageContainer;\n","import {\n  API_URL,\n  ENDPOINT_USERS_BY_ID,\n  ENDPOINT_USER_TASKS_BY_ID,\n} from \"../../../constants/apiConstants\";\n\nimport { TTaskResponse } from \"../../../types/taskTypes\";\nimport axios from \"axios\";\nimport { useQuery } from \"react-query\";\n\nexport default function useLoadEmployeeTasksQuery(employeeId: string) {\n  return useQuery(\n    [\"loadEmployeeTasks\", employeeId],\n    async () => {\n      const { data: employee } = await axios.get(\n        `${API_URL}${ENDPOINT_USERS_BY_ID(employeeId)}`\n      );\n\n      const { data: employeeTasks } = await axios.get(\n        `${API_URL}${ENDPOINT_USER_TASKS_BY_ID(employeeId)}`\n      );\n\n      const sortedActiveTasks = employeeTasks\n        .filter((task: TTaskResponse) => task.status === 0)\n        .sort(\n          (a: any, b: any) =>\n            (new Date(b.start) as any) - (new Date(a.start) as any)\n        );\n\n      const sortedFinishedTasks = employeeTasks\n        .filter((task: TTaskResponse) => task.status === 1)\n        .sort(\n          (a: any, b: any) =>\n            (new Date(b.end) as any) - (new Date(a.end) as any)\n        );\n\n      const sortedTasks = [...sortedActiveTasks, ...sortedFinishedTasks];\n\n      return { employeeTasks: sortedTasks, employee };\n    },\n    {\n      refetchInterval: 60000,\n    }\n  );\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\n// styles\nimport \"./EmployeeCard.scss\";\n\n// types\nimport { TUserResponse } from \"../../../types/employeeTypes\";\n\n// components\nimport { Card, CardActions, CardContent, Typography } from \"@mui/material\";\n\ninterface IEmployeeCardProps {\n  employee: TUserResponse;\n}\n\nfunction EmployeeCard(props: IEmployeeCardProps) {\n  const { employee } = props;\n  return (\n    <Card key={employee._id} className={`employee__card`}>\n      <CardContent>\n        <Typography color=\"textSecondary\" gutterBottom>\n          Cód. empleado: {employee.employerCode}\n        </Typography>\n        <Typography variant=\"h5\" component=\"h2\">\n          {employee.name}\n        </Typography>\n      </CardContent>\n      <CardActions>\n        <Link to={`/employees/${employee._id}`} className=\"employee__link\">\n          Ver Empleado\n        </Link>\n      </CardActions>\n    </Card>\n  );\n}\n\nexport default EmployeeCard;\n","import styled from \"styled-components\";\n\nimport \"./EmployeesListPage.scss\";\n\n// types\nimport { TUserResponse } from \"../../../../types/employeeTypes\";\n\n// components\nimport EmployeeCard from \"../../EmployeeCard/EmployeeCard\";\nimport { CircularProgress } from \"@mui/material\";\n\nconst StyledEmployeePageContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n  width: 100%;\n`;\n\nconst StyledLoadingWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 1rem;\n\n  font-size: 1.75rem;\n`;\n\ninterface IEmployeesCardProps {\n  employees: TUserResponse[] | undefined;\n  isLoading: boolean;\n  isError: boolean;\n}\n\nfunction EmployeesListPage(props: IEmployeesCardProps) {\n  const { employees, isLoading, isError } = props;\n  return (\n    <>\n      <div className=\"employees-title\">Lista de empleados</div>\n      <StyledEmployeePageContainer className=\"employees-container\">\n        {isLoading ? (\n          <StyledLoadingWrapper>\n            <CircularProgress />\n            Cargando Datos...\n          </StyledLoadingWrapper>\n        ) : isError ? (\n          <></>\n        ) : (\n          employees &&\n          employees.map((employee) => {\n            return <EmployeeCard key={employee._id} employee={employee} />;\n          })\n        )}\n      </StyledEmployeePageContainer>\n    </>\n  );\n}\nexport default EmployeesListPage;\n","// query\nimport useLoadEmployeesQuery from \"./queries/useLoadEmployeesQuery\";\n// components\nimport EmployeesListPage from \"./components/EmployeesListPage/EmployeesListPage\";\n\nfunction EmployeesListPageContainer() {\n  // getEmployers\n  const { isLoading, isError, data } = useLoadEmployeesQuery();\n\n  return (\n    <>\n      <EmployeesListPage employees={data} isLoading={isLoading} isError={isError} />\n    </>\n  );\n}\n\nexport default EmployeesListPageContainer;\n","import { API_URL, ENDPOINT_USERS_ROLE } from '../../../constants/apiConstants';\n\nimport { EMPLOYEE_NUMBER } from '../../../constants/rolesByNumber';\nimport axios from 'axios';\nimport { useQuery } from 'react-query';\n\nexport default function useLoadEmployeesQuery() {\n  return useQuery(['loadEmployers'], async () => {\n    const endpoint = `${API_URL}${ENDPOINT_USERS_ROLE(EMPLOYEE_NUMBER)}`;\n    const { data } = await axios.get(endpoint);\n\n    return data;\n  });\n}\n","export const ADMIN_NUMBER = 0;\nexport const EMPLOYEE_NUMBER = 1;\n","import {\n  Box,\n  CircularProgress,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TablePagination,\n  TableRow,\n} from \"@mui/material\";\nimport {\n  StyledLoadingWrapper,\n  StyledTablePageContainer,\n  StyledTableWrapper,\n} from \"../SCMuiTable\";\n\nimport EnhancedTableHead from \"../EnhancedTableHead/EnhancedTableHead\";\nimport React from \"react\";\nimport { THeadCell } from \"../MUITableTypes\";\nimport { TTaskResponse } from \"../../../types/taskTypes\";\nimport formatDate from \"../../../utils/formatDate\";\nimport { maxTableHeight } from \"../../../styles/styleConstants\";\nimport { setTableRowBackgroundColorByPriority } from \"../setTableRowBackgroundColorByPriority\";\n\ninterface IEnhancedTableProps {\n  tasks: TTaskResponse[] | undefined;\n  isLoading: boolean;\n  isError: boolean;\n  headCells: THeadCell[];\n}\n\nexport default function EnhancedFinishedTasksTable(props: IEnhancedTableProps) {\n  const { tasks, headCells, isLoading, isError } = props;\n\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(25);\n\n  const handleChangePage = (event: unknown, newPage: number) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  return (\n    <StyledTablePageContainer className=\"EnhancedTaskTable\">\n      <StyledTableWrapper className=\"EnhancedTaskTable__container\">\n        <Box sx={{ width: \"100%\" }}>\n          <TableContainer component={Paper} sx={{ maxHeight: maxTableHeight }}>\n            <Table\n              sx={{ minWidth: 750 }}\n              aria-labelledby=\"tableTitle\"\n              size=\"medium\"\n              stickyHeader\n            >\n              <EnhancedTableHead headCells={headCells} />\n              <TableBody>\n                {isLoading ? (\n                  <TableRow>\n                    <TableCell colSpan={999}>\n                      <StyledLoadingWrapper>\n                        <CircularProgress />\n                        Cargando Datos...\n                      </StyledLoadingWrapper>\n                    </TableCell>\n                  </TableRow>\n                ) : isError ? (\n                  <></>\n                ) : (\n                  tasks &&\n                  tasks.map((task, index) => {\n                    return (\n                      <TableRow\n                        key={task._id}\n                        sx={{\n                          \"&:last-child td, &:last-child th\": { border: 0 },\n                        }}\n                        style={setTableRowBackgroundColorByPriority(\n                          task.priority\n                        )}\n                      >\n                        <TableCell align=\"center\">\n                          {task.machine.name}\n                        </TableCell>\n                        <TableCell align=\"center\">{task.material}</TableCell>\n                        <TableCell align=\"center\">{task.thickness}</TableCell>\n                        <TableCell align=\"center\">\n                          {task.programNumber}\n                        </TableCell>\n                        <TableCell align=\"center\">\n                          {task.user.employerCode}\n                        </TableCell>\n                        <TableCell align=\"center\">\n                          {task.duration} min\n                        </TableCell>\n                        <TableCell align=\"center\">\n                          {formatDate(task.end)}\n                        </TableCell>\n                      </TableRow>\n                    );\n                  })\n                )}\n              </TableBody>\n            </Table>\n          </TableContainer>\n          {!isLoading && tasks && (\n            <TablePagination\n              rowsPerPageOptions={[25, 50, 75, 100]}\n              component=\"div\"\n              count={tasks.length}\n              rowsPerPage={rowsPerPage}\n              page={page}\n              onPageChange={handleChangePage}\n              onRowsPerPageChange={handleChangeRowsPerPage}\n            />\n          )}\n        </Box>\n      </StyledTableWrapper>\n    </StyledTablePageContainer>\n  );\n}\n","import { Grid } from \"@mui/material\";\nimport React from \"react\";\nimport styled from \"styled-components\";\n\nconst StyledTableHeaderInfoCardContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  background: #d8d8d8;\n  border-radius: 0.5rem;\n  padding: 0.15rem 0;\n\n  .MuiGrid-item {\n    text-align: center;\n    padding: 0.25rem;\n    font-weight: 400;\n  }\n`;\n\nconst StyledInfoCardSeparator = styled.div`\n  width: 95%;\n  height: 1px;\n  margin: auto;\n  background: #8a8a8a;\n`;\n\nconst StyledImportantCell = styled.span`\n  font-weight: 700;\n`;\n\nconst StyledValue = styled.span`\n  font-size: 1.5rem;\n`;\n\nconst StyledTotalValue = styled.span`\n  color: green;\n  font-weight: 700;\n`;\n\ninterface ITableHeaderInfoCardProps {\n  machine1Tasks: number;\n  machine1Time: number;\n  machine2Tasks: number;\n  machine2Time: number;\n  totalTasks: number;\n  totalTime: number;\n}\n\nfunction FinishedTasksTableHeaderInfoCard(props: ITableHeaderInfoCardProps) {\n  const {\n    machine1Tasks,\n    machine1Time,\n    machine2Tasks,\n    machine2Time,\n    totalTasks,\n    totalTime,\n  } = props;\n\n  return (\n    <StyledTableHeaderInfoCardContainer>\n      <Grid container>\n        {/* Inicio fila 1 */}\n        <Grid item alignItems=\"center\" xs={3}></Grid>\n        <Grid item alignItems=\"start\" xs={3}>\n          <StyledImportantCell>Maq.1</StyledImportantCell>\n        </Grid>\n        <Grid item alignItems=\"start\" xs={3}>\n          <StyledImportantCell>Maq.2</StyledImportantCell>\n        </Grid>\n        <Grid item alignItems=\"center\" xs={3}>\n          <StyledTotalValue>Total</StyledTotalValue>\n        </Grid>\n\n        {/* Inicio fila 2 */}\n        <Grid item alignItems=\"start\" xs={3}>\n          <StyledImportantCell>Prog. Terminados</StyledImportantCell>\n        </Grid>\n        <Grid item alignItems=\"center\" xs={3}>\n          <StyledValue>{machine1Tasks}</StyledValue>\n        </Grid>\n        <Grid item alignItems=\"center\" xs={3}>\n          <StyledValue>{machine2Tasks}</StyledValue>\n        </Grid>\n        <Grid item alignItems=\"center\" xs={3}>\n          <StyledValue>\n            <StyledTotalValue>{totalTasks}</StyledTotalValue>\n          </StyledValue>\n        </Grid>\n\n        <StyledInfoCardSeparator />\n\n        {/* Inicio fila 3 */}\n        <Grid item alignItems=\"center\" xs={3}>\n          <StyledImportantCell> Tiempo</StyledImportantCell>\n        </Grid>\n        <Grid item alignItems=\"center\" xs={3}>\n          <StyledValue>{machine1Time} min</StyledValue>\n        </Grid>\n        <Grid item alignItems=\"center\" xs={3}>\n          <StyledValue>{machine2Time} min</StyledValue>\n        </Grid>\n        <Grid item alignItems=\"center\" xs={3}>\n          <StyledValue>\n            <StyledTotalValue>{totalTime} min </StyledTotalValue>\n          </StyledValue>\n        </Grid>\n      </Grid>\n    </StyledTableHeaderInfoCardContainer>\n  );\n}\n\nexport default FinishedTasksTableHeaderInfoCard;\n","import {\n  StyledTableHeaderInfoWrapper,\n  StyledTableHeaderWrapper,\n} from '../../../StyledComponents/StyledTableHeader';\n\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport FinishedTasksTableHeaderInfoCard from '../../../components/MUITable/FinishedTasksTableHeaderInfoCard/FinishedTasksTableHeaderInfoCard';\nimport IconButton from '@mui/material/IconButton';\nimport { ROUTE_MACHINES } from '../../../routes/routes';\nimport { TTaskResponse } from '../../../types/taskTypes';\nimport TableHeaderInfoCard from '../../../components/TableHeaderInfoCard/TableHeaderInfoCard';\nimport { calculateFinishedTasksGeneralValues } from '../../../utils/calculateFinishedTasksGeneralValues';\nimport { calculateTotalTime } from '../../../utils/calculateTotalTime';\nimport styled from 'styled-components';\nimport { useHistory } from 'react-router-dom';\n\nconst StyledFlexGrow = styled.div`\n  flex: 1;\n`;\n\nconst StyledTableHeaderName = styled.p`\n  margin-left: 0.5rem;\n  font-size: 1.5rem;\n  justify-self: flex-start;\n`;\n\ninterface IFinishedTasksInfoHeaderProps {\n  tasks: TTaskResponse[] | undefined;\n}\n\nfunction FinishedTasksInfoHeader(props: IFinishedTasksInfoHeaderProps) {\n  const { tasks } = props;\n\n  const tasksData = calculateFinishedTasksGeneralValues(tasks);\n  const history = useHistory();\n\n  return (\n    <StyledTableHeaderWrapper className='user-data-table-container'>\n      <StyledTableHeaderInfoWrapper className='user-data-table'>\n        <IconButton\n          onClick={() => history.push(ROUTE_MACHINES)}\n          aria-label='goBack'\n        >\n          <ArrowBackIcon />\n        </IconButton>\n        <StyledTableHeaderName>Programas finalizados</StyledTableHeaderName>\n        <StyledFlexGrow />\n        <FinishedTasksTableHeaderInfoCard\n          machine1Tasks={tasksData.machine1.tasks as number}\n          machine1Time={tasksData.machine1.time as number}\n          machine2Tasks={tasksData.machine2.tasks as number}\n          machine2Time={tasksData.machine2.time as number}\n          totalTasks={tasks?.length as number}\n          totalTime={calculateTotalTime(tasks)}\n        />\n      </StyledTableHeaderInfoWrapper>\n    </StyledTableHeaderWrapper>\n  );\n}\n\nexport default FinishedTasksInfoHeader;\n","import { MACHINE_1, MACHINE_2 } from \"../constants/machineNames\";\n\nimport { TTaskResponse } from \"../types/taskTypes\";\nimport { calculateTotalTime } from \"./calculateTotalTime\";\n\ntype TFinishedTasksData = {\n  machine1: {\n    tasks: number | undefined;\n    time: number;\n  };\n  machine2: {\n    tasks: number | undefined;\n\n    time: number;\n  };\n};\n\nexport function calculateFinishedTasksGeneralValues(\n  tasks: TTaskResponse[] | undefined\n): TFinishedTasksData {\n  const machine1Tasks = tasks?.filter(\n    (task) => task.machine.name === MACHINE_1\n  );\n\n  const machine2Tasks = tasks?.filter(\n    (task) => task.machine.name === MACHINE_2\n  );\n\n  const machine1Time = calculateTotalTime(machine1Tasks);\n  const machine2Time = calculateTotalTime(machine2Tasks);\n\n  return {\n    machine1: {\n      tasks: machine1Tasks?.length,\n      time: machine1Time,\n    },\n    machine2: {\n      tasks: machine2Tasks?.length,\n      time: machine2Time,\n    },\n  };\n}\n","import EnhancedFinishedTasksTable from \"../../components/MUITable/EnhancedFinishedTasksTable/EnhancedFinishedTasksTable\";\nimport FinishedTasksInfoHeader from \"./components/FinishedTasksInfoHeader\";\nimport { THeadCell } from \"../../components/MUITable/MUITableTypes\";\nimport { TTaskResponse } from \"../../types/taskTypes\";\n\ninterface IFinishedTasksPageProps {\n  tasks: TTaskResponse[] | undefined;\n  isLoading: boolean;\n  isError: boolean;\n  handleTaskClick?: (taskId: string) => void;\n}\n\nfunction FinishedTasksPage(props: IFinishedTasksPageProps) {\n  const { tasks, isLoading, isError } = props;\n\n  const headCells: THeadCell[] = [\n    {\n      id: \"machine\",\n      label: \"Máquina\",\n    },\n    {\n      id: \"material\",\n      label: \"Material\",\n    },\n    {\n      id: \"thickness\",\n      label: \"Espesor\",\n    },\n    {\n      id: \"programNumber\",\n      label: \"Nº Programa\",\n    },\n    {\n      id: \"employerCode\",\n      label: \"Técnico\",\n    },\n    {\n      id: \"duration\",\n      label: \"Tiempo\",\n    },\n    {\n      id: \"date\",\n      label: \"Fecha\",\n    },\n  ];\n\n  return (\n    <>\n      <FinishedTasksInfoHeader tasks={tasks} />\n      <EnhancedFinishedTasksTable\n        headCells={headCells}\n        tasks={tasks}\n        isLoading={isLoading}\n        isError={isError}\n      />\n    </>\n  );\n}\n\nexport default FinishedTasksPage;\n","import FinishedTasksPage from \"./FinishedTasksPage\";\nimport useFinisedTasksQuery from \"./queries/useLoadFinishedTasksQuery\";\n\nfunction FinishedTasksPageContainer() {\n  const { isLoading, isError, data } = useFinisedTasksQuery();\n\n  return (\n    <>\n      <FinishedTasksPage tasks={data} isLoading={isLoading} isError={isError} />\n    </>\n  );\n}\n\nexport default FinishedTasksPageContainer;\n","import {\n  API_URL,\n  ENDPOINT_TASKS_BY_STATUS,\n} from '../../../constants/apiConstants';\n\nimport { FINISHED_TASK } from '../../../constants/taskStatus';\nimport axios from 'axios';\nimport { useQuery } from 'react-query';\n\nexport default function useFinisedTasksQuery() {\n  // el useQuery reb un array amb el nom de la \"action\" i les variables que si canvien torna a executar\n  return useQuery(\n    ['loadFinishedTasks'],\n    async () => {\n      const endpoint = `${API_URL}${ENDPOINT_TASKS_BY_STATUS(FINISHED_TASK)}`;\n      const { data: finishedTasks } = await axios.get(endpoint);\n\n      // Sort from newer to older\n      const sortedTasks = finishedTasks.sort((a: any, b: any) => {\n        const aDate: any = new Date(a.end);\n        const bDate: any = new Date(b.end);\n\n        return bDate - aDate;\n      });\n\n      return sortedTasks;\n    },\n    {\n      refetchInterval: 60000,\n    }\n  );\n}\n","export const FINISHED_TASK = 1;\nexport const ACTIVE_TASK = 0;\n","export const ERROR_MESSAGE_INVALID_CREDENTIALS = (userCode: string) =>\n  `No existe un empleado con el código de empleado: ${userCode}.`;\n","import { API_URL, ENDPOINT_AUTH } from '../../constants/apiConstants';\nimport {\n  LOGIN_ERROR,\n  LOGIN_LOADING,\n  LOGIN_SUCCESS,\n  LOGOUT,\n} from './actionTypes';\n\nimport { Dispatch } from 'redux';\nimport { ERROR_MESSAGE_INVALID_CREDENTIALS } from '../../constants/errorMessages';\nimport { TUserResponse } from '../../types/employeeTypes';\nimport axios from 'axios';\nimport toast from 'react-hot-toast';\n\ntype TLoginLoadingAction = {\n  type: typeof LOGIN_LOADING;\n};\n\ntype TLogoutAction = {\n  type: typeof LOGOUT;\n};\n\ntype TLoginRequest = {\n  employeeCode: string;\n};\n\nexport type TAuthActions =\n  | TLoginLoadingAction\n  | TLogoutAction\n  | {\n      type: typeof LOGIN_SUCCESS;\n      payload: { user: TUserResponse };\n    }\n  | {\n      type: typeof LOGIN_ERROR;\n      payload: { errorMessage: string };\n    };\n\nexport function loginLoading() {\n  return {\n    type: LOGIN_LOADING,\n  };\n}\n\nexport function loginSuccess(user: TUserResponse | undefined) {\n  return {\n    type: LOGIN_SUCCESS,\n    payload: { user },\n  };\n}\n\nexport function loginError(errorMessage: string) {\n  return {\n    type: LOGIN_ERROR,\n    payload: { errorMessage },\n  };\n}\n\nexport function login(userCode: string) {\n  return async (dispatch: Dispatch) => {\n    try {\n      dispatch(loginLoading());\n      const endpoint = `${API_URL}${ENDPOINT_AUTH}`;\n\n      const body: TLoginRequest = { employeeCode: userCode };\n      const { data } = await axios.post(endpoint, body);\n\n      if (data) {\n        localStorage.setItem('user', JSON.stringify(data));\n        dispatch(loginSuccess(data));\n      } else {\n        dispatch(loginError(ERROR_MESSAGE_INVALID_CREDENTIALS(userCode)));\n      }\n    } catch (error: any) {\n      if (error.response) {\n        dispatch(loginError(error.response.message));\n        toast.error('Código de empleado inválido.');\n      } else {\n        dispatch(loginError(error.message));\n        toast.error('Error al iniciar sesión. Por favor, inténtelo de nuevo');\n      }\n    }\n  };\n}\n\nexport function logout() {\n  localStorage.removeItem('user');\n\n  return {\n    type: LOGOUT,\n  };\n}\n","import './LeftMenu.scss';\n\nimport { List, ListItem, ListItemIcon, ListItemText } from '@mui/material';\nimport { MACHINE_1, MACHINE_2 } from '../../constants/machineNames';\nimport { NavLink, useHistory } from 'react-router-dom';\nimport {\n  ROUTE_ADMIN_PROFILE,\n  ROUTE_EMPLOYEES,\n  ROUTE_FINISHEDTASKS,\n  ROUTE_MACHINES,\n  ROUTE_MACHINES_NAME_FACTORY,\n} from '../../routes/routes';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { ADMIN_NUMBER } from '../../constants/rolesByNumber';\nimport AssignmentTurnedInIcon from '@mui/icons-material/AssignmentTurnedIn';\nimport Avatar from '@mui/material/Avatar';\nimport { ListItemButton } from '@mui/material';\nimport LogoutIcon from '@mui/icons-material/Logout';\nimport PeopleIcon from '@mui/icons-material/People';\nimport PrecisionManufacturingIcon from '@mui/icons-material/PrecisionManufacturing';\nimport SettingsIcon from '@mui/icons-material/Settings';\nimport StoreIcon from '@mui/icons-material/Store';\nimport { TInitialState } from '../../redux/store/initialState';\nimport { logout } from '../../redux/actions/authActions';\n\nfunction LeftMenu() {\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const { user } = useSelector((state: TInitialState) => state.authReducer);\n\n  return (\n    <div className='left-menu'>\n      <div className='left-menu__header'>\n        <Avatar>{user?.name.charAt(0) || 'CRC'}</Avatar>\n      </div>\n      <nav className='left-menu__nav'>\n        <List>\n          <ListItem disableGutters>\n            <NavLink\n              activeClassName='left-menu__nav-item--active'\n              to={ROUTE_MACHINES}\n              className='left-menu__nav-item'\n            >\n              <ListItemButton>\n                <ListItemIcon>\n                  <StoreIcon />\n                </ListItemIcon>\n                <ListItemText primary='Maquinas' />\n              </ListItemButton>\n            </NavLink>\n          </ListItem>\n          <List component='div' disablePadding>\n            <NavLink\n              activeClassName='left-menu__nav-item--active'\n              to={ROUTE_MACHINES_NAME_FACTORY(MACHINE_1)}\n              className='left-menu__nav-item'\n            >\n              <ListItemButton sx={{ pl: 5 }}>\n                <ListItemIcon>\n                  <PrecisionManufacturingIcon />\n                </ListItemIcon>\n                <ListItemText primary='Maquina 1' />\n              </ListItemButton>\n            </NavLink>\n            <NavLink\n              activeClassName='left-menu__nav-item--active'\n              to={ROUTE_MACHINES_NAME_FACTORY(MACHINE_2)}\n              className='left-menu__nav-item'\n            >\n              <ListItemButton sx={{ pl: 5 }}>\n                <ListItemIcon>\n                  <PrecisionManufacturingIcon />\n                </ListItemIcon>\n                <ListItemText primary='Maquina 2' />\n              </ListItemButton>\n            </NavLink>\n          </List>\n\n          {user?.role === ADMIN_NUMBER && (\n            <ListItem disableGutters>\n              <NavLink\n                activeClassName='left-menu__nav-item--active'\n                to={ROUTE_EMPLOYEES}\n                className='left-menu__nav-item'\n              >\n                <ListItemButton>\n                  <ListItemIcon>\n                    <PeopleIcon />\n                  </ListItemIcon>\n                  <ListItemText primary='Lista de técnicos' />\n                </ListItemButton>\n              </NavLink>\n            </ListItem>\n          )}\n\n          <ListItem disableGutters>\n            <NavLink\n              activeClassName='left-menu__nav-item--active'\n              to={ROUTE_FINISHEDTASKS}\n              className='left-menu__nav-item'\n            >\n              <ListItemButton>\n                <ListItemIcon>\n                  <AssignmentTurnedInIcon />\n                </ListItemIcon>\n                <ListItemText primary='Programas Terminados' />\n              </ListItemButton>\n            </NavLink>\n          </ListItem>\n\n          {user?.role === ADMIN_NUMBER && (\n            <ListItem disableGutters>\n              <NavLink\n                activeClassName='left-menu__nav-item--active'\n                to={ROUTE_ADMIN_PROFILE}\n                className='left-menu__nav-item'\n              >\n                <ListItemButton>\n                  <ListItemIcon>\n                    <SettingsIcon />\n                  </ListItemIcon>\n                  <ListItemText primary='Zona Admin' />\n                </ListItemButton>\n              </NavLink>\n            </ListItem>\n          )}\n        </List>\n        <div className='flex-grow'></div>\n\n        <ListItem\n          disableGutters\n          className='left-menu__nav-item left-menu__nav-item--bottom'\n        >\n          <ListItemButton\n            onClick={() => {\n              dispatch(logout());\n              history.replace('/');\n            }}\n          >\n            <ListItemIcon>\n              <LogoutIcon />\n            </ListItemIcon>\n            <ListItemText primary='Salir' />\n          </ListItemButton>\n        </ListItem>\n      </nav>\n    </div>\n  );\n}\n\nexport default LeftMenu;\n","import React from \"react\";\nimport LeftMenu from \"../LeftMenu/LeftMenu\";\nimport \"./Layout.scss\";\n\ninterface ILayoutProps {\n  children: React.ReactNode;\n}\n\nfunction Layout(props: ILayoutProps) {\n  const { children } = props;\n\n  return (\n    <div className=\"layout\">\n      <div className=\"layout__menu-container\">\n        <LeftMenu />\n      </div>\n      <div className=\"layout__content\">{children}</div>\n    </div>\n  );\n}\n\nexport default Layout;\n","import './LoginPage.scss';\n\nimport {\n  Avatar,\n  Button,\n  CircularProgress,\n  Grid,\n  Paper,\n  TextField,\n} from '@mui/material';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport LoginIcon from '@mui/icons-material/Login';\nimport { TInitialState } from '../../redux/store/initialState';\nimport { login } from '../../redux/actions/authActions';\nimport styled from 'styled-components';\nimport { useHistory } from 'react-router';\n\nconst StyledLoadingWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100vw;\n  height: 100vh;\n\n  .MuiPaper-root {\n    padding: 3rem 1.25rem;\n    width: 17rem;\n  }\n\n  .MuiGrid-root {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n  }\n  .MuiAvatar-root {\n    margin-bottom: 1rem;\n    background-color: #1bbd7e;\n  }\n  .MuiFormControl-root {\n    margin-bottom: 1rem;\n    margin-top: 1rem;\n  }\n  .MuiButton-root {\n    margin-top: 1rem;\n  }\n`;\n\nfunction LoginPage() {\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const { loginLoading, loginError, user } = useSelector(\n    (state: TInitialState) => state.authReducer\n  );\n\n  const valueRef = useRef<HTMLInputElement>(null);\n  const [warningMessage, setWarningMessage] = useState('');\n\n  useEffect(() => {\n    if (user) {\n      history.replace('/machines');\n    }\n    if (loginError) {\n      setWarningMessage(loginError);\n    }\n  }, [user, loginError]);\n\n  function handleLogInClick() {\n    if (valueRef.current) {\n      dispatch(login(valueRef.current.value));\n    }\n  }\n\n  function handleKeyUp(event: React.KeyboardEvent) {\n    if (event.key === 'Enter') {\n      handleLogInClick();\n    }\n  }\n\n  return (\n    <StyledLoadingWrapper>\n      <Grid>\n        <Paper elevation={10}>\n          <Grid>\n            <Avatar>\n              <LoginIcon />\n            </Avatar>\n            <h2>Login</h2>\n          </Grid>\n          <TextField\n            label='Código de empleado'\n            placeholder='Entra el código de empleado'\n            variant='standard'\n            fullWidth\n            required\n            inputRef={valueRef}\n            onKeyUp={handleKeyUp}\n          />\n          {loginLoading && <CircularProgress />}\n          <small className='form__warningMessage'>{warningMessage}</small>\n\n          <Button variant='contained' fullWidth onClick={handleLogInClick}>\n            login\n          </Button>\n        </Paper>\n      </Grid>\n    </StyledLoadingWrapper>\n  );\n}\n\nexport default LoginPage;\n","import { Button } from \"@mui/material\";\n\ninterface IFinishTaskButtonProps {\n  taskId: string;\n  programNumber: string;\n  openFinishedTaskDialog: (programNumber: string) => void;\n}\n\nfunction FinishTaskButton(props: IFinishTaskButtonProps) {\n  const { taskId, openFinishedTaskDialog } = props;\n\n  function handleClick() {\n    openFinishedTaskDialog(taskId);\n  }\n\n  return (\n    <>\n      <Button variant=\"contained\" disableElevation onClick={handleClick}>\n        Finalizar\n      </Button>\n    </>\n  );\n}\n\nexport default FinishTaskButton;\n","import {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  Grid,\n  TextField,\n} from \"@mui/material\";\nimport React, { useState } from \"react\";\nimport { finishTask, forceRender } from \"../../../redux/actions/mainActions\";\n\nimport { saveFinishedTask } from \"../../../mocks/tasksRepository\";\nimport { useDispatch } from \"react-redux\";\n\nconst initialState = {\n  taskId: \"\",\n  isAcceptButtonActive: false,\n  employeeCode: \"\",\n};\n\nexport default function useFinishTaskDialog() {\n  const dispatch = useDispatch();\n\n  const [isFinishTaskDialogOpen, setIsFinishTaskDialogOpen] = useState(false);\n\n  const [finishTaskDialogState, setFinishTaskDialogState] =\n    useState(initialState);\n\n  function handleFinishTaskDialogOpen(taskId: string) {\n    setIsFinishTaskDialogOpen(true);\n    setFinishTaskDialogState({\n      ...finishTaskDialogState,\n      taskId,\n      isAcceptButtonActive: false,\n      employeeCode: \"\",\n    });\n  }\n\n  function handleFinishTaskDialogClose() {\n    setIsFinishTaskDialogOpen(false);\n  }\n\n  function handleEmployeeCodeChange({ target }: any) {\n    let hasValue = false;\n    if (target.value) {\n      hasValue = true;\n    }\n\n    setFinishTaskDialogState((prevState) => ({\n      ...prevState,\n      isAcceptButtonActive: hasValue,\n      employeeCode: target.value,\n    }));\n  }\n\n  function handleAccept() {\n    dispatch(\n      finishTask(\n        finishTaskDialogState.employeeCode,\n        finishTaskDialogState.taskId\n      )\n    );\n    setIsFinishTaskDialogOpen(false);\n  }\n\n  const FinishTaskDialog = (\n    <Dialog\n      open={isFinishTaskDialogOpen}\n      onClose={handleFinishTaskDialogClose}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n    >\n      <DialogTitle id=\"alert-dialog-title\">\n        {\"Confirmación finalizar programa\"}\n      </DialogTitle>\n      <DialogContent>\n        <DialogContentText id=\"alert-dialog-description\">\n           Introduce tu código de empleado para finalizar el programa:\n        </DialogContentText>\n        <Grid container>\n          <Grid item xs={8}>\n            <TextField\n              variant=\"outlined\"\n              label=\"Cód. Empleado\"\n              placeholder=\"Código de empleado\"\n              fullWidth\n              sx={{ marginTop: \"1rem\" }}\n              value={finishTaskDialogState.employeeCode}\n              onChange={handleEmployeeCodeChange}\n            />\n          </Grid>\n        </Grid>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleFinishTaskDialogClose}>Cancelar</Button>\n        <Button\n          onClick={handleAccept}\n          autoFocus\n          variant=\"contained\"\n          disabled={finishTaskDialogState.isAcceptButtonActive ? false : true}\n        >\n          Finalizar programa\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n\n  return {\n    FinishTaskDialog,\n    handleFinishTaskDialogOpen,\n    handleFinishTaskDialogClose,\n  };\n}\n","import {\n  Box,\n  CircularProgress,\n  IconButton,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TablePagination,\n  TableRow,\n} from '@mui/material';\nimport React, { useState } from 'react';\nimport {\n  StyledLoadingWrapper,\n  StyledTablePageContainer,\n  StyledTableWrapper,\n} from '../SCMuiTable';\n\nimport { ADMIN_NUMBER } from '../../../constants/rolesByNumber';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport EnhancedTableHead from '../EnhancedTableHead/EnhancedTableHead';\nimport FinishTaskButton from '../../../pages/MachinePage/components/FinishTaskButton/FinishTaskButton';\nimport { THeadCell } from '../MUITableTypes';\nimport { TInitialState } from '../../../redux/store/initialState';\nimport { TTaskResponse } from '../../../types/taskTypes';\nimport { maxTableHeight } from '../../../styles/styleConstants';\nimport { setTableRowBackgroundColorByPriority } from '../setTableRowBackgroundColorByPriority';\nimport styled from 'styled-components';\nimport useFinishTaskDialog from '../../../pages/MachinePage/hooks/useFinishTaskDialog';\nimport { useSelector } from 'react-redux';\n\nconst StyledIconButton = styled(IconButton)`\n  .MuiSvgIcon-root {\n    color: #707070;\n\n    &:hover {\n      color: #1876d1;\n    }\n  }\n`;\n\ninterface IEnhancedTableProps {\n  tasks: TTaskResponse[] | undefined;\n  isLoading: boolean;\n  isError: boolean;\n  headCells: THeadCell[];\n  handleDeleteTask: (taskId: string) => void;\n}\n\nexport default function EnhancedTaksTable(props: IEnhancedTableProps) {\n  const { tasks, headCells, isLoading, isError, handleDeleteTask } = props;\n  const { user } = useSelector((state: TInitialState) => state.authReducer);\n\n  const { FinishTaskDialog, handleFinishTaskDialogOpen } =\n    useFinishTaskDialog();\n\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(25);\n\n  const handleChangePage = (event: unknown, newPage: number) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  return (\n    <StyledTablePageContainer className='EnhancedTaskTable'>\n      <StyledTableWrapper className='EnhancedTaskTable__container'>\n        <Box sx={{ width: '100%' }}>\n          <TableContainer component={Paper} sx={{ maxHeight: maxTableHeight }}>\n            <Table\n              sx={{ minWidth: 750 }}\n              aria-labelledby='tableTitle'\n              size='medium'\n              stickyHeader\n            >\n              <EnhancedTableHead headCells={headCells} />\n              <TableBody>\n                {isLoading ? (\n                  <TableRow>\n                    <TableCell colSpan={999}>\n                      <StyledLoadingWrapper>\n                        <CircularProgress />\n                        Cargando Datos...\n                      </StyledLoadingWrapper>\n                    </TableCell>\n                  </TableRow>\n                ) : isError ? (\n                  <></>\n                ) : (\n                  tasks &&\n                  tasks.map((task, index) => {\n                    return (\n                      <TableRow\n                        key={task._id}\n                        sx={{\n                          '&:last-child td, &:last-child th': { border: 0 },\n                        }}\n                        style={setTableRowBackgroundColorByPriority(\n                          task.priority\n                        )}\n                      >\n                        <TableCell align='center'>{task.material}</TableCell>\n                        <TableCell align='center'>{task.thickness}</TableCell>\n                        <TableCell align='center'>\n                          {task.programNumber}\n                        </TableCell>\n                        <TableCell align='center'>\n                          {task.user.employerCode}\n                        </TableCell>\n                        <TableCell align='center'>\n                          {task.duration} min\n                        </TableCell>\n                        <TableCell align='right'>\n                          {user?.role === ADMIN_NUMBER ? (\n                            <FinishTaskButton\n                              taskId={task._id}\n                              programNumber={task.programNumber}\n                              openFinishedTaskDialog={\n                                handleFinishTaskDialogOpen\n                              }\n                            />\n                          ) : (\n                            task.user.employerCode === user?.employerCode && (\n                              <FinishTaskButton\n                                taskId={task._id}\n                                programNumber={task.programNumber}\n                                openFinishedTaskDialog={\n                                  handleFinishTaskDialogOpen\n                                }\n                              />\n                            )\n                          )}\n\n                          {user?.role === ADMIN_NUMBER && (\n                            <StyledIconButton\n                              color='secondary'\n                              onClick={() => {\n                                handleDeleteTask(task._id);\n                              }}\n                              sx={{ marginLeft: '0.5rem' }}\n                            >\n                              <DeleteIcon color='primary' />\n                            </StyledIconButton>\n                          )}\n                        </TableCell>\n                      </TableRow>\n                    );\n                  })\n                )}\n              </TableBody>\n            </Table>\n          </TableContainer>\n          {!isLoading && tasks && (\n            <TablePagination\n              rowsPerPageOptions={[25, 50, 75, 100]}\n              component='div'\n              count={tasks.length}\n              rowsPerPage={rowsPerPage}\n              page={page}\n              onPageChange={handleChangePage}\n              onRowsPerPageChange={handleChangeRowsPerPage}\n            />\n          )}\n        </Box>\n      </StyledTableWrapper>\n      {FinishTaskDialog}\n    </StyledTablePageContainer>\n  );\n}\n","import { Button, IconButton } from '@mui/material';\nimport { MACHINE_1, MACHINE_2 } from '../../../../constants/machineNames';\nimport {\n  StyledFlexGrow,\n  StyledTableHeaderInfoWrapper,\n  StyledTableHeaderWrapper,\n} from '../../../../StyledComponents/StyledTableHeader';\nimport {\n  setCreateTaskModalSelectedMachine,\n  setIsCreateTaskModalOpen,\n} from '../../../../redux/actions/mainActions';\n\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\nimport { ROUTE_MACHINES } from '../../../../routes/routes';\nimport React from 'react';\nimport styled from 'styled-components';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\n\nconst StyledTableHeaderName = styled.p`\n  margin: 0 0.5rem;\n  font-size: 1.25rem;\n  width: 6.25rem;\n`;\n\nconst StyledTableHeaderInfo = styled.p`\n  width: 22rem;\n  margin-left: 1.5rem;\n  text-align: center;\n  font-size: 1.75rem;\n`;\n\ninterface IMachineInfoHeaderProps {\n  machineName: typeof MACHINE_1 | typeof MACHINE_2;\n  activeOrders: number;\n  timeToFinish: number;\n}\n\nfunction MachineInfoHeader(props: IMachineInfoHeaderProps) {\n  const { machineName, activeOrders, timeToFinish } = props;\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  function handleNewTaskClick(machine: string) {\n    dispatch(setCreateTaskModalSelectedMachine(machine));\n    dispatch(setIsCreateTaskModalOpen(true));\n  }\n\n  return (\n    <StyledTableHeaderWrapper className='user-data-table-container'>\n      <IconButton\n        onClick={() => history.push(ROUTE_MACHINES)}\n        aria-label='goBack'\n      >\n        <ArrowBackIcon />\n      </IconButton>\n      <StyledTableHeaderInfoWrapper>\n        <StyledTableHeaderName className='user-data-table__info--name'>\n          {machineName === 'maquina1' ? 'Máquina 1' : 'Máquina 2'}\n        </StyledTableHeaderName>\n        <StyledTableHeaderInfo className='user-data-table__info'>\n          Programas activos: {activeOrders}\n        </StyledTableHeaderInfo>\n        <StyledTableHeaderInfo className='user-data-table__info'>\n          Tiempo restante: {timeToFinish} min\n        </StyledTableHeaderInfo>\n      </StyledTableHeaderInfoWrapper>\n      <StyledFlexGrow />\n      <Button\n        variant='contained'\n        color='secondary'\n        onClick={() => {\n          handleNewTaskClick(machineName);\n        }}\n      >\n        Nuevo programa\n      </Button>\n    </StyledTableHeaderWrapper>\n  );\n}\n\nexport default MachineInfoHeader;\n","import { TTaskResponse } from \"../types/taskTypes\";\n\nexport function sortTasksByPriority(tasks: TTaskResponse[] | undefined) {\n  return tasks ? tasks.sort((a, b) => b.priority - a.priority) : undefined;\n}\n","import { MACHINE_1, MACHINE_2 } from \"../../constants/machineNames\";\n\nimport EnhancedTaksTable from \"../../components/MUITable/EnhancedTasksTable/EnhancedTasksTable\";\nimport MachineInfoHeader from \"./components/MachineInfoHeader/MachineInfoHeader\";\nimport { THeadCell } from \"../../components/MUITable/MUITableTypes\";\nimport { TTaskResponse } from \"../../types/taskTypes\";\nimport { calculateTotalTime } from \"../../utils/calculateTotalTime\";\nimport { sortTasksByPriority } from \"../../utils/sortTasksByPriority\";\n\ninterface IMachinePageProps {\n  tasks: TTaskResponse[] | undefined;\n  isLoading: boolean;\n  isError: boolean;\n  machineName: typeof MACHINE_1 | typeof MACHINE_2;\n  handleTaskClick?: (taskId: string) => void;\n  handleDeleteTask: (taskId: string) => void;\n}\n\nfunction MachinePage(props: IMachinePageProps) {\n  const { tasks, isLoading, isError, machineName, handleDeleteTask } = props;\n\n  const headCells: THeadCell[] = [\n    {\n      id: \"material\",\n      label: \"Material\",\n    },\n    {\n      id: \"thickness\",\n      label: \"Espesor\",\n    },\n    {\n      id: \"programNumber\",\n      label: \"Nº Programa\",\n    },\n    {\n      id: \"employerCode\",\n      label: \"Técnico\",\n    },\n    {\n      id: \"duration\",\n      label: \"Tiempo\",\n    },\n    {\n      id: \"actions\",\n      label: \"Acciones\",\n    },\n  ];\n\n  return (\n    <>\n      <MachineInfoHeader\n        machineName={machineName}\n        activeOrders={tasks?.length || 0}\n        timeToFinish={calculateTotalTime(tasks)}\n      />\n      <EnhancedTaksTable\n        headCells={headCells}\n        tasks={sortTasksByPriority(tasks)}\n        isLoading={isLoading}\n        isError={isError}\n        handleDeleteTask={handleDeleteTask}\n      />\n    </>\n  );\n}\n\nexport default MachinePage;\n","import { MACHINE_1, MACHINE_2 } from \"../../constants/machineNames\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport MachinePage from \"./MachinePage\";\nimport { deleteTask } from \"../../redux/actions/mainActions\";\nimport useLoadMachineTasksQuery from \"./queries/useLoadMachineTasksQuery\";\nimport { useParams } from \"react-router-dom\";\n\ninterface IMachinePageContainerParams {\n  machineName: typeof MACHINE_1 | typeof MACHINE_2;\n}\n\nfunction MachinePageContainer() {\n  const dispatch = useDispatch();\n\n  const { forceRender } = useSelector((state: any) => state.mainReducer);\n\n  const { machineName } = useParams<IMachinePageContainerParams>();\n\n  const { isLoading, isError, data } = useLoadMachineTasksQuery(\n    machineName,\n    forceRender\n  );\n\n  function handleTaskClick(taskId: string) {}\n\n  function handleDeleteTask(taskId: string) {\n    if (window.confirm(\"Seguro que deseas eliminar la tarea?\")) {\n      dispatch(deleteTask(taskId));\n    }\n  }\n\n  return (\n    <>\n      <MachinePage\n        machineName={machineName}\n        tasks={data}\n        handleTaskClick={handleTaskClick}\n        handleDeleteTask={handleDeleteTask}\n        isLoading={isLoading}\n        isError={isError}\n      />\n    </>\n  );\n}\n\nexport default MachinePageContainer;\n","import {\n  API_URL,\n  ENDPOINT_MACHINES_BY_NAME,\n  ENDPOINT_TASK_ACTIVE_BY_MACHINE_ID,\n} from \"../../../constants/apiConstants\";\n\nimport axios from \"axios\";\nimport { getMachineByName } from \"../../../mocks/machineRepository\";\n// Mocks\nimport { getTaskByMachineId } from \"../../../mocks/tasksRepository\";\nimport { useQuery } from \"react-query\";\n\nexport default function useLoadMachineTasksQuery(\n  machineName: string,\n  forceRender: number\n) {\n  // el useQuery reb un array amb el nom de la \"action\" i les variables que si canvien torna a executar\n  return useQuery(\n    [\"loadMachineTasks\", machineName, forceRender],\n    async () => {\n      const endpoint = `${API_URL}${ENDPOINT_MACHINES_BY_NAME(machineName)}`;\n      const { data: machine } = await axios.get(endpoint);\n\n      const endpoint2 = `${API_URL}${ENDPOINT_TASK_ACTIVE_BY_MACHINE_ID(\n        machine._id\n      )}`;\n\n      const { data } = await axios.get(endpoint2);\n\n      return data;\n    },\n    {\n      refetchInterval: 60000,\n    }\n  );\n}\n","import styled from \"styled-components\";\n\nexport const StyledMachinesHomePageWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: flex-start;\n`;\n\nexport const StyledMachinesHomePageLoadingWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  padding-top: 1.5rem;\n  font-size: 1.5rem;\n  color: white;\n\n  .MuiCircularProgress-root {\n    margin-right: 1rem;\n  }\n`;\n\nexport const StyledTableWrapper = styled.div`\n  width: 49%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const StyledTableHeaderWrapper = styled.div`\n  padding: 1rem 0;\n  display: flex;\n  justify-content: space-between;\n  width: 100%;\n\n  .flex-grow {\n    flex: 1;\n  }\n\n  .machines-home-page__machine-title {\n    font-size: 1.75rem;\n    color: white;\n  }\n\n  .machines__header-actions {\n    display: flex;\n    justify-content: flex-end;\n  }\n`;\n","import {\n  Box,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TablePagination,\n  TableRow,\n} from '@mui/material';\nimport React, { useState } from 'react';\nimport { StyledTablePageContainer, StyledTableWrapper } from '../SCMuiTable';\n\nimport { ADMIN_NUMBER } from '../../../constants/rolesByNumber';\nimport EnhancedTableHead from '../EnhancedTableHead/EnhancedTableHead';\nimport FinishTaskButton from '../../../pages/MachinePage/components/FinishTaskButton/FinishTaskButton';\nimport { THeadCell } from '../MUITableTypes';\nimport { TInitialState } from '../../../redux/store/initialState';\nimport { TTaskResponse } from '../../../types/taskTypes';\nimport { maxTableHeight } from '../../../styles/styleConstants';\nimport { setTableRowBackgroundColorByPriority } from '../setTableRowBackgroundColorByPriority';\nimport useFinishTaskDialog from '../../../pages/MachinePage/hooks/useFinishTaskDialog';\nimport { useSelector } from 'react-redux';\n\ninterface IEnhancedTableProps {\n  tasks: TTaskResponse[] | undefined;\n\n  headCells: THeadCell[];\n}\n\nexport default function EnhancedTaksTable(props: IEnhancedTableProps) {\n  const { user } = useSelector((state: TInitialState) => state.authReducer);\n  const { tasks, headCells } = props;\n\n  const { FinishTaskDialog, handleFinishTaskDialogOpen } =\n    useFinishTaskDialog();\n\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(25);\n\n  const handleChangePage = (event: unknown, newPage: number) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  return (\n    <StyledTablePageContainer className='EnhancedTaskTable'>\n      <StyledTableWrapper className='EnhancedTaskTable__container'>\n        <Box sx={{ width: '100%' }}>\n          <TableContainer component={Paper} sx={{ maxHeight: maxTableHeight }}>\n            <Table aria-labelledby='tableTitle' size='medium' stickyHeader>\n              <EnhancedTableHead headCells={headCells} />\n              <TableBody>\n                {tasks &&\n                  tasks.map((task, index) => {\n                    return (\n                      <TableRow\n                        key={task._id}\n                        sx={{\n                          '&:last-child td, &:last-child th': { border: 0 },\n                        }}\n                        style={setTableRowBackgroundColorByPriority(\n                          task.priority\n                        )}\n                      >\n                        <TableCell align='center'>\n                          {task.programNumber}\n                        </TableCell>\n                        <TableCell align='center'>\n                          {task.duration} min\n                        </TableCell>\n                        <TableCell align='center'>\n                          {user?.role === ADMIN_NUMBER ? (\n                            <FinishTaskButton\n                              taskId={task._id}\n                              programNumber={task.programNumber}\n                              openFinishedTaskDialog={\n                                handleFinishTaskDialogOpen\n                              }\n                            />\n                          ) : (\n                            task.user.employerCode === user?.employerCode && (\n                              <FinishTaskButton\n                                taskId={task._id}\n                                programNumber={task.programNumber}\n                                openFinishedTaskDialog={\n                                  handleFinishTaskDialogOpen\n                                }\n                              />\n                            )\n                          )}\n                        </TableCell>\n                      </TableRow>\n                    );\n                  })}\n              </TableBody>\n            </Table>\n          </TableContainer>\n          {tasks && (\n            <TablePagination\n              rowsPerPageOptions={[25, 50, 75, 100]}\n              component='div'\n              count={tasks.length}\n              rowsPerPage={rowsPerPage}\n              page={page}\n              onPageChange={handleChangePage}\n              onRowsPerPageChange={handleChangeRowsPerPage}\n            />\n          )}\n        </Box>\n      </StyledTableWrapper>\n      {FinishTaskDialog}\n    </StyledTablePageContainer>\n  );\n}\n","import { Button, CircularProgress } from \"@mui/material\";\nimport { MACHINE_1, MACHINE_2 } from \"../../constants/machineNames\";\nimport {\n  StyledMachinesHomePageLoadingWrapper,\n  StyledMachinesHomePageWrapper,\n  StyledTableHeaderWrapper,\n  StyledTableWrapper,\n} from \"./SCMachinesHomePage\";\nimport {\n  setCreateTaskModalSelectedMachine,\n  setIsCreateTaskModalOpen,\n} from \"../../redux/actions/mainActions\";\n\nimport LiteTasksTable from \"../../components/MUITable/LiteTasksTable/LiteTasksTable\";\nimport { THeadCell } from \"../../components/MUITable/MUITableTypes\";\nimport { TMachinesHomeTasks } from \"./MachinesHomePageTypes\";\nimport { sortTasksByPriority } from \"../../utils/sortTasksByPriority\";\nimport { useDispatch } from \"react-redux\";\n\ninterface IMachinePageProps {\n  tasks: TMachinesHomeTasks | undefined;\n  isLoading: boolean;\n  isError: boolean;\n  handleTaskClick?: (taskId: string) => void;\n}\n\nfunction MachinesHomePage(props: IMachinePageProps) {\n  const { tasks, isLoading } = props;\n\n  const dispatch = useDispatch();\n\n  const headCells: THeadCell[] = [\n    {\n      id: \"programNumber\",\n      label: \"Nº Programa\",\n    },\n    {\n      id: \"duration\",\n      label: \"Tiempo\",\n    },\n    {\n      id: \"actions\",\n      label: \"Acciones\",\n    },\n  ];\n\n  function handleNewTaskClick(machine: string) {\n    dispatch(setCreateTaskModalSelectedMachine(machine));\n    dispatch(setIsCreateTaskModalOpen(true));\n  }\n\n  return (\n    <>\n      {isLoading && (\n        <StyledMachinesHomePageLoadingWrapper>\n          <CircularProgress />\n          Cargando Datos...\n        </StyledMachinesHomePageLoadingWrapper>\n      )}\n      {tasks && (\n        <StyledMachinesHomePageWrapper>\n          <StyledTableWrapper>\n            <StyledTableHeaderWrapper>\n              <div className=\"flex-grow\" />\n              <h3 className=\"machines-home-page__machine-title\">Máquina 1</h3>\n              <div className=\"flex-grow machines__header-actions\">\n                <Button\n                  variant=\"contained\"\n                  color=\"secondary\"\n                  onClick={() => {\n                    handleNewTaskClick(MACHINE_1);\n                  }}\n                >\n                  Nuevo programa\n                </Button>\n              </div>\n            </StyledTableHeaderWrapper>\n            <LiteTasksTable\n              tasks={sortTasksByPriority(tasks.machine1)}\n              headCells={headCells}\n            />\n          </StyledTableWrapper>\n          <StyledTableWrapper>\n            <StyledTableHeaderWrapper>\n              <div className=\"flex-grow\" />\n              <h3 className=\"machines-home-page__machine-title\">Máquina 2</h3>\n              <div className=\"flex-grow machines__header-actions\">\n                <Button\n                  variant=\"contained\"\n                  color=\"secondary\"\n                  onClick={() => {\n                    handleNewTaskClick(MACHINE_2);\n                  }}\n                >\n                  Nuevo programa\n                </Button>\n              </div>\n            </StyledTableHeaderWrapper>\n            <LiteTasksTable\n              tasks={sortTasksByPriority(tasks.machine2)}\n              headCells={headCells}\n            />\n          </StyledTableWrapper>\n        </StyledMachinesHomePageWrapper>\n      )}\n    </>\n  );\n}\n\nexport default MachinesHomePage;\n","import MachinesHomePage from \"./MachinesHomePage\";\nimport useMachinesHomeQuery from \"./queries/useMachinesHomeQuery\";\nimport { useSelector } from \"react-redux\";\n\nfunction MachinesHomePageContainer() {\n  const { forceRender } = useSelector((state: any) => state.mainReducer);\n\n  const { isLoading, isError, data } = useMachinesHomeQuery(forceRender);\n\n  function handleTaskClick(taskId: string) {}\n\n  return (\n    <>\n      <MachinesHomePage\n        tasks={data}\n        handleTaskClick={handleTaskClick}\n        isLoading={isLoading}\n        isError={isError}\n      />\n    </>\n  );\n}\n\nexport default MachinesHomePageContainer;\n","import {\n  API_URL,\n  ENDPOINT_TASKS_BY_STATUS,\n} from \"../../../constants/apiConstants\";\nimport { MACHINE_1, MACHINE_2 } from \"../../../constants/machineNames\";\n\nimport { ACTIVE_TASK } from \"../../../constants/taskStatus\";\nimport { TTaskResponse } from \"../../../types/taskTypes\";\nimport axios from \"axios\";\nimport { useQuery } from \"react-query\";\n\nexport default function useLoadMachineTasksQuery(forceRender: number) {\n  // el useQuery reb un array amb el nom de la \"action\" i les variables que si canvien torna a executar\n  return useQuery(\n    [\"loadMachinesHomeTasks\", forceRender],\n    async () => {\n      const endpoint = `${API_URL}${ENDPOINT_TASKS_BY_STATUS(ACTIVE_TASK)}`;\n      const { data: activeTasks } = await axios.get(endpoint);\n\n      const machine1Tasks = activeTasks.filter(\n        (task: TTaskResponse) => task.machine.name === MACHINE_1\n      );\n\n      const machine2Tasks = activeTasks.filter(\n        (task: TTaskResponse) => task.machine.name === MACHINE_2\n      );\n\n      return {\n        machine1: machine1Tasks,\n        machine2: machine2Tasks,\n      };\n    },\n    {\n      refetchInterval: 60000,\n    }\n  );\n}\n","import { useSelector } from \"react-redux\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { TInitialState } from \"../../redux/store/initialState\";\n\ninterface IProtectedRouteProps {\n  path: string;\n  component: any;\n  exact?: boolean;\n}\n\nfunction ProtectedRoute(props: IProtectedRouteProps) {\n  const { path, component: Compo, exact, ...rest } = props;\n  const user = useSelector((state: TInitialState) => state.authReducer.user);\n\n  return (\n    <Route\n      path={path}\n      exact={exact}\n      {...rest}\n      render={(props) => (user ? <Compo {...props} /> : <Redirect to=\"/\" />)}\n    />\n  );\n}\n\nexport default ProtectedRoute;\n","import { useSelector } from \"react-redux\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { TInitialState } from \"../../redux/store/initialState\";\nimport { ROUTE_LOGIN, ROUTE_MACHINES } from \"../../routes/routes\";\n\ninterface ISuperProtectedRouteProps {\n  path: string;\n  component: any;\n  exact?: boolean;\n}\n\nfunction SuperProtectedRoute(props: ISuperProtectedRouteProps) {\n  const { path, component: Compo, exact, ...rest } = props;\n  const user = useSelector((state: TInitialState) => state.authReducer.user);\n\n  return (\n    <Route\n      path={path}\n      exact={exact}\n      {...rest}\n      render={(props) =>\n        user ? (\n          user.role === 0 ? (\n            <Compo {...props} />\n          ) : (\n            <Redirect to={ROUTE_MACHINES} />\n          )\n        ) : (\n          <Redirect to={ROUTE_LOGIN} />\n        )\n      }\n    />\n  );\n}\n\nexport default SuperProtectedRoute;\n","import { combineReducers } from \"redux\";\nimport mainReducer from \"./mainReducer\";\nimport authReducer from \"./authReducer\";\n\nexport default combineReducers({\n  authReducer,\n  mainReducer,\n});\n","import {\n  LOGIN_ERROR,\n  LOGIN_LOADING,\n  LOGIN_SUCCESS,\n  LOGOUT,\n} from \"../actions/actionTypes\";\n\nimport { TAuthActions } from \"../actions/authActions\";\n\nexport default function authReducer(state: any = {}, action: TAuthActions) {\n  let newState = {};\n  switch (action.type) {\n    case LOGIN_LOADING:\n      newState = { ...state, loginLoading: true };\n      break;\n    case LOGIN_ERROR:\n      newState = {\n        ...state,\n        loginLoading: false,\n        loginError: action.payload.errorMessage,\n      };\n      break;\n    case LOGIN_SUCCESS:\n      newState = {\n        ...state,\n        loginLoading: false,\n        loginError: null,\n        user: action.payload.user,\n      };\n      break;\n\n    case LOGOUT:\n      newState = {\n        ...state,\n        user: null,\n      };\n      break;\n\n    default:\n      newState = state;\n      break;\n  }\n  return newState;\n}\n","import {\n  FORCE_RENDER,\n  LOAD_SETTINGS,\n  SET_CREATE_TASK_MODAL_ISOPEN,\n  SET_CREATE_TASK_MODAL_SELECTED_MACHINE,\n} from \"../actions/actionTypes\";\n\nimport { TAction } from \"../../types/storeActionType\";\n\nexport default function mainReducer(state: any = {}, action: TAction) {\n  let newState = {};\n  switch (action.type) {\n    case FORCE_RENDER:\n      newState = { ...state, forceRender: ++state.forceRender };\n      break;\n\n    // Create task modal\n    case SET_CREATE_TASK_MODAL_ISOPEN: {\n      newState = {\n        ...state,\n        createTaskModal: { ...state.createTaskModal, isOpen: action.payload },\n      };\n      break;\n    }\n\n    case SET_CREATE_TASK_MODAL_SELECTED_MACHINE: {\n      newState = {\n        ...state,\n        createTaskModal: {\n          ...state.createTaskModal,\n          selectedMachine: action.payload,\n        },\n      };\n      break;\n    }\n\n    case LOAD_SETTINGS: {\n      newState = {\n        ...state,\n        settings: action.payload,\n      };\n      break;\n    }\n\n    default:\n      newState = state;\n      break;\n  }\n\n  return newState;\n}\n","import { applyMiddleware, compose, createStore } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"../reducers\";\nimport { TInitialState } from \"./initialState\";\n\nexport default function configureStore(initialState: TInitialState) {\n  const composeEnhancers =\n    (window && (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n\n  return createStore(\n    rootReducer,\n    initialState,\n    composeEnhancers(applyMiddleware(thunk))\n  );\n}\n","import { TSettingsResponse } from \"../../types/settingsTypes\";\nimport { TUserResponse } from \"../../types/employeeTypes\";\n\nexport type TMainReducer = {\n  forceRender: number;\n  createTaskModal: {\n    isOpen: boolean;\n    selectedMachine: string;\n  };\n  settings: TSettingsResponse | null;\n};\n\nexport type TAuthReducer = {\n  user: TUserResponse | null;\n  loginLoading?: boolean;\n  loginError?: string;\n};\n\nexport type TInitialState = {\n  mainReducer: TMainReducer;\n  authReducer: TAuthReducer;\n};\n\nexport const initialState: TInitialState = {\n  mainReducer: {\n    forceRender: 0,\n    createTaskModal: {\n      isOpen: false,\n      selectedMachine: \"máquina1\",\n    },\n    settings: null,\n  },\n  authReducer: {\n    user: JSON.parse(localStorage.getItem(\"user\") as string) || null,\n  },\n};\n","import { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\nimport {\n  ROUTE_ADMIN_PROFILE,\n  ROUTE_EMPLOYEES,\n  ROUTE_EMPLOYEES_ID,\n  ROUTE_FINISHEDTASKS,\n  ROUTE_LOGIN,\n  ROUTE_MACHINES,\n  ROUTE_MACHINES_NAME,\n} from \"./routes/routes\";\n\nimport AdminProfilePageContainer from \"./pages/AdminProfilePage/AdminProfilePageContainer\";\nimport AppInit from \"./components/AppInit/AppInit\";\nimport CreateTaskDialog from \"./components/CreateTaskDialog/CreateTaskDialogContainer\";\nimport EmployeePageContainer from \"./pages/EmployeePage/EmployeePageContainer\";\n// pages\nimport EmployeesListPageContainer from \"./pages/EmployeesListPage/EmployeesListPageContainer\";\nimport FinishedTasksPageContainer from \"./pages/FinishedTasksPage/FinishedTasksPageContainer\";\n// components\nimport Layout from \"./components/Layout/Layout\";\nimport LoginPage from \"./pages/LoginPage/LoginPage\";\nimport MachinePageContainer from \"./pages/MachinePage/MachinePageContainer\";\nimport MachinesHomePageContainer from \"./pages/MachinesHomePage/MachinesHomePageContainer\";\nimport ProtectedRoute from \"./components/ProtectedRoute/ProtectedRoute\";\nimport { Provider } from \"react-redux\";\nimport SuperProtectedRoute from \"./components/SuperProtectedRoute/SuperProtectedRoute\";\nimport { Toaster } from \"react-hot-toast\";\nimport configureStore from \"./redux/store/configureStore\";\nimport { initialState } from \"./redux/store/initialState\";\n\nconst queryClient = new QueryClient();\n\nfunction App() {\n  return (\n    <>\n      <Provider store={configureStore(initialState)}>\n        <QueryClientProvider client={queryClient}>\n          <AppInit />\n          <BrowserRouter basename=\"/corobcat\">\n            <Switch>\n              <Route path={ROUTE_LOGIN} exact>\n                <LoginPage />\n              </Route>\n              <Layout>\n                <ProtectedRoute\n                  path={ROUTE_EMPLOYEES}\n                  exact\n                  component={EmployeesListPageContainer}\n                />\n                <ProtectedRoute\n                  path={ROUTE_EMPLOYEES_ID}\n                  component={EmployeePageContainer}\n                />\n                <ProtectedRoute\n                  path={ROUTE_FINISHEDTASKS}\n                  component={FinishedTasksPageContainer}\n                />\n                <ProtectedRoute\n                  path={ROUTE_MACHINES}\n                  exact\n                  component={MachinesHomePageContainer}\n                />\n                <ProtectedRoute\n                  path={ROUTE_MACHINES_NAME}\n                  component={MachinePageContainer}\n                />\n                <SuperProtectedRoute\n                  path={ROUTE_ADMIN_PROFILE}\n                  component={AdminProfilePageContainer}\n                />\n              </Layout>\n            </Switch>\n          </BrowserRouter>\n\n          <CreateTaskDialog />\n        </QueryClientProvider>\n        <Toaster\n          toastOptions={{\n            duration: 3000,\n          }}\n        />\n      </Provider>\n    </>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\nreportWebVitals();\n"],"sourceRoot":""}