{"version":3,"sources":["routes/routes.ts","components/FormikComponents/FormikTextField.tsx","pages/AdminProfilePage/components/EmployeesTab/CreateEmployeeForm.tsx","pages/AdminProfilePage/components/DeletableItemCard.tsx","pages/AdminProfilePage/components/EmployeesTab/EmployeesTab.tsx","constants/machineNames.ts","redux/actions/actionTypes.ts","redux/actions/mainActions.ts","pages/AdminProfilePage/components/GeneralSettingsTab/EditCorrectionalFactorForm.tsx","constants/apiConstants.ts","pages/AdminProfilePage/components/GeneralSettingsTab/GeneralSettingsTab.tsx","styles/styleConstants.ts","StyledComponents/StyledTableHeader.ts","pages/AdminProfilePage/components/TabPanel.tsx","pages/AdminProfilePage/AdminProfilePage.tsx","components/StandardLoading/StandardLoading.tsx","pages/AdminProfilePage/AdminProfilePageContainer.tsx","pages/AdminProfilePage/queries/useAdminProfilePageQuery.ts","utils/getColorByPriority.ts","components/CreateTaskDialog/components/PriorityBadge/PriorityBadge.tsx","components/FormikComponents/FormikSelect.tsx","components/CreateTaskDialog/CreateTaskDialog.tsx","components/CreateTaskDialog/CreateTaskDialogContainer.tsx","utils/populateTasks.ts","mocks/tasksRepository.ts","mocks/userRepository.ts","utils/formatDate.ts","components/TaskStatus/TaskStatus.tsx","components/MUITable/EnhancedTableHead/EnhancedTableHead.tsx","components/MUITable/SCMuiTable.ts","components/MUITable/setTableRowBackgroundColorByPriority.ts","components/MUITable/EnhancedEmployeeTable/EnhancedEmployeeTable.tsx","utils/calculateTotalTime.ts","utils/calculateMachineGeneralValues.ts","components/TableHeaderInfoCard/TableHeaderInfoCard.tsx","components/UserInfoHeader/UserInfoHeader.tsx","pages/EmployeePage/EmployeePage.tsx","pages/EmployeePage/EmployeePageContainer.tsx","pages/EmployeePage/queries/useLoadEmployeeTasksQuery.ts","pages/EmployeesListPage/EmployeeCard/EmployeeCard.tsx","pages/EmployeesListPage/components/EmployeesListPage/EmployeesListPage.tsx","pages/EmployeesListPage/EmployeesListPageContainer.tsx","pages/EmployeesListPage/queries/useLoadEmployeesQuery.ts","components/MUITable/EnhancedFinishedTasksTable/EnhancedFinishedTasksTable.tsx","pages/FinishedTasksPage/components/FinishedTasksInfoHeader.tsx","pages/FinishedTasksPage/FinishedTasksPage.tsx","pages/FinishedTasksPage/FinishedTasksPageContainer.tsx","pages/FinishedTasksPage/queries/useLoadFinishedTasksQuery.ts","constants/errorMessages.ts","redux/actions/authActions.ts","components/LeftMenu/LeftMenu.tsx","components/Layout/Layout.tsx","pages/LoginPage/LoginPage.tsx","pages/MachinePage/components/FinishTaskButton/FinishTaskButton.tsx","pages/MachinePage/hooks/useFinishTaskDialog.tsx","components/MUITable/EnhancedTasksTable/EnhancedTasksTable.tsx","utils/sortTasksByPriority.ts","pages/MachinePage/components/MachineInfoHeader/MachineInfoHeader.tsx","pages/MachinePage/MachinePage.tsx","mocks/machineRepository.ts","pages/MachinePage/MachinePageContainer.tsx","pages/MachinePage/queries/useLoadMachineTasksQuery.ts","components/MUITable/LiteTasksTable/LiteTasksTable.tsx","pages/MachinesHomePage/SCMachinesHomePage.ts","pages/MachinesHomePage/MachinesHomePage.tsx","pages/MachinesHomePage/MachinesHomePageContainer.tsx","pages/MachinesHomePage/queries/useMachinesHomeQuery.ts","components/ProtectedRoute/ProtectedRoute.tsx","components/SuperProtectedRoute/SuperProtectedRoute.tsx","redux/reducers/index.ts","redux/reducers/authReducer.ts","redux/reducers/mainReducer.ts","redux/store/configureStore.ts","redux/store/initialState.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["ROUTE_MACHINES","ROUTE_MACHINES_NAME_FACTORY","machineName","ROUTE_EMPLOYEES","ROUTE_FINISHEDTASKS","ROUTE_ADMIN_PROFILE","StyledFormikTextFieldWrapper","styled","div","FormikTextField","props","formikContext","useFormikContext","name","label","placeholder","variant","size","type","margin","autofocus","fullWidth","adornment","disabled","min","max","TextField","onChange","target","setFieldValue","value","values","autoFocus","helperText","touched","errors","error","InputProps","inputProps","endAdornment","InputAdornment","position","StyledNewEmployeeFormContainer","StyledFlex100Height","StyledText","Typography","StyledButton","Button","StyledMargin","CreateEmployeeForm","sx","width","height","fontSize","StyledDeletableItemCardContainer","li","DeletableItemCard","handleDelete","itemName","cursor","color","StyledTabContainer","motion","attrs","initial","opacity","animate","StyledTabTitle","StyledEmployeesContainer","StyledEmployeeCardContainer","initialFormValues","surname","employerCode","validationSchema","Yup","required","handleSubmit","console","log","EmployeesTab","employees","className","initialValues","onSubmit","noValidate","map","employee","_id","MACHINE_1","MACHINE_2","FORCE_RENDER","LOGIN_LOADING","LOGIN_SUCCESS","LOGIN_ERROR","LOGOUT","SET_CREATE_TASK_MODAL_ISOPEN","SET_CREATE_TASK_MODAL_SELECTED_MACHINE","forceRender","setIsCreateTaskModalOpen","isOpen","payload","setCreateTaskModalSelectedMachine","machine","StyledNewItemWrapper","StyledButtonWrapper","EditCorrectionalFactorFrom","dispatch","useDispatch","handleMachineClick","machineFormFieldName","setFieldTouched","Number","a","toUpdateMachine","axios","patch","toast","success","message","updateCorrectionalFactor","disableElevation","onClick","StyledGroupWrapper","StyledListWrapper","ul","correctionalFactorMachine1","integer","correctionalFactorMachine2","GeneralSettingsTab","settings","newMaterialRef","useRef","newThicknessRef","correctionalFactorInitialValues","handleDeleteMaterial","handleDeleteThickness","marginRight","ref","materials","material","thicknesses","maxTableHeight","StyledTableHeaderWrapper","StyledTableHeaderInfoWrapper","StyledFlexGrow","TabPanel","children","index","role","hidden","id","style","Box","p","flex","StyledAdminProfileHeader","AdminProfilePage","useState","setValue","a11yProps","bgcolor","boxSizing","AppBar","Tabs","event","newValue","indicatorColor","textColor","Tab","AnimatePresence","userData","StyledLoadingWrapper","StyledLoadingText","StandardLoading","text","CircularProgress","AdminProfilePageContainer","useQuery","useAdminProfilePageQuery","useSelector","state","mainReducer","isLoading","data","isError","getColorByPriority","priority","bgColor","StyledPriorityBadgeWrapper","StyledPriorityBadge","StyledPriorityText","span","formatTextByPriority","PriorityBadge","background","StyledFormikSelectWrapper","FormikSelect","selectValues","item","toLowerCase","FormControl","InputLabel","Select","labelId","defaultValue","MenuItem","FormHelperText","StyledCreateTaskDialogWrapper","Dialog","StyledFlexCenteredWrapper","materialsMock","machinesMock","CreateTaskDialog","handleClose","selectedMachine","createTaskModal","useEffect","resetForm","open","onClose","DialogTitle","textAlign","DialogContent","Grid","container","spacing","xs","DialogActions","CreateTaksDialogContainer","thickness","programNumber","duration","correctionalFactor","populateTasks","tasks","task","user","users","find","machines","jsonTasks","getTaskByMachineId","machineId","filter","status","getTaskByUserId","userId","getUserById","getUserByCode","userCode","formatDate","date","dayjs","format","StyledTaskStatusContainer","StyledTaskText","statusText","statusTextColor","iconColor","statusBgColor","TaskStatus","EnhancedTasksTableHead","headCells","TableHead","TableRow","headCell","TableCell","align","padding","StyledTablePageContainer","StyledTableWrapper","setTableRowBackgroundColorByPriority","backgroundColor","EnhnacedEmployeeTasksTable","React","page","setPage","rowsPerPage","setRowsPerPage","TableContainer","component","Paper","maxHeight","Table","minWidth","stickyHeader","TableBody","colSpan","border","scope","taskNumber","end","start","TablePagination","rowsPerPageOptions","count","length","onPageChange","newPage","onRowsPerPageChange","parseInt","calculateTotalTime","reduce","accumulator","current","calculateMachineGeneralValues","machine1Tasks","machine2Tasks","machine1TimeToFinish","machine2TimeToFinish","machine1","activeTasks","timeToFinish","machine2","StyledTableHeaderInfoCardContainer","StyledInfoCardSeparator","StyledImportantCell","StyledValue","StyledTotalValue","TableHeaderInfoCard","totalTasks","totalTimeToFinish","alignItems","StyledInfoWrapper","UserInfoHeader","tasksData","history","useHistory","IconButton","goBack","EmployeePage","EmployeePageContainer","employeeId","employeeTasks","refetchInterval","useLoadEmployeeTasksQuery","useParams","EmployeeCard","Card","CardContent","gutterBottom","CardActions","to","StyledEmployeePageContainer","EmployeesListPage","EmployeesListPageContainer","EnhancedFinishedTasksTable","StyledTableHeaderName","FinishedTasksInfoHeader","push","FinishedTasksPage","FinishedTasksPageContainer","ERROR_MESSAGE_INVALID_CREDENTIALS","loginError","errorMessage","LeftMenu","Avatar","List","ListItem","disableGutters","activeClassName","ListItemButton","ListItemIcon","ListItemText","primary","disablePadding","pl","localStorage","removeItem","replace","Layout","LoginPage","authReducer","loginLoading","valueRef","warningMessage","setWarningMessage","handleLogInClick","setItem","JSON","stringify","response","elevation","inputRef","onKeyUp","key","FinishTaskButton","taskId","openFinishedTaskDialog","initialState","isAcceptButtonActive","useFinishTaskDialog","isFinishTaskDialogOpen","setIsFinishTaskDialogOpen","finishTaskDialogState","setFinishTaskDialogState","handleFinishTaskDialogClose","FinishTaskDialog","DialogContentText","marginTop","hasValue","prevState","taskIndex","findIndex","saveFinishedTask","handleFinishTaskDialogOpen","EnhancedTaksTable","sortTasksByPriority","sort","b","undefined","StyledTableHeaderInfo","MachineInfoHeader","activeOrders","MachinePage","getMachineByName","MachinePageContainer","useLoadMachineTasksQuery","handleTaskClick","StyledMachinesHomePageWrapper","StyledMachinesHomePageLoadingWrapper","MachinesHomePage","handleNewTaskClick","MachinesHomePageContainer","useMachinesHomeQuery","ProtectedRoute","path","Compo","exact","rest","render","SuperProtectedRoute","combineReducers","action","newState","configureStore","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","rootReducer","applyMiddleware","thunk","parse","getItem","queryClient","QueryClient","App","store","client","basename","toastOptions","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.901c333e.chunk.js","sourcesContent":["export const ROUTE_LOGIN = \"/\";\n\nexport const ROUTE_MACHINES = \"/machines\";\nexport const ROUTE_MACHINES_NAME = \"/machines/:machineName\";\n\nexport const ROUTE_MACHINES_NAME_FACTORY = (machineName: string) =>\n  `/machines/${machineName}`;\n\nexport const ROUTE_EMPLOYEES = \"/employees\";\nexport const ROUTE_EMPLOYEES_ID = \"/employees/:employeeId\";\nexport const ROUTE_EMPLOYEES_ID_FACTORY = (employeeId: string) =>\n  `/employees/${employeeId}`;\n\nexport const ROUTE_FINISHEDTASKS = \"/finishedTasks\";\n\nexport const ROUTE_ADMIN_PROFILE = \"/admin\";\n","import { InputAdornment, TextField } from \"@mui/material\";\n\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { useFormikContext } from \"formik\";\n\nconst StyledFormikTextFieldWrapper = styled.div`\n  width: 100%;\n  input {\n    padding: 0.75rem 0.5rem;\n  }\n`;\n\ninterface IFormikTextFieldProps {\n  name: string;\n  type?: string;\n  label?: string;\n  placeholder?: string;\n  variant?: \"outlined\" | \"filled\" | \"standard\";\n  size?: \"medium\" | \"small\";\n  margin?: \"normal\" | \"dense\";\n  autofocus?: boolean;\n  fullWidth?: boolean;\n  adornment?: string;\n  disabled?: boolean;\n  min?: number;\n  max?: number;\n}\n\nfunction FormikTextField(props: IFormikTextFieldProps) {\n  const formikContext = useFormikContext<any>();\n\n  const {\n    name,\n    label,\n    placeholder,\n    variant = \"outlined\",\n    size = \"medium\",\n    type = \"text\",\n    margin = \"dense\",\n    autofocus = false,\n    fullWidth = false,\n    adornment = null,\n    disabled = false,\n    min,\n    max,\n  } = props;\n\n  function handleChange({ target }: React.ChangeEvent<HTMLInputElement>) {\n    formikContext.setFieldValue(name, target.value);\n  }\n\n  return (\n    <StyledFormikTextFieldWrapper>\n      <TextField\n        variant={variant}\n        name={name}\n        label={label}\n        type={type}\n        placeholder={placeholder}\n        size={size}\n        onChange={handleChange}\n        value={formikContext.values[name]}\n        autoFocus={autofocus}\n        fullWidth={fullWidth}\n        margin={margin}\n        helperText={\n          formikContext.touched[name] &&\n          formikContext.errors[name] &&\n          formikContext.errors[name]\n        }\n        error={\n          formikContext.touched[name] && formikContext.errors[name]\n            ? true\n            : false\n        }\n        disabled={disabled}\n        InputProps={{\n          inputProps: {\n            min,\n            max,\n          },\n          endAdornment: adornment && (\n            <InputAdornment position=\"end\">{adornment}</InputAdornment>\n          ),\n        }}\n      />\n    </StyledFormikTextFieldWrapper>\n  );\n}\n\nexport default FormikTextField;\n","import { Button, Typography } from \"@mui/material\";\nimport { FC } from \"react\";\nimport styled from \"styled-components\";\nimport FormikTextField from \"../../../../components/FormikComponents/FormikTextField\";\nimport AddIcon from \"@mui/icons-material/Add\";\n\nconst StyledNewEmployeeFormContainer = styled.div`\n  display: flex;\n  align-items: flex-start;\n  height: 60px;\n  margin-bottom: 1rem;\n`;\n\nconst StyledFlex100Height = styled.div`\n  display: flex;\n  height: 100%;\n  align-items: center;\n`;\n\nconst StyledText = styled(Typography)`\n  font-weight: 600;\n  margin-right: 1rem;\n`;\n\nconst StyledButton = styled(Button)`\n  min-width: unset;\n  border-radius: 50%;\n  width: 2rem;\n  height: 2rem;\n`;\n\nconst StyledMargin = styled.div`\n  margin-right: 1rem;\n`;\n\ninterface ICreateEmployeeFormProps {}\n\nconst CreateEmployeeForm: FC<ICreateEmployeeFormProps> = ({}) => {\n  return (\n    <StyledNewEmployeeFormContainer>\n      <StyledFlex100Height>\n        <StyledText>Crear Empleado: </StyledText>\n      </StyledFlex100Height>\n      <FormikTextField\n        name=\"name\"\n        size=\"small\"\n        label=\"Nombre\"\n        placeholder=\"Nombre\"\n      />\n      <StyledMargin />\n      <FormikTextField\n        name=\"surname\"\n        size=\"small\"\n        label=\"Apellidos\"\n        placeholder=\"Apellidos\"\n      />\n      <StyledMargin />\n      <FormikTextField\n        name=\"employerCode\"\n        size=\"small\"\n        label=\"Cód. Emp.\"\n        placeholder=\"Código empleado\"\n      />\n      <StyledMargin />\n\n      <StyledFlex100Height>\n        <StyledButton\n          variant=\"contained\"\n          size=\"small\"\n          sx={{ width: \"2rem\", height: \"2rem\" }}\n          type=\"submit\"\n        >\n          <AddIcon fontSize=\"small\" />\n        </StyledButton>\n      </StyledFlex100Height>\n    </StyledNewEmployeeFormContainer>\n  );\n};\n\nexport default CreateEmployeeForm;\n","import { FC } from \"react\";\nimport styled from \"styled-components\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport { Typography } from \"@mui/material\";\n\nconst StyledDeletableItemCardContainer = styled.li`\n  width: 100%;\n  padding: 0.25rem 1rem;\n  display: flex;\n  justify-content: space-between;\n  background: #f5f5f5;\n  border-radius: 0.5rem;\n  margin-bottom: 0.5rem;\n  align-items: center;\n`;\n\nconst StyledText = styled(Typography)`\n  flex: 1;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  overflow: hidden;\n`;\n\ninterface IDeletableItemCardProps {\n  handleDelete: Function;\n  itemName: string;\n}\n\nconst DeletableItemCard: FC<IDeletableItemCardProps> = ({\n  handleDelete,\n  itemName,\n}) => {\n  return (\n    <StyledDeletableItemCardContainer>\n      <StyledText>{itemName}</StyledText>\n      <DeleteIcon\n        sx={{\n          cursor: \"pointer\",\n          \":hover\": { color: \"#1876D1\" },\n        }}\n      />\n    </StyledDeletableItemCardContainer>\n  );\n};\n\nexport default DeletableItemCard;\n","import * as Yup from \"yup\";\n\nimport { Form, Formik } from \"formik\";\n\nimport CreateEmployeeForm from \"./CreateEmployeeForm\";\nimport DeletableItemCard from \"../DeletableItemCard\";\nimport { FC } from \"react\";\nimport { TUserResponse } from \"../../../../types/employeeTypes\";\nimport { Typography } from \"@mui/material\";\nimport { motion } from \"framer-motion\";\nimport styled from \"styled-components\";\n\nconst StyledTabContainer = styled(motion.div).attrs(() => ({\n  initial: { opacity: 0 },\n  animate: { opacity: 1 },\n}))`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst StyledTabTitle = styled(Typography)`\n  font-size: 1.15rem;\n  font-weight: 600;\n  margin-bottom: 0.75rem;\n  text-decoration: underline;\n`;\n\nconst StyledEmployeesContainer = styled.div`\n  display: flex;\n  width: 100%;\n  flex-wrap: wrap;\n  height: 100%;\n  overflow-y: auto;\n  align-content: flex-start;\n`;\n\nconst StyledEmployeeCardContainer = styled.div`\n  margin-right: 1rem;\n  width: 20rem;\n`;\n\nconst initialFormValues = {\n  name: \"\",\n  surname: \"\",\n  employerCode: \"\",\n};\n\nconst validationSchema = Yup.object({\n  name: Yup.string().required(\"Nombre obligatorio\"),\n  surname: Yup.string(),\n  employerCode: Yup.string().required(\"Cod. Emp. obligatorio\"),\n});\n\nfunction handleSubmit(values: any) {\n  console.log(values);\n  // TODO: Crear employer, fer forceRender\n}\n\ninterface IEmployeesTabprops {\n  employees: TUserResponse[];\n}\n\nconst EmployeesTab: FC<IEmployeesTabprops> = ({ employees }) => {\n  return (\n    <StyledTabContainer className=\"tabContainer\">\n      <StyledTabTitle>Gestión de empleados</StyledTabTitle>\n      <>\n        <Formik\n          initialValues={initialFormValues}\n          onSubmit={handleSubmit}\n          validationSchema={validationSchema}\n        >\n          <Form noValidate>\n            <CreateEmployeeForm />\n          </Form>\n        </Formik>\n      </>\n      <StyledEmployeesContainer>\n        {employees.map((employee) => (\n          <StyledEmployeeCardContainer className=\"employeesList\">\n            <DeletableItemCard\n              itemName={`(${employee.employerCode}): ${employee.name} `}\n              handleDelete={() => {}}\n              key={employee._id}\n            />\n          </StyledEmployeeCardContainer>\n        ))}\n      </StyledEmployeesContainer>\n    </StyledTabContainer>\n  );\n};\n\nexport default EmployeesTab;\n","export const MACHINE_1 = \"máquina1\";\nexport const MACHINE_2 = \"máquina2\";\n","export const FORCE_RENDER = \"FORCE_RENDER\";\n// LOGIN\nexport const LOGIN_LOADING = \"LOGIN_LOADING\";\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const LOGIN_ERROR = \"LOGIN_ERROR\";\nexport const LOGOUT = \"LOGOUT\";\n\n// Create task modal\nexport const SET_CREATE_TASK_MODAL_ISOPEN = \"SET_CREATE_TASK_MODAL_ISOPEN\";\nexport const SET_CREATE_TASK_MODAL_SELECTED_MACHINE =\n  \"SET_CREATE_TASK_MODAL_SELECTED_MACHINE\";\n","import {\n  FORCE_RENDER,\n  SET_CREATE_TASK_MODAL_ISOPEN,\n  SET_CREATE_TASK_MODAL_SELECTED_MACHINE,\n} from \"./actionTypes\";\n\nimport { AutoFixOffSharp } from \"@mui/icons-material\";\nimport { ENDPOINT_SETTINGS } from \"../../constants/apiConstants\";\nimport { MACHINE_1 } from \"../../constants/machineNames\";\nimport axios from \"axios\";\nimport toast from \"react-hot-toast\";\n\nexport function forceRender() {\n  return {\n    type: FORCE_RENDER,\n  };\n}\n\nexport function setIsCreateTaskModalOpen(isOpen: boolean) {\n  return {\n    type: SET_CREATE_TASK_MODAL_ISOPEN,\n    payload: isOpen,\n  };\n}\n\nexport function setCreateTaskModalSelectedMachine(machine: string) {\n  console.log(\"changing to machine\", machine);\n\n  return {\n    type: SET_CREATE_TASK_MODAL_SELECTED_MACHINE,\n    payload: machine,\n  };\n}\n\nexport function updateCorrectionalFactor(machineName: string, value: number) {\n  return async (dispatch: any) => {\n    console.log(\"updateing corr factor..\");\n\n    try {\n      const toUpdateMachine =\n        machineName === MACHINE_1\n          ? \"correctionalFactorMachine1\"\n          : \"correctionalFactorMachine2\";\n\n      const query = {\n        [toUpdateMachine]: value,\n      };\n\n      const updatedSettings = await axios.patch(ENDPOINT_SETTINGS);\n\n      toast.success(\"Actualizado!\");\n\n      dispatch(forceRender());\n    } catch (error: any) {\n      toast.error(error.message);\n    }\n  };\n}\n","import { Button, Typography } from \"@mui/material\";\nimport { MACHINE_1, MACHINE_2 } from \"../../../../constants/machineNames\";\n\nimport { FC } from \"react\";\nimport FormikTextField from \"../../../../components/FormikComponents/FormikTextField\";\nimport SaveIcon from \"@mui/icons-material/Save\";\nimport styled from \"styled-components\";\nimport { updateCorrectionalFactor } from \"../../../../redux/actions/mainActions\";\nimport { useDispatch } from \"react-redux\";\nimport { useFormikContext } from \"formik\";\n\nconst StyledTabTitle = styled(Typography)`\n  font-size: 1.15rem;\n  font-weight: 600;\n  margin-bottom: 0.5rem;\n`;\n\nconst StyledNewItemWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  margin-bottom: 1rem;\n  width: 100%;\n`;\n\nconst StyledButtonWrapper = styled.div`\n  flex: 1;\n  .MuiButton-root {\n    min-width: unset;\n    border-radius: 50%;\n    width: 2.5rem;\n    height: 2.5rem;\n    margin-left: 1rem;\n    margin-top: 0.6rem;\n  }\n`;\n\ninterface IEditCorrectionalFactorFromProps {}\n\nconst EditCorrectionalFactorFrom: FC<IEditCorrectionalFactorFromProps> =\n  ({}) => {\n    const formikContext = useFormikContext<any>();\n    const dispatch = useDispatch();\n\n    function handleMachineClick(machineName: string) {\n      const machineFormFieldName =\n        machineName === MACHINE_1\n          ? \"correctionalFactorMachine1\"\n          : \"correctionalFactorMachine2\";\n\n      formikContext.setFieldTouched(machineFormFieldName, true);\n\n      const value = Number(formikContext.values[machineFormFieldName]);\n\n      if (value) {\n        dispatch(updateCorrectionalFactor(machineName, value));\n      }\n    }\n\n    return (\n      <>\n        <StyledTabTitle>Editar factor corrector:</StyledTabTitle>\n        <StyledNewItemWrapper>\n          <FormikTextField\n            type=\"number\"\n            min={0}\n            max={100}\n            name=\"correctionalFactorMachine1\"\n            label=\"Máquina 1\"\n            placeholder=\"Nuevo factor corrector M1\"\n            adornment=\"%\"\n            fullWidth\n          />\n          <StyledButtonWrapper>\n            <Button\n              className=\"m1Button\"\n              variant=\"contained\"\n              size=\"small\"\n              disableElevation\n              onClick={() => {\n                handleMachineClick(MACHINE_1);\n              }}\n            >\n              <SaveIcon fontSize=\"small\" />\n            </Button>\n          </StyledButtonWrapper>\n        </StyledNewItemWrapper>\n        <StyledNewItemWrapper>\n          <FormikTextField\n            type=\"number\"\n            min={0}\n            max={100}\n            name=\"correctionalFactorMachine2\"\n            label=\"Máquina 2\"\n            placeholder=\"Nuevo factor corrector M2\"\n            adornment=\"%\"\n            fullWidth\n          />\n\n          <StyledButtonWrapper>\n            <Button\n              variant=\"contained\"\n              size=\"small\"\n              disableElevation\n              onClick={() => {\n                handleMachineClick(MACHINE_2);\n              }}\n            >\n              <SaveIcon fontSize=\"small\" />\n            </Button>\n          </StyledButtonWrapper>\n        </StyledNewItemWrapper>\n      </>\n    );\n  };\n\nexport default EditCorrectionalFactorFrom;\n","export const ENDPOINT_SETTINGS = \"/api/settings\";\n","import * as Yup from \"yup\";\n\nimport { Button, Fab, IconButton, TextField, Typography } from \"@mui/material\";\nimport { FC, useRef } from \"react\";\nimport { Form, Formik } from \"formik\";\n\nimport AddIcon from \"@mui/icons-material/Add\";\nimport DeletableItemCard from \"../DeletableItemCard\";\nimport EditCorrectionalFactorFrom from \"./EditCorrectionalFactorForm\";\nimport FormikTextField from \"../../../../components/FormikComponents/FormikTextField\";\nimport SaveIcon from \"@mui/icons-material/Save\";\nimport { TSettingsResponse } from \"../../../../types/settingsTypes\";\nimport { motion } from \"framer-motion\";\nimport styled from \"styled-components\";\n\nconst StyledTabContainer = styled(motion.div).attrs(() => ({\n  initial: { opacity: 0 },\n  animate: { opacity: 1 },\n}))`\n  width: 100%;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n  height: 100%;\n`;\n\nconst StyledGroupWrapper = styled.div`\n  margin: 0 1rem;\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  max-width: 20rem;\n`;\n\nconst StyledNewItemWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  margin-bottom: 1rem;\n`;\n\nconst StyledButtonWrapper = styled.div`\n  flex: 1;\n  .MuiButton-root {\n    min-width: unset;\n    border-radius: 50%;\n    width: 2.5rem;\n    height: 2.5rem;\n  }\n`;\n\nconst StyledTabTitle = styled(Typography)`\n  font-size: 1.15rem;\n  font-weight: 600;\n  margin-bottom: 0.5rem;\n`;\n\nconst StyledListWrapper = styled.ul`\n  list-style: none;\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  overflow-y: auto;\n  height: 100%;\n`;\n\nconst validationSchema = Yup.object({\n  correctionalFactorMachine1: Yup.number()\n    .integer(\"No puede contener decimales\")\n    .min(0, \"El valor mínimo es 0\")\n    .max(100, \"El valor máximo es 100\"),\n\n  correctionalFactorMachine2: Yup.number()\n    .integer(\"No puede contener decimales\")\n    .min(0, \"El valor mínimo es 0\")\n    .max(100, \"El valor máximo es 100\"),\n});\n\ninterface IGeneralSettingsTabProps {\n  settings: TSettingsResponse;\n}\n\nconst GeneralSettingsTab: FC<IGeneralSettingsTabProps> = ({ settings }) => {\n  const newMaterialRef = useRef(null);\n  const newThicknessRef = useRef(null);\n\n  const correctionalFactorInitialValues = {\n    correctionalFactorMachine1: settings.correctionalFactorMachine1,\n    correctionalFactorMachine2: settings.correctionalFactorMachine2,\n  };\n\n  function handleDeleteMaterial() {}\n\n  function handleDeleteThickness() {}\n\n  return (\n    <StyledTabContainer className=\"tabContainer\">\n      <StyledGroupWrapper className=\"groupWrapper\">\n        {/* ---- CORRECTIONAL FACTORS ---- */}\n        <Formik\n          initialValues={correctionalFactorInitialValues}\n          onSubmit={() => {}}\n          validationSchema={validationSchema}\n        >\n          <Form noValidate>\n            <EditCorrectionalFactorFrom />\n          </Form>\n        </Formik>\n      </StyledGroupWrapper>\n      {/* ---- MATERIALS LIST ---- */}\n      <StyledGroupWrapper className=\"groupWrapper\">\n        <StyledTabTitle>Lista de materiales:</StyledTabTitle>\n        <StyledNewItemWrapper>\n          <TextField\n            type=\"text\"\n            name=\"material\"\n            label=\"Material\"\n            placeholder=\"Nuevo material\"\n            size=\"small\"\n            sx={{ marginRight: \"1rem\" }}\n            ref={newMaterialRef}\n          />\n          <StyledButtonWrapper>\n            <Button variant=\"contained\" size=\"small\" disableElevation>\n              <AddIcon fontSize=\"small\" />\n            </Button>\n          </StyledButtonWrapper>\n        </StyledNewItemWrapper>\n        <StyledListWrapper className=\"itemsList\">\n          {settings.materials.map((material) => (\n            <DeletableItemCard\n              itemName={material}\n              handleDelete={handleDeleteMaterial}\n              key={material}\n            />\n          ))}\n        </StyledListWrapper>\n      </StyledGroupWrapper>\n      {/* ---- THICKNESSESS LIST ---- */}\n      <StyledGroupWrapper className=\"groupWrapper\">\n        <StyledTabTitle>Lista de espesores</StyledTabTitle>\n        <StyledNewItemWrapper>\n          <TextField\n            type=\"text\"\n            name=\"thickness\"\n            label=\"Espesor\"\n            placeholder=\"Nuevo espesor\"\n            size=\"small\"\n            sx={{ marginRight: \"1rem\" }}\n            ref={newThicknessRef}\n          />\n          <StyledButtonWrapper>\n            <Button variant=\"contained\" size=\"small\" disableElevation>\n              <AddIcon fontSize=\"small\" />\n            </Button>\n          </StyledButtonWrapper>\n        </StyledNewItemWrapper>\n        <StyledListWrapper className=\"itemsList\">\n          {settings.thicknesses.map((value) => (\n            <DeletableItemCard\n              itemName={`${value} mm`}\n              handleDelete={handleDeleteThickness}\n              key={value}\n            />\n          ))}\n        </StyledListWrapper>\n      </StyledGroupWrapper>\n    </StyledTabContainer>\n  );\n};\n\nexport default GeneralSettingsTab;\n","export const maxWidth = 1200;\nexport const maxTableHeight = \"78vh\";\nexport const maxTableHeight_small = \"70vh\";\nexport const darkBackground = \"#303030\";\nexport const darkMenuBackground = \"#212121\";\nexport const darkCardBackground = \"#424242\";\n","import styled from \"styled-components\";\nimport { maxWidth } from \"../styles/styleConstants\";\n\nexport const StyledTableHeaderWrapper = styled.div`\n  display: flex;\n  justify-content: start;\n  align-items: center;\n  max-width: ${maxWidth}px;\n  width: 100%;\n  margin: auto;\n  margin-bottom: 0.5rem;\n  background-color: #f5f5f5;\n  border-radius: 0.25rem;\n  padding: 0.5rem;\n  font-weight: 700;\n`;\n\nexport const StyledTableHeaderInfoWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  flex: 1;\n`;\n\nexport const StyledFlexGrow = styled.div`\n  flex: 1;\n`;\n","import { Typography, Box } from \"@mui/material\";\nimport { height } from \"@mui/system\";\nimport { FC } from \"react\";\nimport { StyledFlexGrow } from \"../../../StyledComponents/StyledTableHeader\";\n\ninterface ITabPanelProps {\n  children?: React.ReactNode;\n  index: number;\n  value: number;\n}\n\nconst TabPanel: FC<ITabPanelProps> = ({ children, value, index }) => {\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      style={{ height: \"calc(100% - 3rem)\" }}\n    >\n      {value === index && (\n        <Box sx={{ p: 3, height: \"100%\", flex: 1 }}>\n          {children}\n          <StyledFlexGrow />\n        </Box>\n      )}\n    </div>\n  );\n};\n\nexport default TabPanel;\n","import { AppBar, Box, Tab, Tabs } from \"@mui/material\";\n\nimport { AnimatePresence } from \"framer-motion\";\nimport EmployeesTab from \"./components/EmployeesTab/EmployeesTab\";\nimport { FC } from \"react\";\nimport GeneralSettingsTab from \"./components/GeneralSettingsTab/GeneralSettingsTab\";\nimport { TSettingsResponse } from \"../../types/settingsTypes\";\nimport TabPanel from \"./components/TabPanel\";\nimport styled from \"styled-components\";\nimport { useState } from \"react\";\nimport userData from \"../../mocks/users.json\";\n\nconst StyledAdminProfileHeader = styled.div`\n  width: 100%;\n  display: flex;\n  color: white;\n  font-size: 1.75rem;\n  font-weight: 700;\n  justify-content: center;\n  margin-bottom: 1.5rem;\n`;\n\ninterface IAdminProfilePageProps {\n  settings: TSettingsResponse;\n}\n\nconst AdminProfilePage: FC<IAdminProfilePageProps> = ({ settings }) => {\n  const [value, setValue] = useState(0);\n\n  function a11yProps(index: number) {\n    return {\n      id: `simple-tab-${index}`,\n      \"aria-controls\": `simple-tabpanel-${index}`,\n    };\n  }\n\n  const handleChange = (event: React.SyntheticEvent, newValue: number) => {\n    setValue(newValue);\n  };\n\n  return (\n    <>\n      <StyledAdminProfileHeader>\n        Zona de administración\n      </StyledAdminProfileHeader>\n\n      <Box\n        sx={{\n          bgcolor: \"background.paper\",\n          width: \"100%\",\n          height: \"calc(100% - 4rem)\",\n          flex: 1,\n          boxSizing: \"border-box\",\n        }}\n      >\n        <AppBar position=\"static\">\n          <Tabs\n            value={value}\n            onChange={handleChange}\n            aria-label=\"admin tabs\"\n            indicatorColor=\"secondary\"\n            textColor=\"inherit\"\n          >\n            <Tab\n              label=\"Ajustes generales\"\n              {...a11yProps(0)}\n              sx={{ color: \"white\" }}\n            />\n            <Tab label=\"Empleados\" {...a11yProps(1)} sx={{ color: \"white\" }} />\n          </Tabs>\n        </AppBar>\n        <AnimatePresence>\n          <TabPanel value={value} index={0} key=\"generalSettingsTab\">\n            <GeneralSettingsTab settings={settings} />\n          </TabPanel>\n          <TabPanel value={value} index={1} key=\"employeesTab\">\n            <EmployeesTab employees={userData} />\n          </TabPanel>\n        </AnimatePresence>\n      </Box>\n    </>\n  );\n};\n\nexport default AdminProfilePage;\n","import { FC } from \"react\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport styled from \"styled-components\";\nimport { Typography } from \"@mui/material\";\n\nconst StyledLoadingWrapper = styled.div`\n  display: flex;\n  max-width: 35rem;\n  justify-content: center;\n  align-items: center;\n  margin: auto;\n  color: white;\n  margin-top: 3rem;\n`;\n\nconst StyledLoadingText = styled(Typography)`\n  margin-left: 1rem;\n  font-size: 1.5rem;\n`;\n\ninterface IStandardLoadingProps {\n  text?: string;\n}\n\nconst StandardLoading: FC<IStandardLoadingProps> = ({ text }) => {\n  return (\n    <StyledLoadingWrapper>\n      <CircularProgress />\n      <StyledLoadingText>{text ? text : \"Cargando...\"}</StyledLoadingText>\n    </StyledLoadingWrapper>\n  );\n};\n\nexport default StandardLoading;\n","import AdminProfilePage from \"./AdminProfilePage\";\nimport { FC } from \"react\";\nimport StandardLoading from \"../../components/StandardLoading/StandardLoading\";\nimport { TInitialState } from \"../../redux/store/initialState\";\nimport useAdminProfilePageQuery from \"./queries/useAdminProfilePageQuery\";\nimport { useSelector } from \"react-redux\";\n\nconst AdminProfilePageContainer: FC = () => {\n  const { forceRender } = useSelector(\n    (state: TInitialState) => state.mainReducer\n  );\n  const { isLoading, isError, data } = useAdminProfilePageQuery(forceRender);\n\n  return (\n    <>\n      {isLoading ? (\n        <StandardLoading />\n      ) : (\n        data && <AdminProfilePage settings={data} />\n      )}\n    </>\n  );\n};\n\nexport default AdminProfilePageContainer;\n","import { useQuery } from \"react-query\";\n\nexport default function useAdminProfilePageQuery(forceRender: number) {\n  return useQuery([\"loadAdminProfile\", forceRender], async () => {\n    return {\n      materials: [\"Madera\", \"Hierro\", \"Otro\", \"Plastico\"],\n      thicknesses: [0.1, 0.2, 0.3, 0.4, 0.5],\n      correctionalFactorMachine1: 0.1,\n      correctionalFactorMachine2: 0.15,\n    };\n  });\n}\n","export default function getColorByPriority(priority: number) {\n  let bgColor = \"\";\n  if (priority > 0 && priority <= 2) {\n    bgColor = \"rgba(93, 172, 245, 0.5)\";\n  }\n  if (priority > 2 && priority <= 4) {\n    bgColor = \"rgba(1, 187, 63, 0.5)\";\n  }\n  if (priority > 4 && priority <= 8) {\n    bgColor = \"rgba(255, 163, 15, 0.5)\";\n  }\n  if (priority > 8 && priority <= 10) {\n    bgColor = \"rgba(246, 91, 92, 0.5)\";\n  }\n\n  return bgColor;\n}\n","import styled from \"styled-components\";\nimport getColorByPriority from \"../../../../utils/getColorByPriority\";\n\nconst StyledPriorityBadgeWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`;\n\nconst StyledPriorityBadge = styled.div`\n  width: 1.75rem;\n  height: 1.75rem;\n  border-radius: 50%;\n  margin-right: 0.5rem;\n`;\n\nconst StyledPriorityText = styled.span`\n  font-size: 1rem;\n  font-weight: 600;\n`;\n\nfunction formatTextByPriority(priority: number) {\n  let text = \"\";\n\n  if (priority > 0 && priority <= 2) {\n    text = \"Normal\";\n  }\n  if (priority > 2 && priority <= 4) {\n    text = \"Normal\";\n  }\n  if (priority > 4 && priority <= 8) {\n    text = \"Urgencia 48h\";\n  }\n  if (priority > 8 && priority <= 10) {\n    text = \"Urgencia 24h\";\n  }\n\n  return text;\n}\n\ninterface IPriorityBadge {\n  priority: number;\n}\nfunction PriorityBadge(props: IPriorityBadge) {\n  const { priority } = props;\n  return (\n    <StyledPriorityBadgeWrapper>\n      <StyledPriorityBadge\n        style={{\n          background: getColorByPriority(priority),\n        }}\n      />\n      <StyledPriorityText>{formatTextByPriority(priority)}</StyledPriorityText>\n    </StyledPriorityBadgeWrapper>\n  );\n}\n\nexport default PriorityBadge;\n","import { FC } from \"react\";\nimport { useFormikContext } from \"formik\";\nimport styled from \"styled-components\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Select, { SelectChangeEvent } from \"@mui/material/Select\";\nimport { FormHelperText } from \"@mui/material\";\n\nconst StyledFormikSelectWrapper = styled.div`\n  margin-top: 0.5rem;\n  .MuiSelect-select {\n    padding: 0.75rem 0.5rem;\n  }\n`;\n\ninterface IFormikSelectProps {\n  name: string;\n  label: string;\n  values: string[];\n  variant?: \"outlined\" | \"filled\" | \"standard\";\n  size?: \"medium\" | \"small\";\n  margin?: \"none\" | \"dense\";\n}\n\nconst FormikSelect: FC<IFormikSelectProps> = ({\n  name,\n  label,\n  values,\n  variant = \"outlined\",\n  size = \"medium\",\n  margin = \"dense\",\n}) => {\n  const formikContext = useFormikContext<any>();\n\n  function handleChange({ target }: SelectChangeEvent) {\n    formikContext.setFieldValue(name, target.value);\n  }\n\n  const selectValues = values.map((item) => ({\n    label: item,\n    value: item.toLowerCase(),\n  }));\n\n  return (\n    <StyledFormikSelectWrapper>\n      <FormControl fullWidth>\n        <InputLabel id=\"demo-simple-select-label\">{label}</InputLabel>\n        <Select\n          labelId=\"demo-simple-select-label\"\n          id=\"demo-simple-select\"\n          value={formikContext.values[name]}\n          label={label}\n          onChange={handleChange}\n          error={\n            formikContext.touched[name] && formikContext.errors[name]\n              ? true\n              : false\n          }\n          variant={variant}\n          size={size}\n          margin={margin}\n          defaultValue={formikContext.values[name]}\n        >\n          {selectValues.map((item) => (\n            <MenuItem value={item.value} key={item.value}>\n              {item.label}\n            </MenuItem>\n          ))}\n        </Select>\n        {formikContext.touched[name] && formikContext.errors[name] && (\n          <FormHelperText sx={{ color: \"#D32F2F\" }}>\n            {formikContext.errors[name]}\n          </FormHelperText>\n        )}\n      </FormControl>\n    </StyledFormikSelectWrapper>\n  );\n};\n\nexport default FormikSelect;\n","import {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Grid,\n} from \"@mui/material\";\nimport { Form } from \"formik\";\nimport styled from \"styled-components\";\nimport FormikTextField from \"../FormikComponents/FormikTextField\";\nimport PriorityBadge from \"./components/PriorityBadge/PriorityBadge\";\n\nimport { useFormikContext } from \"formik\";\nimport { useSelector } from \"react-redux\";\nimport { TInitialState } from \"../../redux/store/initialState\";\nimport { useEffect } from \"react\";\nimport FormikSelect from \"../FormikComponents/FormikSelect\";\n\nconst StyledCreateTaskDialogWrapper = styled(Dialog)`\n  .MuiPaper-root {\n    max-width: 26rem;\n  }\n`;\n\nconst StyledFlexCenteredWrapper = styled.div`\n  display: flex;\n  justify-content: start;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n`;\n\ninterface ICreateTaskDialogProps {\n  isOpen: boolean;\n  handleClose: () => void;\n}\n\nconst materialsMock = [\"Madera\", \"Hierro\", \"Acero\", \"Aluminio\"];\nconst machinesMock = [\"Máquina1\", \"Máquina2\"];\n\nfunction CreateTaskDialog(props: ICreateTaskDialogProps) {\n  const { isOpen, handleClose } = props;\n\n  const formikContext = useFormikContext<any>();\n\n  const { selectedMachine } = useSelector(\n    (state: TInitialState) => state.mainReducer.createTaskModal\n  );\n\n  useEffect(() => {\n    console.log(\"machine\", selectedMachine);\n\n    formikContext.values.selectedMachine = selectedMachine;\n  }, [selectedMachine]);\n\n  useEffect(() => {\n    if (!isOpen) {\n      formikContext.resetForm();\n    }\n  }, [isOpen]);\n\n  return (\n    <StyledCreateTaskDialogWrapper open={isOpen} onClose={handleClose}>\n      <Form noValidate>\n        <DialogTitle sx={{ textAlign: \"center\" }}>Nuevo programa</DialogTitle>\n        <DialogContent>\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <FormikTextField\n                name=\"employee\"\n                label=\"Código de empleado\"\n                autofocus\n                fullWidth\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <FormikTextField\n                name=\"programNumber\"\n                label=\"Nº Programa\"\n                fullWidth\n              />\n            </Grid>\n            <Grid item xs={6}>\n              <FormikSelect\n                name=\"material\"\n                label=\"Material\"\n                values={materialsMock}\n              />\n            </Grid>\n            <Grid item xs={6}>\n              <FormikTextField\n                min={0}\n                name=\"thickness\"\n                label=\"Espesor (mm)\"\n                type=\"number\"\n                adornment=\"mm\"\n                fullWidth\n              />\n            </Grid>\n            <Grid item xs={6}>\n              <FormikTextField\n                name=\"priority\"\n                label=\"Prioridad\"\n                type=\"number\"\n                min={1}\n                max={10}\n                fullWidth\n              />\n            </Grid>\n            <Grid item xs={6}>\n              <StyledFlexCenteredWrapper>\n                <PriorityBadge priority={formikContext.values.priority} />\n              </StyledFlexCenteredWrapper>\n            </Grid>\n            <Grid item xs={6}>\n              <FormikTextField\n                name=\"duration\"\n                label=\"Tiempo\"\n                type=\"number\"\n                adornment=\"min\"\n                min={0}\n                fullWidth\n              />\n            </Grid>\n            <Grid item xs={6}>\n              <FormikTextField\n                name=\"correctionalFactor\"\n                label=\"Factor corrector\"\n                fullWidth\n                disabled\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <FormikSelect\n                name=\"selectedMachine\"\n                label=\"Máquina\"\n                values={machinesMock}\n              />\n            </Grid>\n          </Grid>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} variant=\"outlined\">\n            Cancel\n          </Button>\n          <Button type=\"submit\" variant=\"contained\">\n            Submit\n          </Button>\n        </DialogActions>\n      </Form>\n    </StyledCreateTaskDialogWrapper>\n  );\n}\n\nexport default CreateTaskDialog;\n","import { useSelector, useDispatch } from \"react-redux\";\n\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\n\nimport { TInitialState } from \"../../redux/store/initialState\";\nimport { setIsCreateTaskModalOpen } from \"../../redux/actions/mainActions\";\nimport CreateTaskDialog from \"./CreateTaskDialog\";\n\nfunction CreateTaksDialogContainer() {\n  const dispatch = useDispatch();\n\n  const { isOpen, selectedMachine } = useSelector(\n    (state: TInitialState) => state.mainReducer.createTaskModal\n  );\n\n  function handleClose() {\n    dispatch(setIsCreateTaskModalOpen(false));\n  }\n\n  const initialValues = {\n    employee: \"\",\n    material: \"\",\n    thickness: 0,\n    programNumber: \"\",\n    priority: 1,\n    duration: 0,\n    correctionalFactor: 10,\n    selectedMachine: selectedMachine || \"máquina1\",\n  };\n\n  const validationSchema = Yup.object({\n    employee: Yup.string().required(\"El código de empleado es obligatorio.\"),\n    material: Yup.string().required(\"El material es obligatorio.\"),\n    programNumber: Yup.string().required(\n      \"El número de programa es obligatorio.\"\n    ),\n    thickness: Yup.number()\n      .integer(\"No puede contener decimales.\")\n      .min(0, \"No puede ser negativo.\")\n      .required(\"El espesor es obligatorio.\"),\n    priority: Yup.number()\n      .integer(\"No puede contener decimales.\")\n      .min(1, \"El valor mínimo es 1.\")\n      .max(10, \"El valor máximo es 10.\")\n      .required(\"La prioridad es obligatoria.\"),\n    duration: Yup.number()\n      .integer(\"No puede contener decimales.\")\n      .required(\"La duración es obligatoria.\"),\n    selectedMachine: Yup.string().required(\"La máquina es obligatoria.\"),\n  });\n\n  function handleCreateTaskFormSubmit(values: TCreateTaskDialogFormValues) {\n    console.log(\"submitting\");\n    handleClose();\n  }\n\n  type TCreateTaskDialogFormValues = typeof initialValues;\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      onSubmit={handleCreateTaskFormSubmit}\n      validationSchema={validationSchema}\n    >\n      <CreateTaskDialog isOpen={isOpen} handleClose={handleClose} />\n    </Formik>\n  );\n}\n\nexport default CreateTaksDialogContainer;\n","import { TTaskResponse } from \"../types/taskTypes\";\nimport users from \"../mocks/users.json\";\nimport machines from \"../mocks/machines.json\";\n\nexport default function populateTasks(tasks: TTaskResponse[]) {\n  return tasks.map((task: any) => {\n    const user = users.find((user) => user._id === task.user);\n    const machine = machines.find((machine) => machine._id === task.machine);\n\n    return { ...task, user, machine };\n  });\n}\n","import { TTaskResponse } from \"../types/taskTypes\";\nimport populateTasks from \"../utils/populateTasks\";\nimport jsonTasks from \"./tasks.json\";\n\nconst tasks: TTaskResponse[] = [...jsonTasks];\n\nexport function getTaskByMachineId(machineId: string): TTaskResponse[] {\n  const filteredTasks = tasks.filter(\n    (task: TTaskResponse) => task.machine === machineId && task.status === 0\n  );\n\n  const populatedTasks = populateTasks(filteredTasks);\n\n  return populatedTasks;\n}\n\nexport function getTaskByUserId(userId: string) {\n  const filteredTasks = tasks.filter((task) => task.user === userId);\n  const populatedTasks = populateTasks(filteredTasks);\n\n  return populatedTasks;\n}\n\nexport function getActiveTasks() {\n  const filteredTasks = tasks.filter(\n    (task: TTaskResponse) => task.status === 0\n  );\n  const populatedTasks = populateTasks(filteredTasks);\n\n  return populatedTasks;\n}\n\nexport function getFinishedTasks() {\n  const filteredTasks = tasks.filter(\n    (task: TTaskResponse) => task.status === 1\n  );\n  const populatedTasks = populateTasks(filteredTasks);\n\n  return populatedTasks;\n}\n\nexport function saveFinishedTask(taskId: string) {\n  const taskIndex = tasks.findIndex((task) => task._id === taskId);\n\n  if (taskIndex || taskIndex === 0) {\n    tasks[taskIndex].status = 1;\n  }\n}\n","import { TUserResponse } from \"../types/employeeTypes\";\nimport data from \"./users.json\";\nconst users: TUserResponse[] = data;\n\nexport function getUserById(userId: string) {\n  const user = users.find((user) => {\n    return user._id === userId;\n  });\n  return user;\n}\n\nexport function getUserByCode(userCode: string) {\n  const user = users.find((user) => {\n    return user.employerCode === userCode;\n  });\n  return user;\n}\n","import dayjs from \"dayjs\";\n\nexport default function formatDate(date: string | null) {\n  if (!date) {\n    return \"-\";\n  }\n  return dayjs(date).format(\"DD/MM/YY HH:mm\");\n}\n","import { FC } from \"react\";\nimport styled from \"styled-components\";\n\nimport WatchLaterIcon from \"@mui/icons-material/WatchLater\";\nimport CheckCircleIcon from \"@mui/icons-material/CheckCircle\";\n\nconst StyledTaskStatusContainer = styled.div`\n  display: flex;\n  justify-content: start;\n  align-items: center;\n  padding: 0.25rem 0.5rem;\n  border-radius: 0.5rem;\n  font-size: 0.9rem;\n  font-weight: 600;\n  width: fit-content;\n`;\n\nconst StyledTaskText = styled.span`\n  line-height: normal;\n`;\n\ninterface ITaskStatusProps {\n  status: number;\n}\n\nconst statusText: any = {\n  0: \"En curso\",\n  1: \"Finalizada\",\n};\n\nconst statusTextColor: any = {\n  0: \"#014361\",\n  1: \"#1e4620\",\n};\n\nconst iconColor: any = {\n  0: \"#03a9f4\",\n  1: \"#4caf50\",\n};\n\nconst statusBgColor: any = {\n  0: \"#E5F5FD\",\n  1: \"#EDF7ED\",\n};\n\nconst TaskStatus: FC<ITaskStatusProps> = ({ status }) => {\n  return (\n    <StyledTaskStatusContainer\n      className=\"TaskStatusContainer\"\n      style={{\n        background: statusBgColor[status],\n        color: statusTextColor[status],\n      }}\n    >\n      {status === 0 ? (\n        <WatchLaterIcon\n          style={{ color: iconColor[status], marginRight: \"0.25rem\" }}\n        />\n      ) : (\n        <CheckCircleIcon\n          style={{ color: iconColor[status], marginRight: \"0.25rem\" }}\n        />\n      )}\n      <StyledTaskText>{statusText[status]}</StyledTaskText>\n    </StyledTaskStatusContainer>\n  );\n};\n\nexport default TaskStatus;\n","import { TableCell, TableHead, TableRow } from \"@mui/material\";\nimport { THeadCell } from \"../MUITableTypes\";\n\ninterface IEnhancedTableHeadProps {\n  headCells: THeadCell[];\n}\n\nexport default function EnhancedTasksTableHead(props: IEnhancedTableHeadProps) {\n  const { headCells } = props;\n\n  return (\n    <TableHead>\n      <TableRow>\n        {headCells.map((headCell) => (\n          <TableCell key={headCell.id} align=\"center\" padding=\"normal\">\n            {headCell.label}\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n","import styled from \"styled-components\";\n\nimport { maxWidth } from \"../../styles/styleConstants\";\n\nexport const StyledTablePageContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  width: 100%;\n`;\n\nexport const StyledTableWrapper = styled.div`\n  width: 100%;\n  max-width: ${maxWidth}px;\n\n  .MuiTableCell-head {\n    color: #002740;\n    font-weight: 700;\n    background-color: #f5f5f5;\n    border-bottom: 2px solid rgba(150, 150, 150, 1);\n    line-height: 1.25;\n    font-size: 1.1rem;\n  }\n\n  .MuiTableCell-body {\n    border-bottom: 1px solid rgba(255, 255, 255, 1);\n    font-weight: 500;\n    font-size: 1.1rem;\n  }\n\n  .MuiTablePagination-root {\n    color: white;\n  }\n\n  .MuiSvgIcon-root {\n    color: white;\n  }\n`;\n\nexport const StyledLoadingWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 1rem;\n\n  font-size: 1.75rem;\n\n  .MuiCircularProgress-root {\n    margin-right: 1rem;\n  }\n`;\n","export function setTableRowBackgroundColorByPriority(priority: number) {\n  let bgColor = \"\";\n  if (priority > 0 && priority <= 2) {\n    bgColor = \"rgba(93, 172, 245, 0.5)\";\n  }\n  if (priority > 2 && priority <= 4) {\n    bgColor = \"rgba(1, 187, 63, 0.5)\";\n  }\n  if (priority > 4 && priority <= 8) {\n    bgColor = \"rgba(255, 163, 15, 0.5)\";\n  }\n  if (priority > 8 && priority <= 10) {\n    bgColor = \"rgba(246, 91, 92, 0.5)\";\n  }\n\n  return {\n    backgroundColor: bgColor,\n  };\n}\n","import {\n  Box,\n  CircularProgress,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TablePagination,\n  TableRow,\n  Paper,\n} from \"@mui/material\";\nimport React from \"react\";\nimport {\n  maxTableHeight,\n  maxTableHeight_small,\n} from \"../../../styles/styleConstants\";\nimport { TTaskResponse } from \"../../../types/taskTypes\";\nimport formatDate from \"../../../utils/formatDate\";\nimport TaskStatus from \"../../TaskStatus/TaskStatus\";\nimport EnhancedTableHead from \"../EnhancedTableHead/EnhancedTableHead\";\nimport { THeadCell } from \"../MUITableTypes\";\n\nimport {\n  StyledLoadingWrapper,\n  StyledTablePageContainer,\n  StyledTableWrapper,\n} from \"../SCMuiTable\";\n\nimport { setTableRowBackgroundColorByPriority } from \"../setTableRowBackgroundColorByPriority\";\n\ninterface IEnhnacedEmployeeTasksTableProps {\n  tasks: TTaskResponse[] | undefined;\n  isLoading: boolean;\n  isError: boolean;\n  headCells: THeadCell[];\n}\n\nexport default function EnhnacedEmployeeTasksTable(\n  props: IEnhnacedEmployeeTasksTableProps\n) {\n  const { tasks, headCells, isLoading, isError } = props;\n\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(25);\n\n  const handleChangePage = (event: unknown, newPage: number) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  return (\n    <StyledTablePageContainer className=\"EnhancedTaskTable\">\n      <StyledTableWrapper className=\"EnhancedTaskTable__container\">\n        <Box sx={{ width: \"100%\" }}>\n          <TableContainer\n            component={Paper}\n            sx={{ maxHeight: maxTableHeight_small }}\n          >\n            <Table\n              sx={{ minWidth: 750, maxHeight: 250 }}\n              aria-labelledby=\"tableTitle\"\n              size=\"medium\"\n              stickyHeader\n            >\n              <EnhancedTableHead headCells={headCells} />\n              <TableBody>\n                {isLoading ? (\n                  <TableRow>\n                    <TableCell colSpan={999}>\n                      <StyledLoadingWrapper>\n                        <CircularProgress />\n                        Cargando Datos...\n                      </StyledLoadingWrapper>\n                    </TableCell>\n                  </TableRow>\n                ) : isError ? (\n                  <></>\n                ) : (\n                  tasks &&\n                  tasks.map((task, index) => {\n                    return (\n                      <TableRow\n                        key={task._id}\n                        sx={{\n                          \"&:last-child td, &:last-child th\": { border: 0 },\n                        }}\n                        style={setTableRowBackgroundColorByPriority(\n                          task.priority\n                        )}\n                      >\n                        <TableCell\n                          component=\"th\"\n                          scope=\"row\"\n                          align=\"center\"\n                          width={100}\n                        >\n                          {task.taskNumber}\n                        </TableCell>\n\n                        <TableCell align=\"center\">\n                          <TaskStatus status={task.status} />\n                        </TableCell>\n                        <TableCell align=\"center\">{task.material}</TableCell>\n                        <TableCell align=\"center\">{task.thickness}</TableCell>\n                        <TableCell align=\"center\">\n                          {task.programNumber}\n                        </TableCell>\n                        <TableCell align=\"center\">\n                          {task.machine.name}\n                        </TableCell>\n                        <TableCell align=\"center\">\n                          {task.duration} min\n                        </TableCell>\n                        <TableCell align=\"center\">\n                          {formatDate(task.end || task.start)}\n                        </TableCell>\n                      </TableRow>\n                    );\n                  })\n                )}\n              </TableBody>\n            </Table>\n          </TableContainer>\n          {!isLoading && tasks && (\n            <TablePagination\n              rowsPerPageOptions={[25, 50, 75, 100]}\n              component=\"div\"\n              count={tasks.length}\n              rowsPerPage={rowsPerPage}\n              page={page}\n              onPageChange={handleChangePage}\n              onRowsPerPageChange={handleChangeRowsPerPage}\n            />\n          )}\n        </Box>\n      </StyledTableWrapper>\n    </StyledTablePageContainer>\n  );\n}\n","import { TTaskResponse } from \"../types/taskTypes\";\n\nexport function calculateTotalTime(tasks: TTaskResponse[] | undefined) {\n  if (tasks) {\n    return tasks.reduce(\n      (accumulator, current) => accumulator + current.duration,\n      0\n    );\n  } else {\n    return 0;\n  }\n}\n","import { MACHINE_1, MACHINE_2 } from \"../constants/machineNames\";\nimport { TMachineResponse } from \"../types/machineTypes\";\nimport { TTaskResponse } from \"../types/taskTypes\";\nimport { calculateTotalTime } from \"./calculateTotalTime\";\n\ntype TTasksData = {\n  machine1: {\n    activeTasks: number | undefined;\n    timeToFinish: number;\n  };\n  machine2: {\n    activeTasks: number | undefined;\n\n    timeToFinish: number;\n  };\n};\n\nexport function calculateMachineGeneralValues(\n  tasks: TTaskResponse[] | undefined\n): TTasksData {\n  const machine1Tasks = tasks?.filter(\n    (task) => task.machine.name === MACHINE_1\n  );\n  const machine2Tasks = tasks?.filter(\n    (task) => task.machine.name === MACHINE_2\n  );\n\n  const machine1TimeToFinish = calculateTotalTime(machine1Tasks);\n  const machine2TimeToFinish = calculateTotalTime(machine2Tasks);\n\n  return {\n    machine1: {\n      activeTasks: machine1Tasks?.length,\n      timeToFinish: machine1TimeToFinish,\n    },\n    machine2: {\n      activeTasks: machine2Tasks?.length,\n      timeToFinish: machine2TimeToFinish,\n    },\n  };\n}\n","import { Grid } from \"@mui/material\";\nimport React from \"react\";\nimport styled from \"styled-components\";\n\nconst StyledTableHeaderInfoCardContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  background: #d8d8d8;\n  border-radius: 0.5rem;\n  padding: 0.15rem 0;\n\n  .MuiGrid-item {\n    text-align: center;\n    padding: 0.25rem;\n    font-weight: 400;\n  }\n`;\n\nconst StyledInfoCardSeparator = styled.div`\n  width: 95%;\n  height: 1px;\n  margin: auto;\n  background: #8a8a8a;\n`;\n\nconst StyledImportantCell = styled.span`\n  font-weight: 700;\n`;\n\nconst StyledValue = styled.span`\n  font-size: 1.5rem;\n`;\n\nconst StyledTotalValue = styled.span`\n  color: green;\n  font-weight: 700;\n`;\n\ninterface ITableHeaderInfoCardProps {\n  machine1Tasks: number;\n  machine1TimeToFinish: number;\n  machine2Tasks: number;\n  machine2TimeToFinish: number;\n  totalTasks: number;\n  totalTimeToFinish: number;\n}\n\nfunction TableHeaderInfoCard(props: ITableHeaderInfoCardProps) {\n  const {\n    machine1Tasks,\n    machine1TimeToFinish,\n    machine2Tasks,\n    machine2TimeToFinish,\n    totalTasks,\n    totalTimeToFinish,\n  } = props;\n\n  return (\n    <StyledTableHeaderInfoCardContainer>\n      <Grid container>\n        {/* Inicio fila 1 */}\n        <Grid item alignItems=\"center\" xs={3}></Grid>\n        <Grid item alignItems=\"start\" xs={3}>\n          <StyledImportantCell>Maq.1</StyledImportantCell>\n        </Grid>\n        <Grid item alignItems=\"start\" xs={3}>\n          <StyledImportantCell>Maq.2</StyledImportantCell>\n        </Grid>\n        <Grid item alignItems=\"center\" xs={3}>\n          <StyledTotalValue>Total</StyledTotalValue>\n        </Grid>\n\n        {/* Inicio fila 2 */}\n        <Grid item alignItems=\"start\" xs={3}>\n          <StyledImportantCell>Prog. Activos</StyledImportantCell>\n        </Grid>\n        <Grid item alignItems=\"center\" xs={3}>\n          <StyledValue>{machine1Tasks}</StyledValue>\n        </Grid>\n        <Grid item alignItems=\"center\" xs={3}>\n          <StyledValue>{machine2Tasks}</StyledValue>\n        </Grid>\n        <Grid item alignItems=\"center\" xs={3}>\n          <StyledValue>\n            <StyledTotalValue>{totalTasks}</StyledTotalValue>\n          </StyledValue>\n        </Grid>\n\n        <StyledInfoCardSeparator />\n\n        {/* Inicio fila 3 */}\n        <Grid item alignItems=\"center\" xs={3}>\n          <StyledImportantCell> T. Restante</StyledImportantCell>\n        </Grid>\n        <Grid item alignItems=\"center\" xs={3}>\n          <StyledValue>{machine1TimeToFinish} min</StyledValue>\n        </Grid>\n        <Grid item alignItems=\"center\" xs={3}>\n          <StyledValue>{machine2TimeToFinish} min</StyledValue>\n        </Grid>\n        <Grid item alignItems=\"center\" xs={3}>\n          <StyledValue>\n            <StyledTotalValue>{totalTimeToFinish} min </StyledTotalValue>\n          </StyledValue>\n        </Grid>\n      </Grid>\n    </StyledTableHeaderInfoCardContainer>\n  );\n}\n\nexport default TableHeaderInfoCard;\n","import React from \"react\";\nimport { TUserResponse } from \"../../types/employeeTypes\";\nimport \"./UserInfoHeader.scss\";\nimport { useHistory } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nimport ArrowBackIcon from \"@mui/icons-material/ArrowBack\";\nimport IconButton from \"@mui/material/IconButton\";\nimport {\n  StyledTableHeaderInfoWrapper,\n  StyledTableHeaderWrapper,\n} from \"../../StyledComponents/StyledTableHeader\";\nimport { TTaskResponse } from \"../../types/taskTypes\";\nimport { TMachineResponse } from \"../../types/machineTypes\";\nimport { calculateMachineGeneralValues } from \"../../utils/calculateMachineGeneralValues\";\nimport TableHeaderInfoCard from \"../TableHeaderInfoCard/TableHeaderInfoCard\";\nimport { calculateTotalTime } from \"../../utils/calculateTotalTime\";\n\nconst StyledFlexGrow = styled.div`\n  flex: 1;\n`;\n\nconst StyledInfoWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  height: 100%;\n`;\n\ninterface IUserInfoHeaderProps {\n  employee: TUserResponse | undefined;\n  tasks: TTaskResponse[] | undefined;\n}\n\nfunction UserInfoHeader(props: IUserInfoHeaderProps) {\n  const { employee, tasks } = props;\n\n  const tasksData = calculateMachineGeneralValues(tasks);\n  const history = useHistory();\n\n  return (\n    <StyledTableHeaderWrapper className=\"user-data-table-container\">\n      <StyledTableHeaderInfoWrapper className=\"user-data-table\">\n        <IconButton onClick={() => history.goBack()} aria-label=\"goBack\">\n          <ArrowBackIcon />\n        </IconButton>\n        <StyledInfoWrapper>\n          <span className=\"user-data-table__info--name\">{employee?.name}</span>\n          <span className=\"user-data-table__info\">\n            Cód. Emp: {employee?.employerCode}\n          </span>\n        </StyledInfoWrapper>\n        <StyledFlexGrow />\n        <TableHeaderInfoCard\n          machine1Tasks={tasksData.machine1.activeTasks as number}\n          machine1TimeToFinish={tasksData.machine1.timeToFinish as number}\n          machine2Tasks={tasksData.machine2.activeTasks as number}\n          machine2TimeToFinish={tasksData.machine2.timeToFinish as number}\n          totalTasks={tasks?.length as number}\n          totalTimeToFinish={calculateTotalTime(tasks)}\n        />\n      </StyledTableHeaderInfoWrapper>\n    </StyledTableHeaderWrapper>\n  );\n}\n\nexport default UserInfoHeader;\n","import React from \"react\";\n\n// types\nimport { TTaskResponse } from \"../../types/taskTypes\";\nimport { THeadCell } from \"../../components/MUITable/MUITableTypes\";\nimport { TUserResponse } from \"../../types/employeeTypes\";\n\n// components\nimport EnhancedEmployeeTable from \"../../components/MUITable/EnhancedEmployeeTable/EnhancedEmployeeTable\";\nimport UserInfoHeader from \"../../components/UserInfoHeader/UserInfoHeader\";\nimport { TMachineResponse } from \"../../types/machineTypes\";\n\ninterface IEmployeePage {\n  tasks: TTaskResponse[] | undefined;\n  employee: TUserResponse | undefined;\n  isLoading: boolean;\n  isError: boolean;\n}\n\nfunction EmployeePage(props: IEmployeePage) {\n  const { tasks, isLoading, isError, employee } = props;\n\n  const headCells: THeadCell[] = [\n    {\n      id: \"taskNumber\",\n      label: \"Nº tarea\",\n    },\n    {\n      id: \"status\",\n      label: \"Estado\",\n    },\n    {\n      id: \"material\",\n      label: \"Material\",\n    },\n    {\n      id: \"thickness\",\n      label: \"Espesor\",\n    },\n    {\n      id: \"programNumber\",\n      label: \"Nº Programa\",\n    },\n    {\n      id: \"machine\",\n      label: \"Máquina\",\n    },\n    {\n      id: \"duration\",\n      label: \"Tiempo\",\n    },\n    {\n      id: \"date\",\n      label: \"Fecha\",\n    },\n  ];\n\n  return (\n    <>\n      <UserInfoHeader employee={employee} tasks={tasks} />\n      <EnhancedEmployeeTable\n        headCells={headCells}\n        tasks={tasks}\n        isLoading={isLoading}\n        isError={isError}\n      />\n    </>\n  );\n}\n\nexport default EmployeePage;\n","import React from \"react\";\nimport { useParams } from \"react-router-dom\";\n\n// queries\nimport useLoadEmployeeTasksQuery from \"./queries/useLoadEmployeeTasksQuery\";\n\n// components\nimport EmployeePage from \"./EmployeePage\";\n\ninterface IEmployeePageContainerParams {\n  employeeId: string;\n}\n\nfunction EmployeePageContainer() {\n  const { employeeId } = useParams<IEmployeePageContainerParams>();\n\n  const { isLoading, isError, data } = useLoadEmployeeTasksQuery(employeeId);\n\n  return (\n    <>\n      <EmployeePage\n        tasks={data?.employeeTasks}\n        employee={data?.employee}\n        isLoading={isLoading}\n        isError={isError}\n      />\n    </>\n  );\n}\n\nexport default EmployeePageContainer;\n","import { useQuery } from \"react-query\";\nimport { getMachines } from \"../../../mocks/machineRepository\";\n\n// mocks\nimport { getTaskByUserId } from \"../../../mocks/tasksRepository\";\nimport { getUserById } from \"../../../mocks/userRepository\";\n\nexport default function useLoadEmployeeTasksQuery(employeeId: string) {\n  return useQuery(\n    [\"loadEmployeeTasks\", employeeId],\n    async () => {\n      // TODO const {data:employee} = await axios.get(\"/api/employee/${employeeId}\")\n      // TODO const {data:employeeTasks} = await axios.get(\"/api/tasks/employee/${employeeId}\")\n      // TODO const {data:machines} = await axios.get(\"/api/machines\")\n      const employee = getUserById(employeeId);\n      const employeeTasks = getTaskByUserId(employeeId);\n      return { employeeTasks, employee };\n    },\n    {\n      refetchInterval: 60000,\n    }\n  );\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\n// styles\nimport \"./EmployeeCard.scss\";\n\n// types\nimport { TUserResponse } from \"../../../types/employeeTypes\";\n\n// components\nimport { Card, CardActions, CardContent, Typography } from \"@mui/material\";\n\ninterface IEmployeeCardProps {\n  employee: TUserResponse;\n}\n\nfunction EmployeeCard(props: IEmployeeCardProps) {\n  const { employee } = props;\n  return (\n    <Card key={employee._id} className={`employee__card`}>\n      <CardContent>\n        <Typography color=\"textSecondary\" gutterBottom>\n          Cód. empleado: {employee.employerCode}\n        </Typography>\n        <Typography variant=\"h5\" component=\"h2\">\n          {employee.name}\n        </Typography>\n      </CardContent>\n      <CardActions>\n        <Link to={`/employees/${employee._id}`} className=\"employee__link\">\n          Ver Empleado\n        </Link>\n      </CardActions>\n    </Card>\n  );\n}\n\nexport default EmployeeCard;\n","import styled from \"styled-components\";\n\nimport \"./EmployeesListPage.scss\";\n\n// types\nimport { TUserResponse } from \"../../../../types/employeeTypes\";\n\n// components\nimport EmployeeCard from \"../../EmployeeCard/EmployeeCard\";\nimport { CircularProgress } from \"@mui/material\";\n\nconst StyledEmployeePageContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: flex-start;\n  align-items: flex-start;\n  width: 100%;\n`;\n\nconst StyledLoadingWrapper = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 1rem;\n\n  font-size: 1.75rem;\n`;\n\ninterface IEmployeesCardProps {\n  employees: TUserResponse[] | undefined;\n  isLoading: boolean;\n  isError: boolean;\n}\n\nfunction EmployeesListPage(props: IEmployeesCardProps) {\n  const { employees, isLoading, isError } = props;\n  return (\n    <>\n      <div className=\"employees-title\">Lista de empleados</div>\n      <StyledEmployeePageContainer className=\"employees-container\">\n        {isLoading ? (\n          <StyledLoadingWrapper>\n            <CircularProgress />\n            Cargando Datos...\n          </StyledLoadingWrapper>\n        ) : isError ? (\n          <></>\n        ) : (\n          employees &&\n          employees.map((employee) => {\n            return <EmployeeCard key={employee._id} employee={employee} />;\n          })\n        )}\n      </StyledEmployeePageContainer>\n    </>\n  );\n}\nexport default EmployeesListPage;\n","// query\nimport useLoadEmployeesQuery from \"./queries/useLoadEmployeesQuery\";\n// components\nimport EmployeesListPage from \"./components/EmployeesListPage/EmployeesListPage\";\n\nfunction EmployeesListPageContainer() {\n  // getEmployers\n  const { isLoading, isError, data } = useLoadEmployeesQuery();\n\n  return (\n    <>\n      <EmployeesListPage employees={data} isLoading={isLoading} isError={isError} />\n    </>\n  );\n}\n\nexport default EmployeesListPageContainer;\n","import { useQuery } from \"react-query\";\nimport users from \"../../../mocks/users.json\";\n\nexport default function useLoadEmployeesQuery() {\n  return useQuery([\"loadEmployers\"], async () => {\n    // TODO const {data} = await axios.get('/api/users')\n    const data = users;\n\n    return data;\n  });\n}\n","import {\n  Box,\n  CircularProgress,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TablePagination,\n  TableRow,\n} from \"@mui/material\";\nimport React from \"react\";\nimport { maxTableHeight } from \"../../../styles/styleConstants\";\nimport { TTaskResponse } from \"../../../types/taskTypes\";\nimport formatDate from \"../../../utils/formatDate\";\nimport TaskStatus from \"../../TaskStatus/TaskStatus\";\nimport EnhancedTableHead from \"../EnhancedTableHead/EnhancedTableHead\";\nimport { THeadCell } from \"../MUITableTypes\";\n\nimport {\n  StyledLoadingWrapper,\n  StyledTablePageContainer,\n  StyledTableWrapper,\n} from \"../SCMuiTable\";\n\nimport { setTableRowBackgroundColorByPriority } from \"../setTableRowBackgroundColorByPriority\";\n\ninterface IEnhancedTableProps {\n  tasks: TTaskResponse[] | undefined;\n  isLoading: boolean;\n  isError: boolean;\n  headCells: THeadCell[];\n}\n\nexport default function EnhancedFinishedTasksTable(props: IEnhancedTableProps) {\n  const { tasks, headCells, isLoading, isError } = props;\n\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(25);\n\n  const handleChangePage = (event: unknown, newPage: number) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  console.log(tasks);\n\n  return (\n    <StyledTablePageContainer className=\"EnhancedTaskTable\">\n      <StyledTableWrapper className=\"EnhancedTaskTable__container\">\n        <Box sx={{ width: \"100%\" }}>\n          <TableContainer component={Paper} sx={{ maxHeight: maxTableHeight }}>\n            <Table\n              sx={{ minWidth: 750 }}\n              aria-labelledby=\"tableTitle\"\n              size=\"medium\"\n              stickyHeader\n            >\n              <EnhancedTableHead headCells={headCells} />\n              <TableBody>\n                {isLoading ? (\n                  <TableRow>\n                    <TableCell colSpan={999}>\n                      <StyledLoadingWrapper>\n                        <CircularProgress />\n                        Cargando Datos...\n                      </StyledLoadingWrapper>\n                    </TableCell>\n                  </TableRow>\n                ) : isError ? (\n                  <></>\n                ) : (\n                  tasks &&\n                  tasks.map((task, index) => {\n                    return (\n                      <TableRow\n                        key={task._id}\n                        sx={{\n                          \"&:last-child td, &:last-child th\": { border: 0 },\n                        }}\n                        style={setTableRowBackgroundColorByPriority(\n                          task.priority\n                        )}\n                      >\n                        <TableCell\n                          component=\"th\"\n                          scope=\"row\"\n                          align=\"center\"\n                          width={100}\n                        >\n                          {task.taskNumber}\n                        </TableCell>\n                        <TableCell align=\"center\">\n                          {task.machine.name}\n                        </TableCell>\n                        <TableCell align=\"center\">{task.material}</TableCell>\n                        <TableCell align=\"center\">{task.thickness}</TableCell>\n                        <TableCell align=\"center\">\n                          {task.programNumber}\n                        </TableCell>\n                        <TableCell align=\"center\">\n                          {task.user.employerCode}\n                        </TableCell>\n                        <TableCell align=\"center\">\n                          {task.duration} min\n                        </TableCell>\n                        <TableCell align=\"center\">\n                          {formatDate(task.end)}\n                        </TableCell>\n                      </TableRow>\n                    );\n                  })\n                )}\n              </TableBody>\n            </Table>\n          </TableContainer>\n          {!isLoading && tasks && (\n            <TablePagination\n              rowsPerPageOptions={[25, 50, 75, 100]}\n              component=\"div\"\n              count={tasks.length}\n              rowsPerPage={rowsPerPage}\n              page={page}\n              onPageChange={handleChangePage}\n              onRowsPerPageChange={handleChangeRowsPerPage}\n            />\n          )}\n        </Box>\n      </StyledTableWrapper>\n    </StyledTablePageContainer>\n  );\n}\n","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nimport ArrowBackIcon from \"@mui/icons-material/ArrowBack\";\nimport IconButton from \"@mui/material/IconButton\";\n\nimport { ROUTE_MACHINES } from \"../../../routes/routes\";\nimport { TTaskResponse } from \"../../../types/taskTypes\";\nimport { calculateMachineGeneralValues } from \"../../../utils/calculateMachineGeneralValues\";\nimport {\n  StyledTableHeaderInfoWrapper,\n  StyledTableHeaderWrapper,\n} from \"../../../StyledComponents/StyledTableHeader\";\nimport TableHeaderInfoCard from \"../../../components/TableHeaderInfoCard/TableHeaderInfoCard\";\nimport { calculateTotalTime } from \"../../../utils/calculateTotalTime\";\n\nconst StyledFlexGrow = styled.div`\n  flex: 1;\n`;\n\nconst StyledTableHeaderName = styled.p`\n  margin-left: 0.5rem;\n  font-size: 1.5rem;\n  justify-self: flex-start;\n`;\n\ninterface IFinishedTasksInfoHeaderProps {\n  tasks: TTaskResponse[] | undefined;\n}\n\nfunction FinishedTasksInfoHeader(props: IFinishedTasksInfoHeaderProps) {\n  const { tasks } = props;\n\n  const tasksData = calculateMachineGeneralValues(tasks);\n  const history = useHistory();\n\n  return (\n    <StyledTableHeaderWrapper className=\"user-data-table-container\">\n      <StyledTableHeaderInfoWrapper className=\"user-data-table\">\n        <IconButton\n          onClick={() => history.push(ROUTE_MACHINES)}\n          aria-label=\"goBack\"\n        >\n          <ArrowBackIcon />\n        </IconButton>\n        <StyledTableHeaderName>Programas finalizados</StyledTableHeaderName>\n        <StyledFlexGrow />\n        <TableHeaderInfoCard\n          machine1Tasks={tasksData.machine1.activeTasks as number}\n          machine1TimeToFinish={tasksData.machine1.timeToFinish as number}\n          machine2Tasks={tasksData.machine2.activeTasks as number}\n          machine2TimeToFinish={tasksData.machine2.timeToFinish as number}\n          totalTasks={tasks?.length as number}\n          totalTimeToFinish={calculateTotalTime(tasks)}\n        />\n      </StyledTableHeaderInfoWrapper>\n    </StyledTableHeaderWrapper>\n  );\n}\n\nexport default FinishedTasksInfoHeader;\n","import EnhancedFinishedTasksTable from \"../../components/MUITable/EnhancedFinishedTasksTable/EnhancedFinishedTasksTable\";\nimport { THeadCell } from \"../../components/MUITable/MUITableTypes\";\nimport { TTaskResponse } from \"../../types/taskTypes\";\nimport FinishedTasksInfoHeader from \"./components/FinishedTasksInfoHeader\";\n\ninterface IFinishedTasksPageProps {\n  tasks: TTaskResponse[] | undefined;\n  isLoading: boolean;\n  isError: boolean;\n  handleTaskClick?: (taskId: string) => void;\n}\n\nfunction FinishedTasksPage(props: IFinishedTasksPageProps) {\n  const { tasks, isLoading, isError } = props;\n\n  const headCells: THeadCell[] = [\n    {\n      id: \"taskNumber\",\n      label: \"Nº Tarea\",\n    },\n    {\n      id: \"machine\",\n      label: \"Máquina\",\n    },\n    {\n      id: \"material\",\n      label: \"Material\",\n    },\n    {\n      id: \"thickness\",\n      label: \"Espesor\",\n    },\n    {\n      id: \"programNumber\",\n      label: \"Nº Programa\",\n    },\n    {\n      id: \"employerCode\",\n      label: \"Técnico\",\n    },\n    {\n      id: \"duration\",\n      label: \"Tiempo\",\n    },\n    {\n      id: \"date\",\n      label: \"Fecha\",\n    },\n  ];\n\n  return (\n    <>\n      <FinishedTasksInfoHeader tasks={tasks} />\n      <EnhancedFinishedTasksTable\n        headCells={headCells}\n        tasks={tasks}\n        isLoading={isLoading}\n        isError={isError}\n      />\n    </>\n  );\n}\n\nexport default FinishedTasksPage;\n","import FinishedTasksPage from \"./FinishedTasksPage\";\nimport useFinisedTasksQuery from \"./queries/useLoadFinishedTasksQuery\";\n\nfunction FinishedTasksPageContainer() {\n  const { isLoading, isError, data } = useFinisedTasksQuery();\n\n  function handleTaskClick(taskId: string) {\n    console.log(\"hola\");\n  }\n\n  return (\n    <>\n      <FinishedTasksPage tasks={data} isLoading={isLoading} isError={isError} />\n    </>\n  );\n}\n\nexport default FinishedTasksPageContainer;\n","import { useQuery } from \"react-query\";\nimport { getMachines } from \"../../../mocks/machineRepository\";\n\nimport { getFinishedTasks } from \"../../../mocks/tasksRepository\";\nimport { TMachineResponse } from \"../../../types/machineTypes\";\n\nfunction getMachineNameById(machines: TMachineResponse[], machineId: string) {\n  const machine = machines.find((machine) => machine._id === machineId);\n\n  return machine ? machine.name : \"\";\n}\n\nexport default function useFinisedTasksQuery() {\n  // el useQuery reb un array amb el nom de la \"action\" i les variables que si canvien torna a executar\n  return useQuery(\n    [\"loadFinishedTasks\"],\n    async () => {\n      // TODO: const {data: tasks} = await axios.get('/api/tasks/finished}')\n      const tasks = getFinishedTasks();\n\n      return tasks;\n    },\n    {\n      refetchInterval: 60000,\n    }\n  );\n}\n","export const ERROR_MESSAGE_INVALID_CREDENTIALS = (userCode: string) =>\n  `No existe un empleado con el código de empleado: ${userCode}.`;\n","import { Dispatch } from \"redux\";\nimport {\n  LOGIN_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_LOADING,\n  LOGOUT,\n} from \"./actionTypes\";\n\n// mocks\nimport { getUserByCode } from \"../../mocks/userRepository\";\nimport { TUserResponse } from \"../../types/employeeTypes\";\nimport { ERROR_MESSAGE_INVALID_CREDENTIALS } from \"../../constants/errorMessages\";\n\ntype TLoginLoadingAction = {\n  type: typeof LOGIN_LOADING;\n};\n\ntype TLogoutAction = {\n  type: typeof LOGOUT;\n};\n\nexport type TAuthActions =\n  | TLoginLoadingAction\n  | TLogoutAction\n  | {\n      type: typeof LOGIN_SUCCESS;\n      payload: { user: TUserResponse };\n    }\n  | {\n      type: typeof LOGIN_ERROR;\n      payload: { errorMessage: string };\n    };\n\nexport function loginLoading() {\n  return {\n    type: LOGIN_LOADING,\n  };\n}\n\nexport function loginSuccess(user: TUserResponse | undefined) {\n  return {\n    type: LOGIN_SUCCESS,\n    payload: { user },\n  };\n}\n\nexport function loginError(errorMessage: string) {\n  return {\n    type: LOGIN_ERROR,\n    payload: { errorMessage },\n  };\n}\n\nexport function login(userCode: string) {\n  return async (dispatch: Dispatch) => {\n    try {\n      dispatch(loginLoading());\n      // TODO: const {data} = await axios.get('/api/user/employerCode/${userCode')\n      const data = await getUserByCode(userCode);\n\n      if (data) {\n        localStorage.setItem(\"user\", JSON.stringify(data));\n        dispatch(loginSuccess(data));\n      } else {\n        dispatch(loginError(ERROR_MESSAGE_INVALID_CREDENTIALS(userCode)));\n      }\n    } catch (error: any) {\n      if (error.response) {\n        dispatch(loginError(error.response.message));\n      } else {\n        dispatch(loginError(error.message));\n      }\n    }\n  };\n}\n\nexport function logout() {\n  localStorage.removeItem(\"user\");\n\n  return {\n    type: LOGOUT,\n  };\n}\n","import { List, ListItem, ListItemIcon, ListItemText } from \"@mui/material\";\n\nimport AssignmentTurnedInIcon from \"@mui/icons-material/AssignmentTurnedIn\";\nimport PrecisionManufacturingIcon from \"@mui/icons-material/PrecisionManufacturing\";\nimport PeopleIcon from \"@mui/icons-material/People\";\nimport StoreIcon from \"@mui/icons-material/Store\";\nimport { ListItemButton } from \"@mui/material\";\nimport Avatar from \"@mui/material/Avatar\";\nimport { NavLink, useHistory } from \"react-router-dom\";\nimport LogoutIcon from \"@mui/icons-material/Logout\";\nimport { useDispatch } from \"react-redux\";\nimport SettingsIcon from \"@mui/icons-material/Settings\";\nimport \"./LeftMenu.scss\";\nimport {\n  ROUTE_ADMIN_PROFILE,\n  ROUTE_EMPLOYEES,\n  ROUTE_FINISHEDTASKS,\n  ROUTE_LOGIN,\n  ROUTE_MACHINES,\n  ROUTE_MACHINES_NAME_FACTORY,\n} from \"../../routes/routes\";\nimport { MACHINE_1, MACHINE_2 } from \"../../constants/machineNames\";\nimport { logout } from \"../../redux/actions/authActions\";\n\nfunction LeftMenu() {\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  return (\n    <div className=\"left-menu\">\n      <div className=\"left-menu__header\">\n        <Avatar>CRC</Avatar>\n        {/* TODO: Display del username */}\n      </div>\n      <nav className=\"left-menu__nav\">\n        <List>\n          <ListItem disableGutters>\n            <NavLink\n              activeClassName=\"left-menu__nav-item--active\"\n              to={ROUTE_MACHINES}\n              className=\"left-menu__nav-item\"\n            >\n              <ListItemButton>\n                <ListItemIcon>\n                  <StoreIcon />\n                </ListItemIcon>\n                <ListItemText primary=\"Maquinas\" />\n              </ListItemButton>\n            </NavLink>\n          </ListItem>\n          <List component=\"div\" disablePadding>\n            <NavLink\n              activeClassName=\"left-menu__nav-item--active\"\n              to={ROUTE_MACHINES_NAME_FACTORY(MACHINE_1)}\n              className=\"left-menu__nav-item\"\n            >\n              <ListItemButton sx={{ pl: 5 }}>\n                <ListItemIcon>\n                  <PrecisionManufacturingIcon />\n                </ListItemIcon>\n                <ListItemText primary=\"Maquina 1\" />\n              </ListItemButton>\n            </NavLink>\n            <NavLink\n              activeClassName=\"left-menu__nav-item--active\"\n              to={ROUTE_MACHINES_NAME_FACTORY(MACHINE_2)}\n              className=\"left-menu__nav-item\"\n            >\n              <ListItemButton sx={{ pl: 5 }}>\n                <ListItemIcon>\n                  <PrecisionManufacturingIcon />\n                </ListItemIcon>\n                <ListItemText primary=\"Maquina 2\" />\n              </ListItemButton>\n            </NavLink>\n          </List>\n\n          <ListItem disableGutters>\n            <NavLink\n              activeClassName=\"left-menu__nav-item--active\"\n              to={ROUTE_EMPLOYEES}\n              className=\"left-menu__nav-item\"\n            >\n              <ListItemButton>\n                <ListItemIcon>\n                  <PeopleIcon />\n                </ListItemIcon>\n                <ListItemText primary=\"Lista de técnicos\" />\n              </ListItemButton>\n            </NavLink>\n          </ListItem>\n\n          <ListItem disableGutters>\n            <NavLink\n              activeClassName=\"left-menu__nav-item--active\"\n              to={ROUTE_FINISHEDTASKS}\n              className=\"left-menu__nav-item\"\n            >\n              <ListItemButton>\n                <ListItemIcon>\n                  <AssignmentTurnedInIcon />\n                </ListItemIcon>\n                <ListItemText primary=\"Programas Terminados\" />\n              </ListItemButton>\n            </NavLink>\n          </ListItem>\n\n          <ListItem disableGutters>\n            <NavLink\n              activeClassName=\"left-menu__nav-item--active\"\n              to={ROUTE_ADMIN_PROFILE}\n              className=\"left-menu__nav-item\"\n            >\n              <ListItemButton>\n                <ListItemIcon>\n                  <SettingsIcon />\n                </ListItemIcon>\n                <ListItemText primary=\"Zona Admin\" />\n              </ListItemButton>\n            </NavLink>\n          </ListItem>\n        </List>\n        <div className=\"flex-grow\"></div>\n\n        <ListItem\n          disableGutters\n          className=\"left-menu__nav-item left-menu__nav-item--bottom\"\n        >\n          <ListItemButton\n            onClick={() => {\n              dispatch(logout());\n              history.replace(\"/\");\n            }}\n          >\n            <ListItemIcon>\n              <LogoutIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"Salir\" />\n          </ListItemButton>\n        </ListItem>\n      </nav>\n    </div>\n  );\n}\n\nexport default LeftMenu;\n","import React from \"react\";\nimport LeftMenu from \"../LeftMenu/LeftMenu\";\nimport \"./Layout.scss\";\n\ninterface ILayoutProps {\n  children: React.ReactNode;\n}\n\nfunction Layout(props: ILayoutProps) {\n  const { children } = props;\n\n  return (\n    <div className=\"layout\">\n      <div className=\"layout__menu-container\">\n        <LeftMenu />\n      </div>\n      <div className=\"layout__content\">{children}</div>\n    </div>\n  );\n}\n\nexport default Layout;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router\";\n\n// actions\nimport { login } from \"../../redux/actions/authActions\";\n\n// styles\nimport styled from \"styled-components\";\nimport \"./LoginPage.scss\";\n\nimport {\n  Grid,\n  Paper,\n  Avatar,\n  TextField,\n  CircularProgress,\n  Button,\n} from \"@mui/material\";\n\nimport LoginIcon from \"@mui/icons-material/Login\";\nimport { TInitialState } from \"../../redux/store/initialState\";\n\nconst StyledLoadingWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100vw;\n  height: 100vh;\n\n  .MuiPaper-root {\n    padding: 3rem 1.25rem;\n    width: 17rem;\n  }\n\n  .MuiGrid-root {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n  }\n  .MuiAvatar-root {\n    margin-bottom: 1rem;\n    background-color: #1bbd7e;\n  }\n  .MuiFormControl-root {\n    margin-bottom: 1rem;\n    margin-top: 1rem;\n  }\n  .MuiButton-root {\n    margin-top: 1rem;\n  }\n`;\n\nfunction LoginPage() {\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const { loginLoading, loginError, user } = useSelector(\n    (state: TInitialState) => state.authReducer\n  );\n\n  const valueRef = useRef<HTMLInputElement>(null);\n  const [warningMessage, setWarningMessage] = useState(\"\");\n\n  useEffect(() => {\n    if (user) {\n      history.replace(\"/machines\");\n    }\n    if (loginError) {\n      setWarningMessage(loginError);\n    }\n  }, [user, loginError]);\n\n  function handleLogInClick() {\n    if (valueRef.current) {\n      dispatch(login(valueRef.current.value));\n    }\n  }\n\n  function handleKeyUp(event: React.KeyboardEvent) {\n    if (event.key === \"Enter\") {\n      handleLogInClick();\n    }\n  }\n\n  return (\n    <StyledLoadingWrapper>\n      <Grid>\n        <Paper elevation={10}>\n          <Grid>\n            <Avatar>\n              <LoginIcon />\n            </Avatar>\n            <h2>Login</h2>\n          </Grid>\n          <TextField\n            label=\"Código de empleado\"\n            placeholder=\"Entra el código de empleado\"\n            variant=\"standard\"\n            fullWidth\n            required\n            inputRef={valueRef}\n            onKeyUp={handleKeyUp}\n          />\n          {loginLoading && <CircularProgress />}\n          <small className=\"form__warningMessage\">{warningMessage}</small>\n\n          <Button variant=\"contained\" fullWidth onClick={handleLogInClick}>\n            login\n          </Button>\n        </Paper>\n      </Grid>\n    </StyledLoadingWrapper>\n  );\n}\n\nexport default LoginPage;\n","import { Button } from \"@mui/material\";\n\ninterface IFinishTaskButtonProps {\n  taskId: string;\n  programNumber: string;\n  openFinishedTaskDialog: (programNumber: string) => void;\n}\n\nfunction FinishTaskButton(props: IFinishTaskButtonProps) {\n  const { taskId, programNumber, openFinishedTaskDialog } = props;\n\n  function handleClick() {\n    openFinishedTaskDialog(taskId);\n  }\n\n  return (\n    <>\n      <Button variant=\"contained\" disableElevation onClick={handleClick}>\n        Finalizar\n      </Button>\n    </>\n  );\n}\n\nexport default FinishTaskButton;\n","import {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  Grid,\n  TextField,\n} from \"@mui/material\";\n\nimport React, { useState } from \"react\";\nimport { saveFinishedTask } from \"../../../mocks/tasksRepository\";\nimport { useDispatch } from \"react-redux\";\nimport { forceRender } from \"../../../redux/actions/mainActions\";\n\nconst initialState = {\n  taskId: \"\",\n  isAcceptButtonActive: false,\n};\n\nexport default function useFinishTaskDialog() {\n  const dispatch = useDispatch();\n\n  const [isFinishTaskDialogOpen, setIsFinishTaskDialogOpen] = useState(false);\n\n  const [finishTaskDialogState, setFinishTaskDialogState] =\n    useState(initialState);\n\n  function handleFinishTaskDialogOpen(taskId: string) {\n    setIsFinishTaskDialogOpen(true);\n    setFinishTaskDialogState({\n      ...finishTaskDialogState,\n      taskId,\n      isAcceptButtonActive: false,\n    });\n  }\n\n  function handleFinishTaskDialogClose() {\n    setIsFinishTaskDialogOpen(false);\n  }\n\n  function handleEmployeeCodeChange({ target }: any) {\n    let hasValue = false;\n    if (target.value) {\n      hasValue = true;\n    }\n\n    setFinishTaskDialogState((prevState) => ({\n      ...prevState,\n      isAcceptButtonActive: hasValue,\n    }));\n  }\n\n  function handleAccept() {\n    // TODO: Dispatch de la action que comprova si existeix el employeeCode i l'asigna i finalitza.\n    saveFinishedTask(finishTaskDialogState.taskId);\n    setIsFinishTaskDialogOpen(false);\n    dispatch(forceRender());\n  }\n\n  const FinishTaskDialog = (\n    <Dialog\n      open={isFinishTaskDialogOpen}\n      onClose={handleFinishTaskDialogClose}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n    >\n      <DialogTitle id=\"alert-dialog-title\">\n        {\"Confirmación finalizar programa\"}\n      </DialogTitle>\n      <DialogContent>\n        <DialogContentText id=\"alert-dialog-description\">\n           Introduce tu código de empleado para finalizar el programa:\n        </DialogContentText>\n        <Grid container>\n          <Grid item xs={8}>\n            <TextField\n              variant=\"outlined\"\n              label=\"Cód. Empleado\"\n              placeholder=\"Código de empleado\"\n              fullWidth\n              sx={{ marginTop: \"1rem\" }}\n              onChange={handleEmployeeCodeChange}\n            />\n          </Grid>\n        </Grid>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleFinishTaskDialogClose}>Cancelar</Button>\n        <Button\n          onClick={handleAccept}\n          autoFocus\n          variant=\"contained\"\n          disabled={finishTaskDialogState.isAcceptButtonActive ? false : true}\n        >\n          Finalizar programa\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n\n  return {\n    FinishTaskDialog,\n    handleFinishTaskDialogOpen,\n    handleFinishTaskDialogClose,\n  };\n}\n","import {\n  Box,\n  CircularProgress,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TablePagination,\n  TableRow,\n} from \"@mui/material\";\nimport React, { useState } from \"react\";\nimport { TTaskResponse } from \"../../../types/taskTypes\";\nimport EnhancedTableHead from \"../EnhancedTableHead/EnhancedTableHead\";\nimport { THeadCell } from \"../MUITableTypes\";\n\nimport FinishTaskButton from \"../../../pages/MachinePage/components/FinishTaskButton/FinishTaskButton\";\nimport useFinishTaskDialog from \"../../../pages/MachinePage/hooks/useFinishTaskDialog\";\n\nimport {\n  StyledLoadingWrapper,\n  StyledTablePageContainer,\n  StyledTableWrapper,\n} from \"../SCMuiTable\";\n\nimport { setTableRowBackgroundColorByPriority } from \"../setTableRowBackgroundColorByPriority\";\nimport { maxTableHeight } from \"../../../styles/styleConstants\";\n\ninterface IEnhancedTableProps {\n  tasks: TTaskResponse[] | undefined;\n  isLoading: boolean;\n  isError: boolean;\n  headCells: THeadCell[];\n}\n\nexport default function EnhancedTaksTable(props: IEnhancedTableProps) {\n  const { tasks, headCells, isLoading, isError } = props;\n\n  const {\n    FinishTaskDialog,\n    handleFinishTaskDialogOpen,\n    handleFinishTaskDialogClose,\n  } = useFinishTaskDialog();\n\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(25);\n\n  const handleChangePage = (event: unknown, newPage: number) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  return (\n    <StyledTablePageContainer className=\"EnhancedTaskTable\">\n      <StyledTableWrapper className=\"EnhancedTaskTable__container\">\n        <Box sx={{ width: \"100%\" }}>\n          <TableContainer component={Paper} sx={{ maxHeight: maxTableHeight }}>\n            <Table\n              sx={{ minWidth: 750 }}\n              aria-labelledby=\"tableTitle\"\n              size=\"medium\"\n              stickyHeader\n            >\n              <EnhancedTableHead headCells={headCells} />\n              <TableBody>\n                {isLoading ? (\n                  <TableRow>\n                    <TableCell colSpan={999}>\n                      <StyledLoadingWrapper>\n                        <CircularProgress />\n                        Cargando Datos...\n                      </StyledLoadingWrapper>\n                    </TableCell>\n                  </TableRow>\n                ) : isError ? (\n                  <></>\n                ) : (\n                  tasks &&\n                  tasks.map((task, index) => {\n                    return (\n                      <TableRow\n                        key={task._id}\n                        sx={{\n                          \"&:last-child td, &:last-child th\": { border: 0 },\n                        }}\n                        style={setTableRowBackgroundColorByPriority(\n                          task.priority\n                        )}\n                      >\n                        <TableCell\n                          component=\"th\"\n                          scope=\"row\"\n                          align=\"center\"\n                          width={100}\n                        >\n                          {task.taskNumber}\n                        </TableCell>\n                        <TableCell align=\"center\">{task.material}</TableCell>\n                        <TableCell align=\"center\">{task.thickness}</TableCell>\n                        <TableCell align=\"center\">\n                          {task.programNumber}\n                        </TableCell>\n                        <TableCell align=\"center\">\n                          {task.user.employerCode}\n                        </TableCell>\n                        <TableCell align=\"center\">\n                          {task.duration} min\n                        </TableCell>\n                        <TableCell align=\"center\">\n                          <FinishTaskButton\n                            taskId={task._id}\n                            programNumber={task.programNumber}\n                            openFinishedTaskDialog={handleFinishTaskDialogOpen}\n                          />\n                        </TableCell>\n                      </TableRow>\n                    );\n                  })\n                )}\n              </TableBody>\n            </Table>\n          </TableContainer>\n          {!isLoading && tasks && (\n            <TablePagination\n              rowsPerPageOptions={[25, 50, 75, 100]}\n              component=\"div\"\n              count={tasks.length}\n              rowsPerPage={rowsPerPage}\n              page={page}\n              onPageChange={handleChangePage}\n              onRowsPerPageChange={handleChangeRowsPerPage}\n            />\n          )}\n        </Box>\n      </StyledTableWrapper>\n      {FinishTaskDialog}\n    </StyledTablePageContainer>\n  );\n}\n","import { TTaskResponse } from \"../types/taskTypes\";\n\nexport function sortTasksByPriority(tasks: TTaskResponse[] | undefined) {\n  return tasks ? tasks.sort((a, b) => b.priority - a.priority) : undefined;\n}\n","import React from \"react\";\n\nimport { useHistory } from \"react-router-dom\";\nimport { Button, IconButton } from \"@mui/material\";\nimport ArrowBackIcon from \"@mui/icons-material/ArrowBack\";\nimport styled from \"styled-components\";\nimport { ROUTE_MACHINES } from \"../../../../routes/routes\";\nimport {\n  StyledFlexGrow,\n  StyledTableHeaderInfoWrapper,\n  StyledTableHeaderWrapper,\n} from \"../../../../StyledComponents/StyledTableHeader\";\nimport { useDispatch } from \"react-redux\";\nimport {\n  setCreateTaskModalSelectedMachine,\n  setIsCreateTaskModalOpen,\n} from \"../../../../redux/actions/mainActions\";\nimport { MACHINE_1, MACHINE_2 } from \"../../../../constants/machineNames\";\n\nconst StyledTableHeaderName = styled.p`\n  margin: 0 0.5rem;\n  font-size: 1.25rem;\n  width: 6.25rem;\n`;\n\nconst StyledTableHeaderInfo = styled.p`\n  width: 22rem;\n  margin-left: 1.5rem;\n  text-align: center;\n  font-size: 1.75rem;\n`;\n\ninterface IMachineInfoHeaderProps {\n  machineName: typeof MACHINE_1 | typeof MACHINE_2;\n  activeOrders: number;\n  timeToFinish: number;\n}\n\nfunction MachineInfoHeader(props: IMachineInfoHeaderProps) {\n  const { machineName, activeOrders, timeToFinish } = props;\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  function handleNewTaskClick(machine: string) {\n    dispatch(setCreateTaskModalSelectedMachine(machine));\n    dispatch(setIsCreateTaskModalOpen(true));\n  }\n\n  return (\n    <StyledTableHeaderWrapper className=\"user-data-table-container\">\n      <IconButton\n        onClick={() => history.push(ROUTE_MACHINES)}\n        aria-label=\"goBack\"\n      >\n        <ArrowBackIcon />\n      </IconButton>\n      <StyledTableHeaderInfoWrapper>\n        <StyledTableHeaderName className=\"user-data-table__info--name\">\n          {machineName === \"máquina1\" ? \"Máquina 1\" : \"Máquina 2\"}\n        </StyledTableHeaderName>\n        <StyledTableHeaderInfo className=\"user-data-table__info\">\n          Programas activos: {activeOrders}\n        </StyledTableHeaderInfo>\n        <StyledTableHeaderInfo className=\"user-data-table__info\">\n          Tiempo restante: {timeToFinish} min\n        </StyledTableHeaderInfo>\n      </StyledTableHeaderInfoWrapper>\n      <StyledFlexGrow />\n      <Button\n        variant=\"contained\"\n        color=\"secondary\"\n        onClick={() => {\n          handleNewTaskClick(machineName);\n        }}\n      >\n        Nuevo programa\n      </Button>\n    </StyledTableHeaderWrapper>\n  );\n}\n\nexport default MachineInfoHeader;\n","import EnhancedTaksTable from \"../../components/MUITable/EnhancedTasksTable/EnhancedTasksTable\";\nimport { THeadCell } from \"../../components/MUITable/MUITableTypes\";\nimport { MACHINE_1, MACHINE_2 } from \"../../constants/machineNames\";\nimport { TTaskResponse } from \"../../types/taskTypes\";\nimport { calculateTotalTime } from \"../../utils/calculateTotalTime\";\n\nimport { sortTasksByPriority } from \"../../utils/sortTasksByPriority\";\nimport MachineInfoHeader from \"./components/MachineInfoHeader/MachineInfoHeader\";\n\ninterface IMachinePageProps {\n  tasks: TTaskResponse[] | undefined;\n  isLoading: boolean;\n  isError: boolean;\n  machineName: typeof MACHINE_1 | typeof MACHINE_2;\n  handleTaskClick?: (taskId: string) => void;\n}\n\nfunction MachinePage(props: IMachinePageProps) {\n  const { tasks, isLoading, isError, machineName } = props;\n\n  const headCells: THeadCell[] = [\n    {\n      id: \"taskNumber\",\n      label: \"Nº Tarea\",\n    },\n    {\n      id: \"material\",\n      label: \"Material\",\n    },\n    {\n      id: \"thickness\",\n      label: \"Espesor\",\n    },\n    {\n      id: \"programNumber\",\n      label: \"Nº Programa\",\n    },\n    {\n      id: \"employerCode\",\n      label: \"Técnico\",\n    },\n    {\n      id: \"duration\",\n      label: \"Tiempo\",\n    },\n    {\n      id: \"actions\",\n      label: \"Acciones\",\n    },\n  ];\n\n  return (\n    <>\n      <MachineInfoHeader\n        machineName={machineName}\n        activeOrders={tasks?.length || 0}\n        timeToFinish={calculateTotalTime(tasks)}\n      />\n      <EnhancedTaksTable\n        headCells={headCells}\n        tasks={sortTasksByPriority(tasks)}\n        isLoading={isLoading}\n        isError={isError}\n      />\n    </>\n  );\n}\n\nexport default MachinePage;\n","import machines from \"./machines.json\";\n\nexport function getMachineByName(machineName: string) {\n  console.log(\"getname\", machineName);\n\n  return machines.find((machine) => machine.name === machineName);\n}\n\nexport function getMachines() {\n  return machines;\n}\n","import { useParams } from \"react-router-dom\";\nimport MachinePage from \"./MachinePage\";\nimport useLoadMachineTasksQuery from \"./queries/useLoadMachineTasksQuery\";\nimport { useSelector } from \"react-redux\";\nimport { MACHINE_1, MACHINE_2 } from \"../../constants/machineNames\";\n\ninterface IMachinePageContainerParams {\n  machineName: typeof MACHINE_1 | typeof MACHINE_2;\n}\n\nfunction MachinePageContainer() {\n  const { forceRender } = useSelector((state: any) => state.mainReducer);\n\n  const { machineName } = useParams<IMachinePageContainerParams>();\n\n  const { isLoading, isError, data } = useLoadMachineTasksQuery(\n    machineName,\n    forceRender\n  );\n\n  function handleTaskClick(taskId: string) {\n    console.log(\"hola\");\n  }\n\n  return (\n    <>\n      <MachinePage\n        machineName={machineName}\n        tasks={data}\n        handleTaskClick={handleTaskClick}\n        isLoading={isLoading}\n        isError={isError}\n      />\n    </>\n  );\n}\n\nexport default MachinePageContainer;\n","import { useQuery } from \"react-query\";\n\n// Mocks\nimport { getTaskByMachineId } from \"../../../mocks/tasksRepository\";\nimport { getMachineByName } from \"../../../mocks/machineRepository\";\n\nexport default function useLoadMachineTasksQuery(\n  machineName: string,\n  forceRender: number\n) {\n  // el useQuery reb un array amb el nom de la \"action\" i les variables que si canvien torna a executar\n  return useQuery(\n    [\"loadMachineTasks\", machineName, forceRender],\n    async () => {\n      // TODO: const machine = await axios.get('/api/machine/name/${machineName}')\n\n      const machine = getMachineByName(machineName);\n\n      // TODO: const {data} = await axios.get('/api/tasks/${machineName}')\n      if (machine) {\n        const data = getTaskByMachineId(machine._id);\n\n        return data;\n      }\n    },\n    {\n      refetchInterval: 60000,\n    }\n  );\n}\n","import {\n  Box,\n  CircularProgress,\n  Paper,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TablePagination,\n  TableRow,\n} from \"@mui/material\";\nimport React, { useState } from \"react\";\nimport { TTaskResponse } from \"../../../types/taskTypes\";\nimport EnhancedTableHead from \"../EnhancedTableHead/EnhancedTableHead\";\nimport { THeadCell } from \"../MUITableTypes\";\n\nimport FinishTaskButton from \"../../../pages/MachinePage/components/FinishTaskButton/FinishTaskButton\";\nimport useFinishTaskDialog from \"../../../pages/MachinePage/hooks/useFinishTaskDialog\";\n\nimport {\n  StyledLoadingWrapper,\n  StyledTableWrapper,\n  StyledTablePageContainer,\n} from \"../SCMuiTable\";\n\nimport { setTableRowBackgroundColorByPriority } from \"../setTableRowBackgroundColorByPriority\";\nimport { maxTableHeight } from \"../../../styles/styleConstants\";\n\ninterface IEnhancedTableProps {\n  tasks: TTaskResponse[] | undefined;\n\n  headCells: THeadCell[];\n}\n\nexport default function EnhancedTaksTable(props: IEnhancedTableProps) {\n  const { tasks, headCells } = props;\n\n  const {\n    FinishTaskDialog,\n    handleFinishTaskDialogOpen,\n    handleFinishTaskDialogClose,\n  } = useFinishTaskDialog();\n\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(25);\n\n  const handleChangePage = (event: unknown, newPage: number) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  return (\n    <StyledTablePageContainer className=\"EnhancedTaskTable\">\n      <StyledTableWrapper className=\"EnhancedTaskTable__container\">\n        <Box sx={{ width: \"100%\" }}>\n          <TableContainer component={Paper} sx={{ maxHeight: maxTableHeight }}>\n            <Table aria-labelledby=\"tableTitle\" size=\"medium\" stickyHeader>\n              <EnhancedTableHead headCells={headCells} />\n              <TableBody>\n                {tasks &&\n                  tasks.map((task, index) => {\n                    return (\n                      <TableRow\n                        key={task._id}\n                        sx={{\n                          \"&:last-child td, &:last-child th\": { border: 0 },\n                        }}\n                        style={setTableRowBackgroundColorByPriority(\n                          task.priority\n                        )}\n                      >\n                        <TableCell\n                          component=\"th\"\n                          scope=\"row\"\n                          align=\"center\"\n                          width={100}\n                        >\n                          {task.taskNumber}\n                        </TableCell>\n                        <TableCell align=\"center\">\n                          {task.programNumber}\n                        </TableCell>\n                        <TableCell align=\"center\">\n                          {task.duration} min\n                        </TableCell>\n                        <TableCell align=\"center\">\n                          <FinishTaskButton\n                            taskId={task._id}\n                            programNumber={task.programNumber}\n                            openFinishedTaskDialog={handleFinishTaskDialogOpen}\n                          />\n                        </TableCell>\n                      </TableRow>\n                    );\n                  })}\n              </TableBody>\n            </Table>\n          </TableContainer>\n          {tasks && (\n            <TablePagination\n              rowsPerPageOptions={[25, 50, 75, 100]}\n              component=\"div\"\n              count={tasks.length}\n              rowsPerPage={rowsPerPage}\n              page={page}\n              onPageChange={handleChangePage}\n              onRowsPerPageChange={handleChangeRowsPerPage}\n            />\n          )}\n        </Box>\n      </StyledTableWrapper>\n      {FinishTaskDialog}\n    </StyledTablePageContainer>\n  );\n}\n","import styled from \"styled-components\";\n\nexport const StyledMachinesHomePageWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: flex-start;\n`;\n\nexport const StyledMachinesHomePageLoadingWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  padding-top: 1.5rem;\n  font-size: 1.5rem;\n  color: white;\n\n  .MuiCircularProgress-root {\n    margin-right: 1rem;\n  }\n`;\n\nexport const StyledTableWrapper = styled.div`\n  width: 49%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const StyledTableHeaderWrapper = styled.div`\n  padding: 1rem 0;\n  display: flex;\n  justify-content: space-between;\n  width: 100%;\n\n  .flex-grow {\n    flex: 1;\n  }\n\n  .machines-home-page__machine-title {\n    font-size: 1.75rem;\n    color: white;\n  }\n\n  .machines__header-actions {\n    display: flex;\n    justify-content: flex-end;\n  }\n`;\n","import { CircularProgress, Button } from \"@mui/material\";\nimport LiteTasksTable from \"../../components/MUITable/LiteTasksTable/LiteTasksTable\";\nimport { THeadCell } from \"../../components/MUITable/MUITableTypes\";\n\nimport { useDispatch } from \"react-redux\";\nimport { sortTasksByPriority } from \"../../utils/sortTasksByPriority\";\nimport { TMachinesHomeTasks } from \"./MachinesHomePageTypes\";\nimport {\n  StyledMachinesHomePageLoadingWrapper,\n  StyledMachinesHomePageWrapper,\n  StyledTableHeaderWrapper,\n  StyledTableWrapper,\n} from \"./SCMachinesHomePage\";\nimport {\n  setCreateTaskModalSelectedMachine,\n  setIsCreateTaskModalOpen,\n} from \"../../redux/actions/mainActions\";\nimport { MACHINE_1, MACHINE_2 } from \"../../constants/machineNames\";\n\ninterface IMachinePageProps {\n  tasks: TMachinesHomeTasks | undefined;\n  isLoading: boolean;\n  isError: boolean;\n  handleTaskClick?: (taskId: string) => void;\n}\n\nfunction MachinesHomePage(props: IMachinePageProps) {\n  const { tasks, isLoading, isError } = props;\n\n  const dispatch = useDispatch();\n\n  const headCells: THeadCell[] = [\n    {\n      id: \"taskNumber\",\n      label: \"Nº Tarea\",\n    },\n    {\n      id: \"programNumber\",\n      label: \"Nº Programa\",\n    },\n    {\n      id: \"duration\",\n      label: \"Tiempo\",\n    },\n    {\n      id: \"actions\",\n      label: \"Acciones\",\n    },\n  ];\n\n  function handleNewTaskClick(machine: string) {\n    dispatch(setCreateTaskModalSelectedMachine(machine));\n    dispatch(setIsCreateTaskModalOpen(true));\n  }\n\n  return (\n    <>\n      {isLoading && (\n        <StyledMachinesHomePageLoadingWrapper>\n          <CircularProgress />\n          Cargando Datos...\n        </StyledMachinesHomePageLoadingWrapper>\n      )}\n      {tasks && (\n        <StyledMachinesHomePageWrapper>\n          <StyledTableWrapper>\n            <StyledTableHeaderWrapper>\n              <div className=\"flex-grow\" />\n              <h3 className=\"machines-home-page__machine-title\">Máquina 1</h3>\n              <div className=\"flex-grow machines__header-actions\">\n                <Button\n                  variant=\"contained\"\n                  color=\"secondary\"\n                  onClick={() => {\n                    handleNewTaskClick(MACHINE_1);\n                  }}\n                >\n                  Nuevo programa\n                </Button>\n              </div>\n            </StyledTableHeaderWrapper>\n            <LiteTasksTable\n              tasks={sortTasksByPriority(tasks.machine1)}\n              headCells={headCells}\n            />\n          </StyledTableWrapper>\n          <StyledTableWrapper>\n            <StyledTableHeaderWrapper>\n              <div className=\"flex-grow\" />\n              <h3 className=\"machines-home-page__machine-title\">Máquina 2</h3>\n              <div className=\"flex-grow machines__header-actions\">\n                <Button\n                  variant=\"contained\"\n                  color=\"secondary\"\n                  onClick={() => {\n                    handleNewTaskClick(MACHINE_2);\n                  }}\n                >\n                  Nuevo programa\n                </Button>\n              </div>\n            </StyledTableHeaderWrapper>\n            <LiteTasksTable\n              tasks={sortTasksByPriority(tasks.machine2)}\n              headCells={headCells}\n            />\n          </StyledTableWrapper>\n        </StyledMachinesHomePageWrapper>\n      )}\n    </>\n  );\n}\n\nexport default MachinesHomePage;\n","import { useParams } from \"react-router-dom\";\n\nimport { useSelector } from \"react-redux\";\n\nimport MachinesHomePage from \"./MachinesHomePage\";\nimport useMachinesHomeQuery from \"./queries/useMachinesHomeQuery\";\n\nfunction MachinesHomePageContainer() {\n  const { forceRender } = useSelector((state: any) => state.mainReducer);\n\n  const { isLoading, isError, data } = useMachinesHomeQuery(forceRender);\n\n  function handleTaskClick(taskId: string) {\n    console.log(\"hola\");\n  }\n\n  return (\n    <>\n      <MachinesHomePage\n        tasks={data}\n        handleTaskClick={handleTaskClick}\n        isLoading={isLoading}\n        isError={isError}\n      />\n    </>\n  );\n}\n\nexport default MachinesHomePageContainer;\n","import { useQuery } from \"react-query\";\n\n// Mocks\nimport {\n  getActiveTasks,\n  getTaskByMachineId,\n} from \"../../../mocks/tasksRepository\";\nimport { getMachineByName } from \"../../../mocks/machineRepository\";\nimport { MACHINE_1, MACHINE_2 } from \"../../../constants/machineNames\";\n\nexport default function useLoadMachineTasksQuery(forceRender: number) {\n  // el useQuery reb un array amb el nom de la \"action\" i les variables que si canvien torna a executar\n  return useQuery(\n    [\"loadMachinesHomeTasks\", forceRender],\n    async () => {\n      // TODO: const {data: activeTasks} = await axios.get(/api/tasks/active)\n\n      const activeTasks = getActiveTasks();\n\n      const machine1Tasks = activeTasks.filter(\n        (task) => task.machine.name === MACHINE_1\n      );\n\n      const machine2Tasks = activeTasks.filter(\n        (task) => task.machine.name === MACHINE_2\n      );\n\n      return {\n        machine1: machine1Tasks,\n        machine2: machine2Tasks,\n      };\n    },\n    {\n      refetchInterval: 60000,\n    }\n  );\n}\n","import { useSelector } from \"react-redux\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { TInitialState } from \"../../redux/store/initialState\";\n\ninterface IProtectedRouteProps {\n  path: string;\n  component: any;\n  exact?: boolean;\n}\n\nfunction ProtectedRoute(props: IProtectedRouteProps) {\n  const { path, component: Compo, exact, ...rest } = props;\n  const user = useSelector((state: TInitialState) => state.authReducer.user);\n\n  return (\n    <Route\n      path={path}\n      exact={exact}\n      {...rest}\n      render={(props) => (user ? <Compo {...props} /> : <Redirect to=\"/\" />)}\n    />\n  );\n}\n\nexport default ProtectedRoute;\n","import { useSelector } from \"react-redux\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { TInitialState } from \"../../redux/store/initialState\";\nimport { ROUTE_LOGIN, ROUTE_MACHINES } from \"../../routes/routes\";\n\ninterface ISuperProtectedRouteProps {\n  path: string;\n  component: any;\n  exact?: boolean;\n}\n\nfunction SuperProtectedRoute(props: ISuperProtectedRouteProps) {\n  const { path, component: Compo, exact, ...rest } = props;\n  const user = useSelector((state: TInitialState) => state.authReducer.user);\n\n  return (\n    <Route\n      path={path}\n      exact={exact}\n      {...rest}\n      render={(props) =>\n        user ? (\n          user.role === 0 ? (\n            <Compo {...props} />\n          ) : (\n            <Redirect to={ROUTE_MACHINES} />\n          )\n        ) : (\n          <Redirect to={ROUTE_LOGIN} />\n        )\n      }\n    />\n  );\n}\n\nexport default SuperProtectedRoute;\n","import { combineReducers } from \"redux\";\nimport mainReducer from \"./mainReducer\";\nimport authReducer from \"./authReducer\";\n\nexport default combineReducers({\n  authReducer,\n  mainReducer,\n});\n","import {\n  LOGIN_ERROR,\n  LOGIN_LOADING,\n  LOGIN_SUCCESS,\n  LOGOUT,\n} from \"../actions/actionTypes\";\n\nimport { TAction } from \"../../types/storeActionType\";\nimport { TAuthActions } from \"../actions/authActions\";\n\nexport default function authReducer(state: any = {}, action: TAuthActions) {\n  let newState = {};\n  switch (action.type) {\n    case LOGIN_LOADING:\n      newState = { ...state, loginLoading: true };\n      break;\n    case LOGIN_ERROR:\n      newState = {\n        ...state,\n        loginLoading: false,\n        loginError: action.payload.errorMessage,\n      };\n      break;\n    case LOGIN_SUCCESS:\n      newState = {\n        ...state,\n        loginLoading: false,\n        loginError: null,\n        user: action.payload.user,\n      };\n      break;\n\n    case LOGOUT:\n      newState = {\n        ...state,\n        user: null,\n      };\n      break;\n\n    default:\n      newState = state;\n      break;\n  }\n  return newState;\n}\n","import {\n  FORCE_RENDER,\n  SET_CREATE_TASK_MODAL_ISOPEN,\n  SET_CREATE_TASK_MODAL_SELECTED_MACHINE,\n} from \"../actions/actionTypes\";\n\nimport { TAction } from \"../../types/storeActionType\";\n\nexport default function mainReducer(state: any = {}, action: TAction) {\n  let newState = {};\n  switch (action.type) {\n    case FORCE_RENDER:\n      newState = { ...state, forceRender: ++state.forceRender };\n      break;\n\n    // Create task modal\n    case SET_CREATE_TASK_MODAL_ISOPEN: {\n      newState = {\n        ...state,\n        createTaskModal: { ...state.createTaskModal, isOpen: action.payload },\n      };\n      break;\n    }\n    case SET_CREATE_TASK_MODAL_SELECTED_MACHINE: {\n      newState = {\n        ...state,\n        createTaskModal: {\n          ...state.createTaskModal,\n          selectedMachine: action.payload,\n        },\n      };\n      break;\n    }\n\n    default:\n      newState = state;\n      break;\n  }\n\n  return newState;\n}\n","import { applyMiddleware, compose, createStore } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"../reducers\";\nimport { TInitialState } from \"./initialState\";\n\nexport default function configureStore(initialState: TInitialState) {\n  const composeEnhancers =\n    (window && (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n\n  return createStore(\n    rootReducer,\n    initialState,\n    composeEnhancers(applyMiddleware(thunk))\n  );\n}\n","import { TUserResponse } from \"../../types/employeeTypes\";\n\nexport type TMainReducer = {\n  forceRender: number;\n  createTaskModal: {\n    isOpen: boolean;\n    selectedMachine: string;\n  };\n};\n\nexport type TAuthReducer = {\n  user: TUserResponse | null;\n  loginLoading?: boolean;\n  loginError?: string;\n};\n\nexport type TInitialState = {\n  mainReducer: TMainReducer;\n  authReducer: TAuthReducer;\n};\n\nexport const initialState: TInitialState = {\n  mainReducer: {\n    forceRender: 0,\n    createTaskModal: {\n      isOpen: false,\n      selectedMachine: \"máquina1\",\n    },\n  },\n  authReducer: {\n    user: JSON.parse(localStorage.getItem(\"user\") as string) || null,\n  },\n};\n","import { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\nimport {\n  ROUTE_ADMIN_PROFILE,\n  ROUTE_EMPLOYEES,\n  ROUTE_EMPLOYEES_ID,\n  ROUTE_FINISHEDTASKS,\n  ROUTE_LOGIN,\n  ROUTE_MACHINES,\n  ROUTE_MACHINES_NAME,\n} from \"./routes/routes\";\n\nimport AdminProfilePageContainer from \"./pages/AdminProfilePage/AdminProfilePageContainer\";\nimport CreateTaskDialog from \"./components/CreateTaskDialog/CreateTaskDialogContainer\";\nimport EmployeePageContainer from \"./pages/EmployeePage/EmployeePageContainer\";\n// pages\nimport EmployeesListPageContainer from \"./pages/EmployeesListPage/EmployeesListPageContainer\";\nimport FinishedTasksPageContainer from \"./pages/FinishedTasksPage/FinishedTasksPageContainer\";\n// components\nimport Layout from \"./components/Layout/Layout\";\nimport LoginPage from \"./pages/LoginPage/LoginPage\";\nimport MachinePageContainer from \"./pages/MachinePage/MachinePageContainer\";\nimport MachinesHomePageContainer from \"./pages/MachinesHomePage/MachinesHomePageContainer\";\nimport ProtectedRoute from \"./components/ProtectedRoute/ProtectedRoute\";\nimport { Provider } from \"react-redux\";\nimport SuperProtectedRoute from \"./components/SuperProtectedRoute/SuperProtectedRoute\";\nimport { Toaster } from \"react-hot-toast\";\nimport configureStore from \"./redux/store/configureStore\";\nimport { initialState } from \"./redux/store/initialState\";\n\nconst queryClient = new QueryClient();\n\nfunction App() {\n  return (\n    <>\n      <Provider store={configureStore(initialState)}>\n        <QueryClientProvider client={queryClient}>\n          <BrowserRouter basename=\"/corobcat\">\n            <Switch>\n              <Route path={ROUTE_LOGIN} exact>\n                <LoginPage />\n              </Route>\n              <Layout>\n                <ProtectedRoute\n                  path={ROUTE_EMPLOYEES}\n                  exact\n                  component={EmployeesListPageContainer}\n                />\n                <ProtectedRoute\n                  path={ROUTE_EMPLOYEES_ID}\n                  component={EmployeePageContainer}\n                />\n                <ProtectedRoute\n                  path={ROUTE_FINISHEDTASKS}\n                  component={FinishedTasksPageContainer}\n                />\n                <ProtectedRoute\n                  path={ROUTE_MACHINES}\n                  exact\n                  component={MachinesHomePageContainer}\n                />\n                <ProtectedRoute\n                  path={ROUTE_MACHINES_NAME}\n                  component={MachinePageContainer}\n                />\n                <SuperProtectedRoute\n                  path={ROUTE_ADMIN_PROFILE}\n                  component={AdminProfilePageContainer}\n                />\n              </Layout>\n            </Switch>\n          </BrowserRouter>\n\n          <CreateTaskDialog />\n        </QueryClientProvider>\n        <Toaster\n          toastOptions={{\n            duration: 2000,\n          }}\n        />\n      </Provider>\n    </>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\nreportWebVitals();\n"],"sourceRoot":""}